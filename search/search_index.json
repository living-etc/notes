{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Chris' Notes Hi there, I'm Chris and these are my notes. I can't promise you any kind of quality since I wrote them for myself.","title":"Chris' Notes"},{"location":"#chris-notes","text":"Hi there, I'm Chris and these are my notes. I can't promise you any kind of quality since I wrote them for myself.","title":"Chris' Notes"},{"location":"AWS%20Services/Config/","text":"","title":"Config"},{"location":"AWS%20Services/EC2/","text":"Amazon EC2 is the reason you can get your application onto a server in 10 minutes with nothing more than a credit card. It provides a choice of nearly 400 instance for various types of workloads including: memory, CPU network optimization; GPU workloads; and a choice of Linux flavors as well as Windows and macOS. You can configure the CPU and memory of your instance for your workload, paying based on your choice, and you can terminate it at any time, instantly stopping spending money. Common components of an EC2 instance Reservations Amazon Machine Images Launch Permissions How You're Charged Linux AMI virtualization types Boot Modes Instances Start, stop and terminate instances Instance Types Overview Hardware Specifications Processor Features AMI Virtualisation Types Instance Built on the Nitro System Network and Storage Features Networking Features Storage Features Instance limits General Purpose Instance Performance Network Performance SSD I/O Performance Instance Features Burstable Performance Instances Instance Purchasing Options On-Demand Instances Reserved Instances Commitment Term Payment Options Offering Classes Scope Normalization Factor Usage Billing Consolidated Billing Modifying Reserved Instances Exchange Reserved Instances Spot Instances Best Practices How Spot Instances Work Savings from purchasing Spot Instances Spot Instance Requests Rebalance recommendations Spot Instance Interruptions Billing for interrupted spot instances Spot Instance data feed Spot Instance limits Burstable Performance Instances Dedicated Hosts Dedicated Instances On-Demand Capacity Reservations Fleets EC2 Fleets Spot Fleets Monitor Fleet Events Monitor Monitoring with CloudWatch Networking Security Storage Resource and tags Troubleshoot Common components of an EC2 instance Instance, the VM EBS volume for persistent storage SSH Keypair for secure access Security group AMI Instance type with configurable CPU, memory, storage and network throughput Elastic IP Address for public access Tags Multiple physical locations for instances and EBS volumes, called Regions and Availability Zones An IAM role defining the permissions the instance has Platform, the operating system running in the instance Tenancy Reservations Describes a launch request for one or more instances, and includes owner, requester, and security group information that applies to all instances in the launch request. Docs AWS EC2 what is a reservation ID exactly and what does it represent? [ Serverfault ] Amazon Machine Images An AMI contains the following: - a snapshot of an EBS volume for EBS-backed instances, or a template for the root volume for instance-store-backed instances - launch permissions that define which AWS accounts have permission to launch instances with the AMI - A block device mapping that specific the volumes to attach to the instance at startup Launch Permissions public: the owner grants launch permissions to all AWS accounts explicit: the owner grants launch permissions to specific AWS accounts implicit: the owner has implicit launch permissions for an AMI How You're Charged With AMIs backed by instance store, you're charged for instance usage and storing your AMI in Amazon S3. With AMIs backed by Amazon EBS, you're charged for instance usage, EBS volume storage and usage, and storing your AMI as an EBS snapshot. Linux AMI virtualization types Paravirtual (PV) AMIs include special drivers for greater network and disk I/O performance. It is an older virtualization type that has been superseded by Hardware Virtual Machine (HVM) AMIs which now have PV drivers available to them. As such, latest generation instance types do not support PV AMIs. Boot Modes AMIs have an optional launch boot mode parameter which overrides the default boot mode defined by the CPU family of the instance type - UEFI for Graviton instance types and legacy-bios for Intel and AMD. In order for an instance to launch successfully with the specified boot mode, the operating system must be configured to support it. This configuration is different for different operating systems. Intel and AMD instances can only launch with UEFI on latest generation instance types. UEFI Secure Boot is currently not supported. Instances Start, stop and terminate instances You can stop an EBS-backed instance and all of its EBS volumes remain attached. You can restart the instance any time, and you will not be charged when the instance is stopped. While stopped, you can change the instance type, kernel and RAM disk. You cannot stop and instance-store-backed instance. You can terminate an instance to shut it down. When this happens, its root volume is deleted, but any other attached EBS volumes are preserved by default, unless the volumes deleteOnTermination attribute specifies otherwise. You can prevent accidental termination of an instance by setting its disableApiTermination attribute to true , and you can control the shutdown behavior of the operating system ( shutdown -h on Linux and shutdown on Windows) by setting the instanceInitiatedShutdownBehavior attribute to stop or terminate as desired. Instance Types Overview Each instance type is grouped onto a particular host computer based on its instance family. For example, all T-type instance will be grouped onto computers dedicated to that type. While some resources of the host computer are dedicated to the guest instances (such as CPU and Memory) other resources, such as network and disk subsystem, are shared. When these shared resources are underused, an instance can use a high share than if all instance were trying to use it at once, in which case they would each receive an equal share. Hardware Specifications EC2 instance typically run on 64-bit virtual Intel CPUs. Processor Features Amazon EC2 instances that run on Intel processors may include the following features. Not all of the following processor features are supported by all instance types. Intel AES New Instructions (AES-NI) - Intel AES-NI encryption instruction set improves upon the original Advanced Encryption Standard (AES) algorithm to provide faster data protection and greater security. All current generation EC2 instances support this processor feature. Intel Advanced Vector Extensions (Intel AVX, Intel AVX2, and Intel AVX-512) - Intel AVX and Intel AVX2 are 256-bit, and Intel AVX-512 is a 512-bit instruction set extension designed for applications that are Floating Point (FP) intensive. Intel AVX instructions improve performance for applications like image and audio/video processing, scientific simulations, financial analytics, and 3D modeling and analysis. These features are only available on instances launched with HVM AMIs. Intel Turbo Boost Technology - Intel Turbo Boost Technology processors automatically run cores faster than the base operating frequency. Intel Deep Learning Boost (Intel DL Boost) - Accelerates AI deep learning use cases. The 2nd Gen Intel Xeon Scalable processors extend Intel AVX-512 with a new Vector Neural Network Instruction (VNNI/INT8) that significantly increases deep learning inference performance over previous generation Intel Xeon Scalable processors (with FP32) for image recognition/segmentation, object detection, speech recognition, language translation, recommendation systems, reinforcement learning, and more. VNNI may not be compatible with all Linux distributions. The following instances support VNNI: M5n , R5n , M5dn , M5zn , R5b , R5dn , D3 , and D3en . C5 and C5d instances support VNNI for only 12xlarge , 24xlarge , and metal instances. AMI Virtualisation Types Current generation instance support the Hardware Virtual Machine (HVM) type only. Some older instance types support Paravirtual (PV), but only in specific regions. Instance Built on the Nitro System Nitro is a collection of AWS-built hardware and software components that increase performance of guest instance by reducing the virtualization overhead The following components are part of the Nitro System: Nitro card Local NVMe storage volumes Networking hardware support Management Monitoring Security Nitro security chip, integrated into the motherboard Nitro hypervisor - A lightweight hypervisor that manages memory and CPU allocation and delivers performance that is indistinguishable from bare metal for most workloads. Network and Storage Features The network and storage features of an instance are determined by the instance type. Networking Features IPv6 is supported on all current generation instance types Placement groups are available for supported instance types to affect the distribution of instance where network latency between instances is important. Enhanced networking is available on all current generation instance types with the following benefits: Traffic within the same region using IPv4 or IPv6 can support up to 5Gbps for single-flow traffic and up to 25Gbps for multi-flow. Traffic to and from S3 buckets within the same region over public IP address space or through a VPC endpoint can use all available instance aggregate bandwidth. The maximum transmission unit (MTU) varies across instance types. All instance types support standard Ethernet V2 1500 MTU. All current generation instance types support 9001 MTU, or jumbo frames. Storage Features All instance types support EBS volumes, while only some support instance store volumes. You can gain additional EBS I/O by using EBS-optimised instances. Some instance types are EBS-optimised by default. Instance limits The limit on the number of a particular instance type an account can run is based on the number of vCPUs in use. vCPU limits only apply to on-demand and spot instances, not to reserved instances. General Purpose General purpose instance types provide a balance of compute, memory and networking resources, and can be effectively utilised for a wide range of workloads. The following general purpose instance types are available: M5 and M5a - standard general purpose instances running on Intel Xeon\u00ae Platinum 8175M processors (M5) or AMD EPYC 7000 series processors (M5a) CPUs. Ideal for: small and midsize databases; data processing tasks that require additional memory; caching fleets; and backend servers for enterprise applications such as SAP, Sharepoint, etc. M5zn - ideal for applications that benefit from extremely high single-thread performance to high throughput, low latency networking . Well suited for gaming, high-performance computing and simulation modeling. powered by Intel Xeon Scalable processors in the cloud, with an all-core turbo frequency up to 4.5 GHz. M6g and M6gd - balanced compute, memory and networking resources running on AWS Graviton2 CPUs, ideal for a broad range of general purpose workloads, including application servers, microservices, gaming servers, midsize data stores and caching fleets. M6gd instances have local NVMe-based SSDs physically connected to the host server, as opposed to the M6g instances that use EBS. m6g.metal - bare metal version of the M6g. M6i - higher-spec-ed Intel Xeon CPUs than M5 highest maximum network speed of the general purpose instance types, at up to 50 Gbps powered by 3rd generation Intel Xeon Scalable processors (code named Ice Lake). Support for new Intel Advanced Vector Extensions (AVX 512) instructions for faster execution of cryptographic algorithms. Support for always-on memory encryption using Intel Total Memory Encryption (TME). Mac1 - powered by Apple Mac Mini computers. T2, T3, T3a and T4g - burstable performance instance types. T2 is last generation, T3 current generation Intel CPU, T3a current generation AMD CPU and T4g current generation Graviton2 CPU. Ideal for intermittent workloads, such as: websites and web applications code repositories non-production test environments microservices Instance Performance Some instance types allow you to control the C-states and P-states of the CPU. EBS-optimised instances improve the performance of traffic to and from EBS. Network Performance You can enable enhanced networking on supported instance types to provide lower latencies, lower network jitter, and higher packet-per-second (PPS) performance. Most applications do not consistently need a high level of network performance, but can benefit from access to increased bandwidth when they send or receive data. Some instance types have a baseline network IO which they can burst above with a network I/O credit mechanism, similar to the burstable CPU instance types. SSD I/O Performance Instance Features Burstable Performance Instances Instance Purchasing Options On-Demand Instances With On-Demand Instances, you pay for compute capacity by the second with no long-term commitments. You have full control over its lifecycle\u2014you decide when to launch, stop, hibernate, start, reboot, or terminate it. It's recommended to use On-Demand Instances for applications with short-term, irregular workloads that cannot be interrupted. Reserved Instances Reserved instance (RIs) aren't physical instances, rather a discount applied to the AWS bill tot he use of on-demand instances. These instances must match certain attributes, instance type and region. If you already have on-demand instance running that match the attributes of your reserved instances, then the RIs will be immediately applied to those running instances. This applies to both zonal and regional RIs. Commitment Term The term commitment, which isn't automatically renewed, is either: One-year : A year is defined as 31536000 seconds (365 days). Three-year : Three years is defined as 94608000 seconds (1095 days). Payment Options RIs have the following payment options: All Upfront - full payment is made at the start of the term Partial Upfront - a portion of the total cost is paid upfront, and the remainder paid through a discounted hourly rate. You'll pay this regardless of whether or not the instances are being used. No Upfront - you are billed the discounted hourly rate for the duration of the commitment period, regardless of whether the instance is being used. Reserved instance to do automatically renew. To ensure uninterrupted savings, you can queue a RI purchase up to three years in advance. Offering Classes There are two offering classes of RIs: Standard - provide the largest discount, but can only be modified, not exchanged. These RIs can be bought and sold in the RI marketplace but can't be exchanged for other RIs. Convertible - provides a lower discount, but can be exchanged for another convertible RI with different attribute. Can also be modified. These can't be bought or sold in the RI marketplace. Scope RIs have two possible scopes - regional , where the RI is scopes to a particular region, and zonal , where the RI is scopes to a single availability zone. They have the following differences: capacity reservation - a regional RI does not reserve capacity, whereas a zonal RI does reserve capacity in the specified AZ. AZ flexibility - a regional RI can be launched in any AZ in the region, whereas a zonal RI is tied to the AZ in which it's been purchased. instance size flexibility - regional RIs can be used on any size of instance within the instance family, whereas a zonal RI is purchased for a specified size and type of instance queuing a purchase - purchases for regional RIs can be queued, whereas purchases for zonal RIs can't. Normalization Factor Each instance has an instance size footprint that determines its normalization factor. Some examples of instance normalization factors can be seen in this table. Instance Size Normalization Factor nano 0.25 micro 0.5 small 1 medium 2 large 4 What this means is if you purchase a t3.medium RI, and have two t3.small on-demand instances running, then the discount will be applied to both instances in full. On the other hand, if your instead have a single large on-demand instance running, the discount will only be applied to half the cost of the instance. Normalization factors also exist for bare metal instances, but does not scale in the same way as for normal instances. For example, an i3.metal instance has the same normalization factor of 128 as a i3.16xlarge . Usage Billing RIs are generally charged per clock-hour during the commitment period. Per-second billing is available for instances running an open source Linux distribution, whereas per-hour billing is used for commercial distributions. A single RI billing benefit can only apply to a total of 3600 seconds (one hour) of instance usage per clock hour. These second can be allocated to a single instance, or spread across multiple instances. If you purchase a single t3.medium RI and run four t3.medium instances for an hour, one instance will receive the RI discount while the other three are charged at the on-demand price. On the other hand, if you run your four t3.medium instances for fifteen minutes each, they all receive the RI discount and no on-demand charge will be applied. Consolidated Billing RIs that are purchased in an account that is the payer account for a set of consolidated billing accounts, then the benefits of those RIs are shared across all the members accounts. Modifying Reserved Instances You can modify the following attributes of your standard and convertible RIs: AZ within a region Scope, from regional to zonal and vice versa Instance size within the same instance family Network, from EC2-classic to VPC and vice versa (only available in accounts created after 2013-12-04) You can allocate your reservation into different instance sizes across an instance family, provided the instance size footprint is unchanged after the modification. Exchange Reserved Instances Only available on convertible reserved instances. Not available on standard. A convertible RI can be exchanged for another convertible RI with different attributes, including instance family, platform (operating system) and tenancy. The following rules apply: convertible RIs can only be exchanged for other convertible RIs you cannot exchange for RIs in another region you can receive only one new convertible RI at a time, but can exchange one or more RI. you can modify a reservation and trade part of the split you can mix and match some payment options, but not all All Upfront can be exchanged for Partial Upfront, and vice versa No Upfront can be exchanged for All or Partial Upfront No Upfront can be exchanged for another No Upfront You cannot exchange All or Partial Upfront for No Upfront, provided the new instances hourly price is at least as high as the old one if you exchange multiple RIs, the expiration date of the new RI is the one furthest in the future if you exchange a single RI, it must have the same term as the new one if you merge multiple RIs with different lengths, the new RI has a 3 year term. Spot Instances A Spot Instance is an instance that uses spare EC2 capacity that is available for up to 90% less than the on-demand price. Concepts: Spot capacity pool - a set of unused EC2 instance with the same instance type ( t3.medium ) in the same AZ Spot price - the current price of a spot instance per hour Spot instance request - EC2 instance rebalance recommendation - a notice emitted by EC2 that an instance is at increased risk of being interrupted due to reduced spot capacity being available. Spot instance interruption - a two-minute notice emitted by EC2 when spot capacity has been exhausted and an instance is going to be interrupted. Best Practices Spot Instances are recommended for stateless, fault-tolerant, flexible applications. Spot Instances are not suitable for workloads that are inflexible, stateful, fault-intolerant, or tightly coupled between instance nodes. Prepare individual instance for interruptions . Create a rule in amazon EventBridge to capture the two possible signals - rebalance recommendation and instance interruption. Be flexible about instance types and Availability Zones . This give spot a better chance at finding available capacity. A good rule of thumb is to be flexible across at least 10 instance types for each workload. In addition, make sure that all Availability Zones are configured for use in your VPC and selected for your workload. Use EC2 Auto Scaling groups or Spot Fleet to manage your aggregate capacity . Prefer to think in terms of resources such as vCPU and memory capacity, rather than instance capacity. This way you can use Auto Scaling groups and Spot Fleets to maintain versatile fleets of compute resource. Use the capacity optimized allocation strategy . Use the capacity optimised allocation strategy of your auto scaling group to provision spot instances on servers that have the most spare capacity. This decreased the change of your instance being reclaimed. Use proactive capacity rebalancing . Capacity Rebalancing helps you maintain workload availability by proactively augmenting your fleet with a new Spot Instance before a running Spot Instance receives the two-minute Spot Instance interruption notice. Combine multiple of the above . Combine the Capacity Rebalancing feature of the Spot Fleet with the capacity optimised allocation strategy of the auto scaling group as well mixed instance policy to maximize the flexibility of your capacity across multiple availability zones. How Spot Instances Work Launch Spot Instances in a launch group . You can request to have a number of spot instances launched into a single group together. The request will only succeed if the entire group can be launched at once, and if the spot price exceeds your maximum, they will all be terminated at once. This is inflexible and reduces the likelihood of your request succeeding. Launch Spot Instances in an Availability Zone group . Same as the launch group, but where the spot instances are launched into an availability zone. Same limitations as well. The instances will be launched in the AZ for the specified subnet. Launch Spot Instances in a VPC . Specify a subnet into which the spot instances are launched. Savings from purchasing Spot Instances To view the savings information for a Spot Fleet (console) Open the Amazon EC2 console at https://console.aws.amazon.com/ec2/ . On the navigation pane, choose Spot Requests . Select the ID of a Spot Fleet request and scroll to the Savings section. Alternatively, select the check box next to the Spot Fleet request ID and choose the Savings tab. Spot Instance Requests You can request to launch dedicated spot instances, either by specifying the tenancy in the spot request, or by requesting to launch into a VPC with an instance tenancy of dedicated . Rebalance recommendations An EC2 instance rebalance recommendation is a signal emitted when a spot instance is at increased risk of interruption. The signal can arrive sooner than the two-minute spot-instance interruption signal, giving you more time to respond to the lack of available capacity, though rapid changes in capacity mean the rebalance recommendation signal can arrive alongside the interruption signal. There are two ways this signal can be handler: Amazon EventBridge and instance metadata. Using EventBridge, a signal looking like this will arrive: { \"version\": \"0\", \"id\": \"12345678-1234-1234-1234-123456789012\", \"detail-type\": \"EC2 Instance Rebalance Recommendation\", \"source\": \"aws.ec2\", \"account\": \"123456789012\", \"time\": \"yyyy-mm-ddThh:mm:ssZ\", \"region\": \"us-east-2\", \"resources\": [ \"arn:aws:ec2:us-east-2:123456789012:instance/i-1234567890abcdef0\" ], \"detail\": { \"instance-id\": \"i-1234567890abcdef0\", \"instance-action\": \"terminate\" } } You can create an EventBridge rule to handle it. Using instance metadata, you can retrieve the signal with the following command: curl <http://169.254.169.254/latest/meta-data/events/recommendations/rebalance> If the signal has been emitted, you will see the following result {\"noticeTime\": \"2020-10-27T08:22:00Z\"} or else you will get a 404 back. Spot Instance Interruptions A spot instance can be terminated for the following reasons: - price - the spot price is greater than your maximum price - capacity - if available capacity drops too far, EC2 will reclaim running spot instances to fulfill on-demand capacity requirements - constraints - constraints in the spot request, such as AZ or launch group, are no longer met. You can specify what EC2 does when it interrupts a spot instance: - stop the interrupted instance - hibernate the interrupted instance - terminate the interrupted instance (default) To stop a spot instance, the following prerequisites must be met: - Spot instance request type - must be persistent , and musn't specify a launch group. - EC2 Fleet or Spot Fleet request type - must be maintain . - Root volume type - must be EBS. Once a spot instance has been stopped by the spot service, only the spot service can restart it when capacity becomes available to satisfy the spot instance request. To hibernate a spot instance, the following prerequisites must be met: - Spot instance request type - must be persistent , and musn't specify a launch group. - EC2 Fleet or Spot Fleet request type - must be maintain . - Supported instance families \u2013 C3, C4, C5, M4, M5, R3, R4 - Instance RAM size \u2013 must be less than 100 GB - Supported operating system - you must install the hibernation agent, or use an AMI that already has it. - Root volume type - must be EBS, and must be large enough to store the instance memory When a spot instance is hibernated, its EBS volume and private IP addresses are preserved and instance memory is saved to the volume. If there is not enough space on the volume, the hibernation agent isn't installed, or the OS doesn't support hibernation, hibernation fails and the instance is sopped instead. Spot instance bests practices - Use the default maximum price, which is the On-Demand price. - Store important data regularly in a place that isn't affected by instance interruption - Divide the work into small tasks (using a Grid, Hadoop, or queue-based architecture) or use checkpoints so that you can save your work frequently. - Use the rebalance recommendation and two-minute interruption signals to manage the capacity of your spot instances. - Remember it is possible for the spot instance to be interrupted before the two-minute signal is received. - It is recommended to check for interruption notices every five seconds. To prepare a spot instance for hibernation: - Install the hibernation agent - Amazon Linux: sudo yum install hibagent - Ubuntu: sudo apt-get install hibagent - Add the following to user data #!/bin/bash /usr/bin/enable-ec2-spot-hibernation Spot instance that are configured to hibernate on interruption, rather than stop, will not receive the interruption signal two minutes prior to interruption. Instead, hibernation will happen immediately, and only instance intended to be stopped will have two minutes to react. If the instance is to be stopped or terminated, the time of this action can be found in the instance metadata: TOKEN=`curl -X PUT \"<http://169.254.169.254/latest/api/token>\" -H \"X-aws-ec2-metadata-token-ttl-seconds: 21600\"` \\\\\\\\ curl -H \"X-aws-ec2-metadata-token: $TOKEN\" \u2013v <http://169.254.169.254/latest/meta-data/spot/instance-action> {\"action\": \"stop\", \"time\": \"2017-09-18T08:22:00Z\"} You can look for BidEvictedEvent events in CloudTrail to see if Amazon EC2 interrupted a spot instance. Billing for interrupted spot instances Who interrupts the Spot Instance Operating system Interrupted in the first hour Interrupted in any hour after the first hour If you stop or terminate the Spot Instance Windows and Linux (excluding RHEL and SUSE) Charged for the seconds used Charged for the seconds used RHEL and SUSE Charged for the full hour even if you used a partial hour \"Charged for the full hours used and charged a full hour for the interrupted partial hour\" If the Amazon EC2 Spot service interrupts the Spot Instance Windows and Linux (excluding RHEL and SUSE) No charge Charged for the seconds used RHEL and SUSE No charge \"Charged for the full hours used but no charge for the interrupted partial hour\" Spot Instance data feed The spot instance data feed is a file delivered to an S3 bucket ever hour describing the cost usage of your spot instances for the previous hour. The files are gzipped, and can be split into multiple files is the usage is high enough. Spot Instance limits Spot instances are limited by the number of vCPUs being utilized by either running or requested spot instances. That means if you terminate your spot instances, but don't cancel the spot request, the request will still contribute towards the spot instance limit. Current spot limits can be found here . Burstable Performance Instances Dedicated Hosts Dedicated Instances On-Demand Capacity Reservations Fleets A fleet allows you to launch multiple instances with a single API call. A fleet can contain multiple instance types and purchasing options and can be launched across multiple availability zones. There is no additional cost for using EC2 fleet. You pay only for the EC2 instances. EC2 Fleets EC2 fleets are a way of launching multiple instances with a single API call. When you launch a fleet, you specify your maximum capacity and budget, and EC2 will launch instances until one of those limits has been reached. When specifying the desired capacity of the fleet, the default is number of instances, but you can also specify vCPUs, memory, storage or throughput. Both spot and on-demand instances can be launched in the same fleet, with different capacities for each. If you have reserved instances for an instance type in your fleet, they will be used when you launch the on-demand instances. Multiple instance types can be specified, with weighted capacities specified for each. Fleets isn't available through the AWS console. It's only available through the CLI and API. The fleet request is limited to a single region, and to a single subnet in an availability zone. Aside: this can be combined with a placement group to deploy instances that need to talk to each other while processing their workload. There are three fleet request types instant - EC2 Fleet places a synchronous one-time request for the desired capacity and returns the instances launched in the API response. request - EC2 Fleet places a synchronous one-time request for the desired capacity and does not attempt to replenish capacity by replacing interrupted spot instances. maintain - this is the default, where EC2 Fleet places an asynchronous request for the desired capacity, and maintains capacity by replacing any interrupted spot instances. The instant and request types will make only one attempt to launch the desired capacity. Any instances that fail to launch will not be retried. Amazon EC2 Auto Scaling and Amazon EMR are built around EC2 Fleet, both using an instant request type. An EC2 Fleet has the following allocation strategies for spot instances: lowest-price - this is the default, where the spot instance comes from the capacity pool with the lowest price. Optionally specify InstancePoolsToUseCount to launch spot instances over a particular number of capacity pools to diversify you diversified - the spot instances are distributed across all capacity pools. capacity-optimized - the spot instances are launched into the pool with the highest capacity available. You can optionally specify a priority for each instance type in the fleet using capacity-optimized-prioritized . On Demand capacity reservations can be used to fulfill fleet requests only if the request type is instant. EC2 Fleets of type maintain can be configured for Capacity Rebalancing, where they automatically respond to rebalance recommendation signals emitted when a spot instance is at an elevated risk of being interrupted. This needs to be configured in the MaintenanceStrategies structure of the fleet request. This can only be configured when the fleet is created. Once the fleet is running, it cannot be changed. Note that the instance marked for rebalance is not automatically terminated. EC2 Fleet can launch new spot instances until the current capacity is double the target capacity. This allows a fleet composed entirely of spot instances to all be marked for rebalance, and to have their replacements launched automatically. It does, however, prevent any of those replacements being replaced until the old instances are terminated. Spot instance marked for rebalance are not counted towards the desired capacity during scale-in or scale-out. Instance marked for rebalance will continue to be a part of your fleet until you terminate them, and will cause your actual capacity to be greater than the fulfilled capacity until you do so. It is recommended to provide as many spot capacity pools in the request as possible, and to be flexible with the availability zone. You can use instance weighting to specify the number of units each instance contributes towards the target capacity. The fleet request doesn't know about vCPUs or memory, rather you use the launch specification to say how many unit each instance contributes towards the target capacity. The price of the instance is altered by this, where the price per instance hour becomes the price per unit hour . For example, if you wanted your capacity based on vCPUs and you specified a m5.8xlarge with 32 vCPUs, it would contribute 32 units towards the capacity, and its price per unit hour would be $1.536 / 32 = $0.048. Instance weighting can cause the fulfilled capacity to be a floating point number, which must be taken into account when setting up things like cloudwatch alarms to trigger when the fulfilled capacity changes. The floating point number will sometimes be rounded up, depending on what other system is analyzing it. Spot Fleets A spot fleet has all the same capability as an EC2 Fleet. The principal difference is where an EC2 Fleet consists of on-demand instances with optional spot instance, a spot fleet consists of spot instances with optional on-demand instances. Spot Fleets support Application Auto Scaling, which provides the following scaling policies: target tracking - increase or decrease the capacity by tracking a particular metric, such as average CPU load across the fleet. step scaling - increases the fleet either by a specified number of capacity units, or a percentage of the current capacity. scheduled scaling - increase or decrease the capacity based on the date and time. The fleet must have a request type of maintain to use automatic scaling. Monitor Fleet Events There are five event types for EC2 Fleets: EC2 Fleet State Change EC2 Fleet Spot Instance Request Change EC2 Fleet Instance Change EC2 Fleet Information EC2 Fleet Error The same five event types are available for spot fleets. Monitor To begin monitoring your EC2 instances, you should create a baseline of performance by observing the instances at different times of day and under different loads. Measure the following metrics during this time: CPU Utilization Network Utilization Disk Performance Disk Reads/Writes Memory utilization, disk swap utilization, disk space utilization, page file utilization, log collection Monitoring can either be automated using services like CloudWatch Alarms and EventBridge, or it can be done manually using CloudWatch Dashboards. There are two types of status checks built into EC2: system status checks and instance status checks . A failed system status check indicates a problem that AWS needs to repair. If you don't want to wait for that you can migrate your instance to a new host (stop and start for EBS-backed, terminate and relaunch for instance-store-backed). A failed instance status check indicates a problem with the instance, such as exhausted memory or incompatible kernel. A scheduled event is a form of maintenance AWS will perform on your instance on your behalf. Monitoring with CloudWatch Metrics for your instance can be collected and stored in CloudWatch for 15 months. EC2 sends data to CloudWatch in 5 minute intervals by default, or 1 minute intervals if detailed monitoring is enabled for the given instance. When detailed monitoring is enabled, you are charged per metric you send to CloudWatch, not for data storage. Networking Regions and Zones Amazon EC2 is composed of the following geographical entities: - Region - the standard AWS geographical unit. When deploying resources and services, you always specify the region they will be placed in. Each region is physically isolated from the others, preventing failures in one affecting the others. - Availability Zones - a subset of a region, physically isolated from the other AZs in that region, preventing failures in one affecting the others. AZs are named differently for each AWS account, so us-east-1a will not be the same datacentre for all accounts. If you need to coordinate resources in AZ across accounts, you can use the AZ ID to do this, which takes the form of use1-az1 . These IDs always refer to the same AZs in each account. - Local Zones - an extension of an AWS region, allowing you to deploy resources and services even closer to your users. Currently only available in us-east-1 and us-west-2 . - Wavelength Zones - another extension of a region, allowing you to deploy resources to the edge of a 5G carriers network. It works by having you extend your VPC to the carriers network, and opting in to the wavelength zone that will be created as a result. You deploy resources into this zone in the same way you would into an availability zone. - AWS Outposts - a way of extending AWS into an on-prem datacentre. You create a VPC in AWS then create one or more subnets on the Outpost. You can then deploy resources into that subnet in your datacentre while managing them through the AWS console and API. Enhanced Networking Enhanced networking uses a form of virtualisation (single root I/O virtualisation, or SR-IOV) to provide higher bandwidth, higher packer per second performance (PPS) and lower inter-instance latencies. There is no additional charge for using Enhanced Networking. So why would you not just enable it by default? You need to enable it in the kernel. OSs won't come with that support by default. Enhanced networking is available by using one of two possible virtual network interfaces: AWS' own Enhanced Network Adaptor (ENA) or the Intel 82599 Virtual Function (VF) interface. The ENA offers network speeds of up to 100 Gbps while the Intel device only offers 10 Gbps. Enhanced Networking using the Elastic Network Adaptor Enhanced networking is provided by a virtual network interface called the Elastic Network Adaptor (ENA). To use this device, you must first install and enable the ENA module in the kernel of the guest OS. You can verify that the ENA kernel module is installed using the following command: [ec2-user ~]$ modinfo ena filename: /lib/modules/4.14.33-59.37.amzn2.x86_64/kernel/drivers/amazon/net/ena/ena.ko version: 1.5.0g license: GPL description: Elastic Network Adapter (ENA) author: Amazon.com, Inc. or its affiliates srcversion: 692C7C68B8A9001CB3F31D0 alias: pci:v00001D0Fd0000EC21sv*sd*bc*sc*i* alias: pci:v00001D0Fd0000EC20sv*sd*bc*sc*i* alias: pci:v00001D0Fd00001EC2sv*sd*bc*sc*i* alias: pci:v00001D0Fd00000EC2sv*sd*bc*sc*i* depends: retpoline: Y intree: Y name: ena You can verify an AMI has ENA support using this AMI query: aws ec2 describe-images --image-id ami_id --query \"Images[].EnaSupport\" You can verify the ENA driver is being used on a particular network interface like so: [ec2-user ~]$ ethtool -i eth0 driver: ena version: 1.5.0g firmware-version: expansion-rom-version: bus-info: 0000:00:05.0 supports-statistics: yes supports-test: no supports-eeprom-access: no supports-register-dump: no supports-priv-flags: no Enabling Enhanced Networking Enabling it on Ubuntu Enabling it on Amazon Linux Enabling it on Linux Elastic Fabric Adapter Placement Groups A placement group is a way of influencing the way instances are distributed across an availability zone. There are three types of placement group, and there is no charge for using them. Cluster A cluster placement group is where instances are grouped together in a single availability zone. They enjoy a higher per-flow throughput limit for TCP/IP traffic and are placed in the same high-bisection bandwidth segment of the network. Cluster placement groups are recommended for workloads that require low network latency, high network throughput, and/or where most of the traffic is between instances. It is recommended: - to use Enhanced Networking with this configuration. - to launch all instances in a cluster with a single launch request. A cluster placement group runs on the same hardware, which is why they are able to get such good network connections between instances. As such, attempting to launch new instances into an existing placement group, or stopping some instances in a cluster to be restarted later, might result in capacity errors since the physical server is now full up. This problem can be solved by stopping and starting all instances in the placement group so they can be migrated to hardware that has capacity for all requested instances. Rules and limitations All current generation instance types are supported, except burstable performance instances and Mac instances. It can't span multiple AZs Network throughput is limited to what the slowest instance supports When Enhanced Networking is enabled, instances within a cluster placement group can use up to 10 Gbps for single flow traffic, but only up to 5 Gbps when not in one. Partition A partition placement group is a grouping of instances into one or more partitions within a region. All the instances in a particular partition will be deployed across a set of racks that they share with no other partition. The racks of a partition will have power sources that are shared with no other racks. The purpose of a partition placement group is to reduce the likelihood of correlated hardware failures affecting the application running across the instances. It is most useful for replicated workloads, and even allows topology-aware applications to see which instances are in each partition so they can make intelligent replication decisions. Rules and limitations Max 7 partitions per placement group. Max number of instances is limited by account. When launching multiple instances into a placement group, there is no guarantee of even distribution of instances across partitions. A partition placement group with Dedicated instances can have a maximum of two partitions. Spread A spread placement group is a set of instances that are each placed on distinct racks. This is recommended for applications that have a small number of critical instances. A spread placement group can span multiple AZs per region, and you can have up to seven instances per AZ per group. Rules and limitations Maximum of seven instances per AZ. If you need more than seven, it is recommended to run multiple spread placement groups. Do not support dedicated instances. Security Storage Resource and tags Troubleshoot","title":"EC2"},{"location":"AWS%20Services/EC2/#common-components-of-an-ec2-instance","text":"Instance, the VM EBS volume for persistent storage SSH Keypair for secure access Security group AMI Instance type with configurable CPU, memory, storage and network throughput Elastic IP Address for public access Tags Multiple physical locations for instances and EBS volumes, called Regions and Availability Zones An IAM role defining the permissions the instance has Platform, the operating system running in the instance Tenancy","title":"Common components of an EC2 instance"},{"location":"AWS%20Services/EC2/#reservations","text":"Describes a launch request for one or more instances, and includes owner, requester, and security group information that applies to all instances in the launch request. Docs AWS EC2 what is a reservation ID exactly and what does it represent? [ Serverfault ]","title":"Reservations"},{"location":"AWS%20Services/EC2/#amazon-machine-images","text":"An AMI contains the following: - a snapshot of an EBS volume for EBS-backed instances, or a template for the root volume for instance-store-backed instances - launch permissions that define which AWS accounts have permission to launch instances with the AMI - A block device mapping that specific the volumes to attach to the instance at startup","title":"Amazon Machine Images"},{"location":"AWS%20Services/EC2/#launch-permissions","text":"public: the owner grants launch permissions to all AWS accounts explicit: the owner grants launch permissions to specific AWS accounts implicit: the owner has implicit launch permissions for an AMI","title":"Launch Permissions"},{"location":"AWS%20Services/EC2/#how-youre-charged","text":"With AMIs backed by instance store, you're charged for instance usage and storing your AMI in Amazon S3. With AMIs backed by Amazon EBS, you're charged for instance usage, EBS volume storage and usage, and storing your AMI as an EBS snapshot.","title":"How You're Charged"},{"location":"AWS%20Services/EC2/#linux-ami-virtualization-types","text":"Paravirtual (PV) AMIs include special drivers for greater network and disk I/O performance. It is an older virtualization type that has been superseded by Hardware Virtual Machine (HVM) AMIs which now have PV drivers available to them. As such, latest generation instance types do not support PV AMIs.","title":"Linux AMI virtualization types"},{"location":"AWS%20Services/EC2/#boot-modes","text":"AMIs have an optional launch boot mode parameter which overrides the default boot mode defined by the CPU family of the instance type - UEFI for Graviton instance types and legacy-bios for Intel and AMD. In order for an instance to launch successfully with the specified boot mode, the operating system must be configured to support it. This configuration is different for different operating systems. Intel and AMD instances can only launch with UEFI on latest generation instance types. UEFI Secure Boot is currently not supported.","title":"Boot Modes"},{"location":"AWS%20Services/EC2/#instances","text":"","title":"Instances"},{"location":"AWS%20Services/EC2/#start-stop-and-terminate-instances","text":"You can stop an EBS-backed instance and all of its EBS volumes remain attached. You can restart the instance any time, and you will not be charged when the instance is stopped. While stopped, you can change the instance type, kernel and RAM disk. You cannot stop and instance-store-backed instance. You can terminate an instance to shut it down. When this happens, its root volume is deleted, but any other attached EBS volumes are preserved by default, unless the volumes deleteOnTermination attribute specifies otherwise. You can prevent accidental termination of an instance by setting its disableApiTermination attribute to true , and you can control the shutdown behavior of the operating system ( shutdown -h on Linux and shutdown on Windows) by setting the instanceInitiatedShutdownBehavior attribute to stop or terminate as desired.","title":"Start, stop and terminate instances"},{"location":"AWS%20Services/EC2/#instance-types","text":"","title":"Instance Types"},{"location":"AWS%20Services/EC2/#overview","text":"Each instance type is grouped onto a particular host computer based on its instance family. For example, all T-type instance will be grouped onto computers dedicated to that type. While some resources of the host computer are dedicated to the guest instances (such as CPU and Memory) other resources, such as network and disk subsystem, are shared. When these shared resources are underused, an instance can use a high share than if all instance were trying to use it at once, in which case they would each receive an equal share.","title":"Overview"},{"location":"AWS%20Services/EC2/#hardware-specifications","text":"EC2 instance typically run on 64-bit virtual Intel CPUs.","title":"Hardware Specifications"},{"location":"AWS%20Services/EC2/#processor-features","text":"Amazon EC2 instances that run on Intel processors may include the following features. Not all of the following processor features are supported by all instance types. Intel AES New Instructions (AES-NI) - Intel AES-NI encryption instruction set improves upon the original Advanced Encryption Standard (AES) algorithm to provide faster data protection and greater security. All current generation EC2 instances support this processor feature. Intel Advanced Vector Extensions (Intel AVX, Intel AVX2, and Intel AVX-512) - Intel AVX and Intel AVX2 are 256-bit, and Intel AVX-512 is a 512-bit instruction set extension designed for applications that are Floating Point (FP) intensive. Intel AVX instructions improve performance for applications like image and audio/video processing, scientific simulations, financial analytics, and 3D modeling and analysis. These features are only available on instances launched with HVM AMIs. Intel Turbo Boost Technology - Intel Turbo Boost Technology processors automatically run cores faster than the base operating frequency. Intel Deep Learning Boost (Intel DL Boost) - Accelerates AI deep learning use cases. The 2nd Gen Intel Xeon Scalable processors extend Intel AVX-512 with a new Vector Neural Network Instruction (VNNI/INT8) that significantly increases deep learning inference performance over previous generation Intel Xeon Scalable processors (with FP32) for image recognition/segmentation, object detection, speech recognition, language translation, recommendation systems, reinforcement learning, and more. VNNI may not be compatible with all Linux distributions. The following instances support VNNI: M5n , R5n , M5dn , M5zn , R5b , R5dn , D3 , and D3en . C5 and C5d instances support VNNI for only 12xlarge , 24xlarge , and metal instances.","title":"Processor Features"},{"location":"AWS%20Services/EC2/#ami-virtualisation-types","text":"Current generation instance support the Hardware Virtual Machine (HVM) type only. Some older instance types support Paravirtual (PV), but only in specific regions.","title":"AMI Virtualisation Types"},{"location":"AWS%20Services/EC2/#instance-built-on-the-nitro-system","text":"Nitro is a collection of AWS-built hardware and software components that increase performance of guest instance by reducing the virtualization overhead The following components are part of the Nitro System: Nitro card Local NVMe storage volumes Networking hardware support Management Monitoring Security Nitro security chip, integrated into the motherboard Nitro hypervisor - A lightweight hypervisor that manages memory and CPU allocation and delivers performance that is indistinguishable from bare metal for most workloads.","title":"Instance Built on the Nitro System"},{"location":"AWS%20Services/EC2/#network-and-storage-features","text":"The network and storage features of an instance are determined by the instance type.","title":"Network and Storage Features"},{"location":"AWS%20Services/EC2/#networking-features","text":"IPv6 is supported on all current generation instance types Placement groups are available for supported instance types to affect the distribution of instance where network latency between instances is important. Enhanced networking is available on all current generation instance types with the following benefits: Traffic within the same region using IPv4 or IPv6 can support up to 5Gbps for single-flow traffic and up to 25Gbps for multi-flow. Traffic to and from S3 buckets within the same region over public IP address space or through a VPC endpoint can use all available instance aggregate bandwidth. The maximum transmission unit (MTU) varies across instance types. All instance types support standard Ethernet V2 1500 MTU. All current generation instance types support 9001 MTU, or jumbo frames.","title":"Networking Features"},{"location":"AWS%20Services/EC2/#storage-features","text":"All instance types support EBS volumes, while only some support instance store volumes. You can gain additional EBS I/O by using EBS-optimised instances. Some instance types are EBS-optimised by default.","title":"Storage Features"},{"location":"AWS%20Services/EC2/#instance-limits","text":"The limit on the number of a particular instance type an account can run is based on the number of vCPUs in use. vCPU limits only apply to on-demand and spot instances, not to reserved instances.","title":"Instance limits"},{"location":"AWS%20Services/EC2/#general-purpose","text":"General purpose instance types provide a balance of compute, memory and networking resources, and can be effectively utilised for a wide range of workloads. The following general purpose instance types are available: M5 and M5a - standard general purpose instances running on Intel Xeon\u00ae Platinum 8175M processors (M5) or AMD EPYC 7000 series processors (M5a) CPUs. Ideal for: small and midsize databases; data processing tasks that require additional memory; caching fleets; and backend servers for enterprise applications such as SAP, Sharepoint, etc. M5zn - ideal for applications that benefit from extremely high single-thread performance to high throughput, low latency networking . Well suited for gaming, high-performance computing and simulation modeling. powered by Intel Xeon Scalable processors in the cloud, with an all-core turbo frequency up to 4.5 GHz. M6g and M6gd - balanced compute, memory and networking resources running on AWS Graviton2 CPUs, ideal for a broad range of general purpose workloads, including application servers, microservices, gaming servers, midsize data stores and caching fleets. M6gd instances have local NVMe-based SSDs physically connected to the host server, as opposed to the M6g instances that use EBS. m6g.metal - bare metal version of the M6g. M6i - higher-spec-ed Intel Xeon CPUs than M5 highest maximum network speed of the general purpose instance types, at up to 50 Gbps powered by 3rd generation Intel Xeon Scalable processors (code named Ice Lake). Support for new Intel Advanced Vector Extensions (AVX 512) instructions for faster execution of cryptographic algorithms. Support for always-on memory encryption using Intel Total Memory Encryption (TME). Mac1 - powered by Apple Mac Mini computers. T2, T3, T3a and T4g - burstable performance instance types. T2 is last generation, T3 current generation Intel CPU, T3a current generation AMD CPU and T4g current generation Graviton2 CPU. Ideal for intermittent workloads, such as: websites and web applications code repositories non-production test environments microservices","title":"General Purpose"},{"location":"AWS%20Services/EC2/#instance-performance","text":"Some instance types allow you to control the C-states and P-states of the CPU. EBS-optimised instances improve the performance of traffic to and from EBS.","title":"Instance Performance"},{"location":"AWS%20Services/EC2/#network-performance","text":"You can enable enhanced networking on supported instance types to provide lower latencies, lower network jitter, and higher packet-per-second (PPS) performance. Most applications do not consistently need a high level of network performance, but can benefit from access to increased bandwidth when they send or receive data. Some instance types have a baseline network IO which they can burst above with a network I/O credit mechanism, similar to the burstable CPU instance types.","title":"Network Performance"},{"location":"AWS%20Services/EC2/#ssd-io-performance","text":"","title":"SSD I/O Performance"},{"location":"AWS%20Services/EC2/#instance-features","text":"","title":"Instance Features"},{"location":"AWS%20Services/EC2/#burstable-performance-instances","text":"","title":"Burstable Performance Instances"},{"location":"AWS%20Services/EC2/#instance-purchasing-options","text":"","title":"Instance Purchasing Options"},{"location":"AWS%20Services/EC2/#on-demand-instances","text":"With On-Demand Instances, you pay for compute capacity by the second with no long-term commitments. You have full control over its lifecycle\u2014you decide when to launch, stop, hibernate, start, reboot, or terminate it. It's recommended to use On-Demand Instances for applications with short-term, irregular workloads that cannot be interrupted.","title":"On-Demand Instances"},{"location":"AWS%20Services/EC2/#reserved-instances","text":"Reserved instance (RIs) aren't physical instances, rather a discount applied to the AWS bill tot he use of on-demand instances. These instances must match certain attributes, instance type and region. If you already have on-demand instance running that match the attributes of your reserved instances, then the RIs will be immediately applied to those running instances. This applies to both zonal and regional RIs.","title":"Reserved Instances"},{"location":"AWS%20Services/EC2/#commitment-term","text":"The term commitment, which isn't automatically renewed, is either: One-year : A year is defined as 31536000 seconds (365 days). Three-year : Three years is defined as 94608000 seconds (1095 days).","title":"Commitment Term"},{"location":"AWS%20Services/EC2/#payment-options","text":"RIs have the following payment options: All Upfront - full payment is made at the start of the term Partial Upfront - a portion of the total cost is paid upfront, and the remainder paid through a discounted hourly rate. You'll pay this regardless of whether or not the instances are being used. No Upfront - you are billed the discounted hourly rate for the duration of the commitment period, regardless of whether the instance is being used. Reserved instance to do automatically renew. To ensure uninterrupted savings, you can queue a RI purchase up to three years in advance.","title":"Payment Options"},{"location":"AWS%20Services/EC2/#offering-classes","text":"There are two offering classes of RIs: Standard - provide the largest discount, but can only be modified, not exchanged. These RIs can be bought and sold in the RI marketplace but can't be exchanged for other RIs. Convertible - provides a lower discount, but can be exchanged for another convertible RI with different attribute. Can also be modified. These can't be bought or sold in the RI marketplace.","title":"Offering Classes"},{"location":"AWS%20Services/EC2/#scope","text":"RIs have two possible scopes - regional , where the RI is scopes to a particular region, and zonal , where the RI is scopes to a single availability zone. They have the following differences: capacity reservation - a regional RI does not reserve capacity, whereas a zonal RI does reserve capacity in the specified AZ. AZ flexibility - a regional RI can be launched in any AZ in the region, whereas a zonal RI is tied to the AZ in which it's been purchased. instance size flexibility - regional RIs can be used on any size of instance within the instance family, whereas a zonal RI is purchased for a specified size and type of instance queuing a purchase - purchases for regional RIs can be queued, whereas purchases for zonal RIs can't.","title":"Scope"},{"location":"AWS%20Services/EC2/#normalization-factor","text":"Each instance has an instance size footprint that determines its normalization factor. Some examples of instance normalization factors can be seen in this table. Instance Size Normalization Factor nano 0.25 micro 0.5 small 1 medium 2 large 4 What this means is if you purchase a t3.medium RI, and have two t3.small on-demand instances running, then the discount will be applied to both instances in full. On the other hand, if your instead have a single large on-demand instance running, the discount will only be applied to half the cost of the instance. Normalization factors also exist for bare metal instances, but does not scale in the same way as for normal instances. For example, an i3.metal instance has the same normalization factor of 128 as a i3.16xlarge .","title":"Normalization Factor"},{"location":"AWS%20Services/EC2/#usage-billing","text":"RIs are generally charged per clock-hour during the commitment period. Per-second billing is available for instances running an open source Linux distribution, whereas per-hour billing is used for commercial distributions. A single RI billing benefit can only apply to a total of 3600 seconds (one hour) of instance usage per clock hour. These second can be allocated to a single instance, or spread across multiple instances. If you purchase a single t3.medium RI and run four t3.medium instances for an hour, one instance will receive the RI discount while the other three are charged at the on-demand price. On the other hand, if you run your four t3.medium instances for fifteen minutes each, they all receive the RI discount and no on-demand charge will be applied.","title":"Usage Billing"},{"location":"AWS%20Services/EC2/#consolidated-billing","text":"RIs that are purchased in an account that is the payer account for a set of consolidated billing accounts, then the benefits of those RIs are shared across all the members accounts.","title":"Consolidated Billing"},{"location":"AWS%20Services/EC2/#modifying-reserved-instances","text":"You can modify the following attributes of your standard and convertible RIs: AZ within a region Scope, from regional to zonal and vice versa Instance size within the same instance family Network, from EC2-classic to VPC and vice versa (only available in accounts created after 2013-12-04) You can allocate your reservation into different instance sizes across an instance family, provided the instance size footprint is unchanged after the modification.","title":"Modifying Reserved Instances"},{"location":"AWS%20Services/EC2/#exchange-reserved-instances","text":"Only available on convertible reserved instances. Not available on standard. A convertible RI can be exchanged for another convertible RI with different attributes, including instance family, platform (operating system) and tenancy. The following rules apply: convertible RIs can only be exchanged for other convertible RIs you cannot exchange for RIs in another region you can receive only one new convertible RI at a time, but can exchange one or more RI. you can modify a reservation and trade part of the split you can mix and match some payment options, but not all All Upfront can be exchanged for Partial Upfront, and vice versa No Upfront can be exchanged for All or Partial Upfront No Upfront can be exchanged for another No Upfront You cannot exchange All or Partial Upfront for No Upfront, provided the new instances hourly price is at least as high as the old one if you exchange multiple RIs, the expiration date of the new RI is the one furthest in the future if you exchange a single RI, it must have the same term as the new one if you merge multiple RIs with different lengths, the new RI has a 3 year term.","title":"Exchange Reserved Instances"},{"location":"AWS%20Services/EC2/#spot-instances","text":"A Spot Instance is an instance that uses spare EC2 capacity that is available for up to 90% less than the on-demand price. Concepts: Spot capacity pool - a set of unused EC2 instance with the same instance type ( t3.medium ) in the same AZ Spot price - the current price of a spot instance per hour Spot instance request - EC2 instance rebalance recommendation - a notice emitted by EC2 that an instance is at increased risk of being interrupted due to reduced spot capacity being available. Spot instance interruption - a two-minute notice emitted by EC2 when spot capacity has been exhausted and an instance is going to be interrupted.","title":"Spot Instances"},{"location":"AWS%20Services/EC2/#best-practices","text":"Spot Instances are recommended for stateless, fault-tolerant, flexible applications. Spot Instances are not suitable for workloads that are inflexible, stateful, fault-intolerant, or tightly coupled between instance nodes. Prepare individual instance for interruptions . Create a rule in amazon EventBridge to capture the two possible signals - rebalance recommendation and instance interruption. Be flexible about instance types and Availability Zones . This give spot a better chance at finding available capacity. A good rule of thumb is to be flexible across at least 10 instance types for each workload. In addition, make sure that all Availability Zones are configured for use in your VPC and selected for your workload. Use EC2 Auto Scaling groups or Spot Fleet to manage your aggregate capacity . Prefer to think in terms of resources such as vCPU and memory capacity, rather than instance capacity. This way you can use Auto Scaling groups and Spot Fleets to maintain versatile fleets of compute resource. Use the capacity optimized allocation strategy . Use the capacity optimised allocation strategy of your auto scaling group to provision spot instances on servers that have the most spare capacity. This decreased the change of your instance being reclaimed. Use proactive capacity rebalancing . Capacity Rebalancing helps you maintain workload availability by proactively augmenting your fleet with a new Spot Instance before a running Spot Instance receives the two-minute Spot Instance interruption notice. Combine multiple of the above . Combine the Capacity Rebalancing feature of the Spot Fleet with the capacity optimised allocation strategy of the auto scaling group as well mixed instance policy to maximize the flexibility of your capacity across multiple availability zones.","title":"Best Practices"},{"location":"AWS%20Services/EC2/#how-spot-instances-work","text":"Launch Spot Instances in a launch group . You can request to have a number of spot instances launched into a single group together. The request will only succeed if the entire group can be launched at once, and if the spot price exceeds your maximum, they will all be terminated at once. This is inflexible and reduces the likelihood of your request succeeding. Launch Spot Instances in an Availability Zone group . Same as the launch group, but where the spot instances are launched into an availability zone. Same limitations as well. The instances will be launched in the AZ for the specified subnet. Launch Spot Instances in a VPC . Specify a subnet into which the spot instances are launched.","title":"How Spot Instances Work"},{"location":"AWS%20Services/EC2/#savings-from-purchasing-spot-instances","text":"To view the savings information for a Spot Fleet (console) Open the Amazon EC2 console at https://console.aws.amazon.com/ec2/ . On the navigation pane, choose Spot Requests . Select the ID of a Spot Fleet request and scroll to the Savings section. Alternatively, select the check box next to the Spot Fleet request ID and choose the Savings tab.","title":"Savings from purchasing Spot Instances"},{"location":"AWS%20Services/EC2/#spot-instance-requests","text":"You can request to launch dedicated spot instances, either by specifying the tenancy in the spot request, or by requesting to launch into a VPC with an instance tenancy of dedicated .","title":"Spot Instance Requests"},{"location":"AWS%20Services/EC2/#rebalance-recommendations","text":"An EC2 instance rebalance recommendation is a signal emitted when a spot instance is at increased risk of interruption. The signal can arrive sooner than the two-minute spot-instance interruption signal, giving you more time to respond to the lack of available capacity, though rapid changes in capacity mean the rebalance recommendation signal can arrive alongside the interruption signal. There are two ways this signal can be handler: Amazon EventBridge and instance metadata. Using EventBridge, a signal looking like this will arrive: { \"version\": \"0\", \"id\": \"12345678-1234-1234-1234-123456789012\", \"detail-type\": \"EC2 Instance Rebalance Recommendation\", \"source\": \"aws.ec2\", \"account\": \"123456789012\", \"time\": \"yyyy-mm-ddThh:mm:ssZ\", \"region\": \"us-east-2\", \"resources\": [ \"arn:aws:ec2:us-east-2:123456789012:instance/i-1234567890abcdef0\" ], \"detail\": { \"instance-id\": \"i-1234567890abcdef0\", \"instance-action\": \"terminate\" } } You can create an EventBridge rule to handle it. Using instance metadata, you can retrieve the signal with the following command: curl <http://169.254.169.254/latest/meta-data/events/recommendations/rebalance> If the signal has been emitted, you will see the following result {\"noticeTime\": \"2020-10-27T08:22:00Z\"} or else you will get a 404 back.","title":"Rebalance recommendations"},{"location":"AWS%20Services/EC2/#spot-instance-interruptions","text":"A spot instance can be terminated for the following reasons: - price - the spot price is greater than your maximum price - capacity - if available capacity drops too far, EC2 will reclaim running spot instances to fulfill on-demand capacity requirements - constraints - constraints in the spot request, such as AZ or launch group, are no longer met. You can specify what EC2 does when it interrupts a spot instance: - stop the interrupted instance - hibernate the interrupted instance - terminate the interrupted instance (default) To stop a spot instance, the following prerequisites must be met: - Spot instance request type - must be persistent , and musn't specify a launch group. - EC2 Fleet or Spot Fleet request type - must be maintain . - Root volume type - must be EBS. Once a spot instance has been stopped by the spot service, only the spot service can restart it when capacity becomes available to satisfy the spot instance request. To hibernate a spot instance, the following prerequisites must be met: - Spot instance request type - must be persistent , and musn't specify a launch group. - EC2 Fleet or Spot Fleet request type - must be maintain . - Supported instance families \u2013 C3, C4, C5, M4, M5, R3, R4 - Instance RAM size \u2013 must be less than 100 GB - Supported operating system - you must install the hibernation agent, or use an AMI that already has it. - Root volume type - must be EBS, and must be large enough to store the instance memory When a spot instance is hibernated, its EBS volume and private IP addresses are preserved and instance memory is saved to the volume. If there is not enough space on the volume, the hibernation agent isn't installed, or the OS doesn't support hibernation, hibernation fails and the instance is sopped instead. Spot instance bests practices - Use the default maximum price, which is the On-Demand price. - Store important data regularly in a place that isn't affected by instance interruption - Divide the work into small tasks (using a Grid, Hadoop, or queue-based architecture) or use checkpoints so that you can save your work frequently. - Use the rebalance recommendation and two-minute interruption signals to manage the capacity of your spot instances. - Remember it is possible for the spot instance to be interrupted before the two-minute signal is received. - It is recommended to check for interruption notices every five seconds. To prepare a spot instance for hibernation: - Install the hibernation agent - Amazon Linux: sudo yum install hibagent - Ubuntu: sudo apt-get install hibagent - Add the following to user data #!/bin/bash /usr/bin/enable-ec2-spot-hibernation Spot instance that are configured to hibernate on interruption, rather than stop, will not receive the interruption signal two minutes prior to interruption. Instead, hibernation will happen immediately, and only instance intended to be stopped will have two minutes to react. If the instance is to be stopped or terminated, the time of this action can be found in the instance metadata: TOKEN=`curl -X PUT \"<http://169.254.169.254/latest/api/token>\" -H \"X-aws-ec2-metadata-token-ttl-seconds: 21600\"` \\\\\\\\ curl -H \"X-aws-ec2-metadata-token: $TOKEN\" \u2013v <http://169.254.169.254/latest/meta-data/spot/instance-action> {\"action\": \"stop\", \"time\": \"2017-09-18T08:22:00Z\"} You can look for BidEvictedEvent events in CloudTrail to see if Amazon EC2 interrupted a spot instance.","title":"Spot Instance Interruptions"},{"location":"AWS%20Services/EC2/#billing-for-interrupted-spot-instances","text":"Who interrupts the Spot Instance Operating system Interrupted in the first hour Interrupted in any hour after the first hour If you stop or terminate the Spot Instance Windows and Linux (excluding RHEL and SUSE) Charged for the seconds used Charged for the seconds used RHEL and SUSE Charged for the full hour even if you used a partial hour \"Charged for the full hours used and charged a full hour for the interrupted partial hour\" If the Amazon EC2 Spot service interrupts the Spot Instance Windows and Linux (excluding RHEL and SUSE) No charge Charged for the seconds used RHEL and SUSE No charge \"Charged for the full hours used but no charge for the interrupted partial hour\"","title":"Billing for interrupted spot instances"},{"location":"AWS%20Services/EC2/#spot-instance-data-feed","text":"The spot instance data feed is a file delivered to an S3 bucket ever hour describing the cost usage of your spot instances for the previous hour. The files are gzipped, and can be split into multiple files is the usage is high enough.","title":"Spot Instance data feed"},{"location":"AWS%20Services/EC2/#spot-instance-limits","text":"Spot instances are limited by the number of vCPUs being utilized by either running or requested spot instances. That means if you terminate your spot instances, but don't cancel the spot request, the request will still contribute towards the spot instance limit. Current spot limits can be found here .","title":"Spot Instance limits"},{"location":"AWS%20Services/EC2/#burstable-performance-instances_1","text":"","title":"Burstable Performance Instances"},{"location":"AWS%20Services/EC2/#dedicated-hosts","text":"","title":"Dedicated Hosts"},{"location":"AWS%20Services/EC2/#dedicated-instances","text":"","title":"Dedicated Instances"},{"location":"AWS%20Services/EC2/#on-demand-capacity-reservations","text":"","title":"On-Demand Capacity Reservations"},{"location":"AWS%20Services/EC2/#fleets","text":"A fleet allows you to launch multiple instances with a single API call. A fleet can contain multiple instance types and purchasing options and can be launched across multiple availability zones. There is no additional cost for using EC2 fleet. You pay only for the EC2 instances.","title":"Fleets"},{"location":"AWS%20Services/EC2/#ec2-fleets","text":"EC2 fleets are a way of launching multiple instances with a single API call. When you launch a fleet, you specify your maximum capacity and budget, and EC2 will launch instances until one of those limits has been reached. When specifying the desired capacity of the fleet, the default is number of instances, but you can also specify vCPUs, memory, storage or throughput. Both spot and on-demand instances can be launched in the same fleet, with different capacities for each. If you have reserved instances for an instance type in your fleet, they will be used when you launch the on-demand instances. Multiple instance types can be specified, with weighted capacities specified for each. Fleets isn't available through the AWS console. It's only available through the CLI and API. The fleet request is limited to a single region, and to a single subnet in an availability zone. Aside: this can be combined with a placement group to deploy instances that need to talk to each other while processing their workload. There are three fleet request types instant - EC2 Fleet places a synchronous one-time request for the desired capacity and returns the instances launched in the API response. request - EC2 Fleet places a synchronous one-time request for the desired capacity and does not attempt to replenish capacity by replacing interrupted spot instances. maintain - this is the default, where EC2 Fleet places an asynchronous request for the desired capacity, and maintains capacity by replacing any interrupted spot instances. The instant and request types will make only one attempt to launch the desired capacity. Any instances that fail to launch will not be retried. Amazon EC2 Auto Scaling and Amazon EMR are built around EC2 Fleet, both using an instant request type. An EC2 Fleet has the following allocation strategies for spot instances: lowest-price - this is the default, where the spot instance comes from the capacity pool with the lowest price. Optionally specify InstancePoolsToUseCount to launch spot instances over a particular number of capacity pools to diversify you diversified - the spot instances are distributed across all capacity pools. capacity-optimized - the spot instances are launched into the pool with the highest capacity available. You can optionally specify a priority for each instance type in the fleet using capacity-optimized-prioritized . On Demand capacity reservations can be used to fulfill fleet requests only if the request type is instant. EC2 Fleets of type maintain can be configured for Capacity Rebalancing, where they automatically respond to rebalance recommendation signals emitted when a spot instance is at an elevated risk of being interrupted. This needs to be configured in the MaintenanceStrategies structure of the fleet request. This can only be configured when the fleet is created. Once the fleet is running, it cannot be changed. Note that the instance marked for rebalance is not automatically terminated. EC2 Fleet can launch new spot instances until the current capacity is double the target capacity. This allows a fleet composed entirely of spot instances to all be marked for rebalance, and to have their replacements launched automatically. It does, however, prevent any of those replacements being replaced until the old instances are terminated. Spot instance marked for rebalance are not counted towards the desired capacity during scale-in or scale-out. Instance marked for rebalance will continue to be a part of your fleet until you terminate them, and will cause your actual capacity to be greater than the fulfilled capacity until you do so. It is recommended to provide as many spot capacity pools in the request as possible, and to be flexible with the availability zone. You can use instance weighting to specify the number of units each instance contributes towards the target capacity. The fleet request doesn't know about vCPUs or memory, rather you use the launch specification to say how many unit each instance contributes towards the target capacity. The price of the instance is altered by this, where the price per instance hour becomes the price per unit hour . For example, if you wanted your capacity based on vCPUs and you specified a m5.8xlarge with 32 vCPUs, it would contribute 32 units towards the capacity, and its price per unit hour would be $1.536 / 32 = $0.048. Instance weighting can cause the fulfilled capacity to be a floating point number, which must be taken into account when setting up things like cloudwatch alarms to trigger when the fulfilled capacity changes. The floating point number will sometimes be rounded up, depending on what other system is analyzing it.","title":"EC2 Fleets"},{"location":"AWS%20Services/EC2/#spot-fleets","text":"A spot fleet has all the same capability as an EC2 Fleet. The principal difference is where an EC2 Fleet consists of on-demand instances with optional spot instance, a spot fleet consists of spot instances with optional on-demand instances. Spot Fleets support Application Auto Scaling, which provides the following scaling policies: target tracking - increase or decrease the capacity by tracking a particular metric, such as average CPU load across the fleet. step scaling - increases the fleet either by a specified number of capacity units, or a percentage of the current capacity. scheduled scaling - increase or decrease the capacity based on the date and time. The fleet must have a request type of maintain to use automatic scaling.","title":"Spot Fleets"},{"location":"AWS%20Services/EC2/#monitor-fleet-events","text":"There are five event types for EC2 Fleets: EC2 Fleet State Change EC2 Fleet Spot Instance Request Change EC2 Fleet Instance Change EC2 Fleet Information EC2 Fleet Error The same five event types are available for spot fleets.","title":"Monitor Fleet Events"},{"location":"AWS%20Services/EC2/#monitor","text":"To begin monitoring your EC2 instances, you should create a baseline of performance by observing the instances at different times of day and under different loads. Measure the following metrics during this time: CPU Utilization Network Utilization Disk Performance Disk Reads/Writes Memory utilization, disk swap utilization, disk space utilization, page file utilization, log collection Monitoring can either be automated using services like CloudWatch Alarms and EventBridge, or it can be done manually using CloudWatch Dashboards. There are two types of status checks built into EC2: system status checks and instance status checks . A failed system status check indicates a problem that AWS needs to repair. If you don't want to wait for that you can migrate your instance to a new host (stop and start for EBS-backed, terminate and relaunch for instance-store-backed). A failed instance status check indicates a problem with the instance, such as exhausted memory or incompatible kernel. A scheduled event is a form of maintenance AWS will perform on your instance on your behalf.","title":"Monitor"},{"location":"AWS%20Services/EC2/#monitoring-with-cloudwatch","text":"Metrics for your instance can be collected and stored in CloudWatch for 15 months. EC2 sends data to CloudWatch in 5 minute intervals by default, or 1 minute intervals if detailed monitoring is enabled for the given instance. When detailed monitoring is enabled, you are charged per metric you send to CloudWatch, not for data storage.","title":"Monitoring with CloudWatch"},{"location":"AWS%20Services/EC2/#networking","text":"","title":"Networking"},{"location":"AWS%20Services/EC2/#regions-and-zones","text":"Amazon EC2 is composed of the following geographical entities: - Region - the standard AWS geographical unit. When deploying resources and services, you always specify the region they will be placed in. Each region is physically isolated from the others, preventing failures in one affecting the others. - Availability Zones - a subset of a region, physically isolated from the other AZs in that region, preventing failures in one affecting the others. AZs are named differently for each AWS account, so us-east-1a will not be the same datacentre for all accounts. If you need to coordinate resources in AZ across accounts, you can use the AZ ID to do this, which takes the form of use1-az1 . These IDs always refer to the same AZs in each account. - Local Zones - an extension of an AWS region, allowing you to deploy resources and services even closer to your users. Currently only available in us-east-1 and us-west-2 . - Wavelength Zones - another extension of a region, allowing you to deploy resources to the edge of a 5G carriers network. It works by having you extend your VPC to the carriers network, and opting in to the wavelength zone that will be created as a result. You deploy resources into this zone in the same way you would into an availability zone. - AWS Outposts - a way of extending AWS into an on-prem datacentre. You create a VPC in AWS then create one or more subnets on the Outpost. You can then deploy resources into that subnet in your datacentre while managing them through the AWS console and API.","title":"Regions and Zones"},{"location":"AWS%20Services/EC2/#enhanced-networking","text":"Enhanced networking uses a form of virtualisation (single root I/O virtualisation, or SR-IOV) to provide higher bandwidth, higher packer per second performance (PPS) and lower inter-instance latencies. There is no additional charge for using Enhanced Networking. So why would you not just enable it by default? You need to enable it in the kernel. OSs won't come with that support by default. Enhanced networking is available by using one of two possible virtual network interfaces: AWS' own Enhanced Network Adaptor (ENA) or the Intel 82599 Virtual Function (VF) interface. The ENA offers network speeds of up to 100 Gbps while the Intel device only offers 10 Gbps.","title":"Enhanced Networking"},{"location":"AWS%20Services/EC2/#enhanced-networking-using-the-elastic-network-adaptor","text":"Enhanced networking is provided by a virtual network interface called the Elastic Network Adaptor (ENA). To use this device, you must first install and enable the ENA module in the kernel of the guest OS. You can verify that the ENA kernel module is installed using the following command: [ec2-user ~]$ modinfo ena filename: /lib/modules/4.14.33-59.37.amzn2.x86_64/kernel/drivers/amazon/net/ena/ena.ko version: 1.5.0g license: GPL description: Elastic Network Adapter (ENA) author: Amazon.com, Inc. or its affiliates srcversion: 692C7C68B8A9001CB3F31D0 alias: pci:v00001D0Fd0000EC21sv*sd*bc*sc*i* alias: pci:v00001D0Fd0000EC20sv*sd*bc*sc*i* alias: pci:v00001D0Fd00001EC2sv*sd*bc*sc*i* alias: pci:v00001D0Fd00000EC2sv*sd*bc*sc*i* depends: retpoline: Y intree: Y name: ena You can verify an AMI has ENA support using this AMI query: aws ec2 describe-images --image-id ami_id --query \"Images[].EnaSupport\" You can verify the ENA driver is being used on a particular network interface like so: [ec2-user ~]$ ethtool -i eth0 driver: ena version: 1.5.0g firmware-version: expansion-rom-version: bus-info: 0000:00:05.0 supports-statistics: yes supports-test: no supports-eeprom-access: no supports-register-dump: no supports-priv-flags: no","title":"Enhanced Networking using the Elastic Network Adaptor"},{"location":"AWS%20Services/EC2/#enabling-enhanced-networking","text":"Enabling it on Ubuntu Enabling it on Amazon Linux Enabling it on Linux","title":"Enabling Enhanced Networking"},{"location":"AWS%20Services/EC2/#elastic-fabric-adapter","text":"","title":"Elastic Fabric Adapter"},{"location":"AWS%20Services/EC2/#placement-groups","text":"A placement group is a way of influencing the way instances are distributed across an availability zone. There are three types of placement group, and there is no charge for using them.","title":"Placement Groups"},{"location":"AWS%20Services/EC2/#cluster","text":"A cluster placement group is where instances are grouped together in a single availability zone. They enjoy a higher per-flow throughput limit for TCP/IP traffic and are placed in the same high-bisection bandwidth segment of the network. Cluster placement groups are recommended for workloads that require low network latency, high network throughput, and/or where most of the traffic is between instances. It is recommended: - to use Enhanced Networking with this configuration. - to launch all instances in a cluster with a single launch request. A cluster placement group runs on the same hardware, which is why they are able to get such good network connections between instances. As such, attempting to launch new instances into an existing placement group, or stopping some instances in a cluster to be restarted later, might result in capacity errors since the physical server is now full up. This problem can be solved by stopping and starting all instances in the placement group so they can be migrated to hardware that has capacity for all requested instances.","title":"Cluster"},{"location":"AWS%20Services/EC2/#rules-and-limitations","text":"All current generation instance types are supported, except burstable performance instances and Mac instances. It can't span multiple AZs Network throughput is limited to what the slowest instance supports When Enhanced Networking is enabled, instances within a cluster placement group can use up to 10 Gbps for single flow traffic, but only up to 5 Gbps when not in one.","title":"Rules and limitations"},{"location":"AWS%20Services/EC2/#partition","text":"A partition placement group is a grouping of instances into one or more partitions within a region. All the instances in a particular partition will be deployed across a set of racks that they share with no other partition. The racks of a partition will have power sources that are shared with no other racks. The purpose of a partition placement group is to reduce the likelihood of correlated hardware failures affecting the application running across the instances. It is most useful for replicated workloads, and even allows topology-aware applications to see which instances are in each partition so they can make intelligent replication decisions.","title":"Partition"},{"location":"AWS%20Services/EC2/#rules-and-limitations_1","text":"Max 7 partitions per placement group. Max number of instances is limited by account. When launching multiple instances into a placement group, there is no guarantee of even distribution of instances across partitions. A partition placement group with Dedicated instances can have a maximum of two partitions.","title":"Rules and limitations"},{"location":"AWS%20Services/EC2/#spread","text":"A spread placement group is a set of instances that are each placed on distinct racks. This is recommended for applications that have a small number of critical instances. A spread placement group can span multiple AZs per region, and you can have up to seven instances per AZ per group.","title":"Spread"},{"location":"AWS%20Services/EC2/#rules-and-limitations_2","text":"Maximum of seven instances per AZ. If you need more than seven, it is recommended to run multiple spread placement groups. Do not support dedicated instances.","title":"Rules and limitations"},{"location":"AWS%20Services/EC2/#security","text":"","title":"Security"},{"location":"AWS%20Services/EC2/#storage","text":"","title":"Storage"},{"location":"AWS%20Services/EC2/#resource-and-tags","text":"","title":"Resource and tags"},{"location":"AWS%20Services/EC2/#troubleshoot","text":"","title":"Troubleshoot"},{"location":"AWS%20Services/Global%20Accelerator/","text":"Components Component Description Static IP Addresses A pair of anycast IP addresses to associate with your accelerator Accelerator A router to direct traffic to endpoints over the AWS global network. Can be either standard or custom. DNS Name DNS name assigned to the static IP addresses associated with the accelerator Network Zone Similar to Availability Zones, physically isolated network infrastructure that services the static IP addresses associated with your accelerator. Each IP is associated with a different network zone for high availability. Listener Processes inbound connections from clients to your accelerator. Listens on combinations of IP and Port ranges. Has one or more endpoint groups associated with it, and traffic is routed to an endpoint in one of the groups. Endpoint Group A group of one or more Endpoints in a specific AWS Region. Percentage of traffic routed to an andpoint group can be adjusted using a traffic dial . Endpoint A resource to which an accelerator routes traffic. Endpoints for standard accelerators can be Network Load Balancers, Application Load Balancers, EC2 instances, or Elastic IP addresses. An Application Load Balancer endpoint can be an internet-facing or internal. Endpoints for custom routing accelerators are virtual private cloud (VPC) subnets with one or many Amazon EC2 instances that are the destinations for traffic. How It Works Health checking - in standard accelerators, traffic is automatically routed away from unhealthy endpoints if Global Accelerator detects an endpoint has become unhealthy. This is not available with custom endpoints. This is because AWS determines the optimal endpoint to route traffic to when you use a standard accelerator, and is including health checks in the determination, whereas you are the one who determines where traffic in a custom accelerator goes, so there is no failover opportunity. anycast - anycast is one of four addressing methods in the Internet Protocol, alongside unicast, broadcast and multicast. With anycast, an IP address is shared among multiple geographically distributed nodes in the network and traffic is routed to the nearest node to the client. The nearest node is usually determined by the number of BGP hops between the client and the node. vpc peering - Global Accelerator establishes a peering connection with the VPC containing your endpoint, routing traffic from the edge location to your VPC via the AWS global network address preservation - the two anycast IP addresses remain associated with the accelerator even when it is disabled, and are only disassociated once the accelerator is deleted. traffic dials - allows you to configure how many requests an endpoint group will accept before the accelerator will route the remainder to other regions. Only available in standard accelerators. traffic weights - allows you to configure what proportion of traffic an accelerator routes to each endpoint. Only available on standard accelerators dials vs weights - you configure dials on endpoint groups and weights on endpoints within the group. Types of accelerators standard - allows more automated routing of traffic based on \"standard\" signals such as proximity, endpoint health, etc, as well as allowing fine grained control of traffic balancing using traffic dials on endpoint groups and weights on endpoints. custom - best suited for scenarios where you want to use custom application logic to route connections to a specific endpoint, rather than the general purpose conditions of the standard accelerator. One example is a VoIP application that needs to route multiple connections to the same server to initiate a video, call or messaging session. Real-time gaming is another example, where you would want to assign multiple players to a server based on factors like player skill, geographic location and game mode. Use Cases For single-region applications , Global Accelerator lets you reduce the time your traffic spends on the public internet, reducing the effects of congestion on the performance of your application. For multi-region applications , Global Accelerator allows you to simplify your routing infrastructure by using the two anycast IP addresses as the single point of entry to your service. It also allowed you change your origins, such as by adding or removing regions or replacing endpoints with different ones, without the clients having to know. For multi-region storage , S3 Multi-Region Access Points is based on Global Accelerator so can improve performance when access data sets replicated across multiple regions by up to 60%. Benefits Accelerate latency-sensitive applications - by reducing the number of network hops and utilising the redundant bandwidth of the AWS global network, Global Accelerator is able to improve the performance of your applications by taking their traffic off the public internet earlier than if you weren't using it, reducing the change of your application suffering performance degredation due to data being lost in congested public networks. TCP connect at the edge - typically a TCP connection is established via a two-way handshake using three messages. Typically this connection would be established between your application and the client accessing it, and the further away those two are from each other, the longer it will take to establish a connection. Global Accelerator terminates the TCP connection at the edge location while nearly simultaneously establishing a connection with your endpoint. As a result, the client sees a faster response time while the endpoint uses a TCP connection that is optimised for the AWS network. Simplified global traffic management - typically as an application grows to a global audience, the routing infrastructure must grow with it. Global Accelerator allows you to keep your global routing infrastructure simple as your application grows by using the pair of anycast IP addresses as the single point of entry to your application all over the world. Traffic dials also allow you to manage the distribution of traffic between different endpoints, allowing different endpoints to be used for A/B testing or blue-green deployments. Protect your applications - Global Accelerator masks your applicaiton behind the pair of anycast IPs and routes traffic to your endpoint by establishing a peering connection to your VPC, allowing put your application on the internet without exposing the EC2 instances to attackers, as well as being protected from DDoS by default by AWS Shield. Disaster recovery and multi-Region resiliency - when using a standard accelerator, traffic can be automatically rerouted to a healthy endpoint when an active endpoint is detected to be unhealthy. Drawbacks and limitations Global Accelerator does not support routing traffic to an endpoint owned by another AWS account. If you want to achieve this, you will need to first route the traffic to some sort of transit VPC in your account which can then route it to a VPC in another account Performance gains decrease with increasing data transfer size. For example, in Ireland, a 50KB file transfer was 25% faster with Global Accelerator, but a 5MB file transfer was only 6% faster. Testing using the speed comparison tool provided by AWS. A lot of information lost because of the use of TCP connections. HTTP would be able to preserve things like client IP addresses, but that can't be known using TCP connections. Relies on ISPs behaving. Further Reading Accessing an AWS API Gateway via static IP addresses provided by AWS Global Accelerator Using AWS Global Accelerator to achieve blue/green deployments","title":"Components"},{"location":"AWS%20Services/Global%20Accelerator/#components","text":"Component Description Static IP Addresses A pair of anycast IP addresses to associate with your accelerator Accelerator A router to direct traffic to endpoints over the AWS global network. Can be either standard or custom. DNS Name DNS name assigned to the static IP addresses associated with the accelerator Network Zone Similar to Availability Zones, physically isolated network infrastructure that services the static IP addresses associated with your accelerator. Each IP is associated with a different network zone for high availability. Listener Processes inbound connections from clients to your accelerator. Listens on combinations of IP and Port ranges. Has one or more endpoint groups associated with it, and traffic is routed to an endpoint in one of the groups. Endpoint Group A group of one or more Endpoints in a specific AWS Region. Percentage of traffic routed to an andpoint group can be adjusted using a traffic dial . Endpoint A resource to which an accelerator routes traffic. Endpoints for standard accelerators can be Network Load Balancers, Application Load Balancers, EC2 instances, or Elastic IP addresses. An Application Load Balancer endpoint can be an internet-facing or internal. Endpoints for custom routing accelerators are virtual private cloud (VPC) subnets with one or many Amazon EC2 instances that are the destinations for traffic.","title":"Components"},{"location":"AWS%20Services/Global%20Accelerator/#how-it-works","text":"Health checking - in standard accelerators, traffic is automatically routed away from unhealthy endpoints if Global Accelerator detects an endpoint has become unhealthy. This is not available with custom endpoints. This is because AWS determines the optimal endpoint to route traffic to when you use a standard accelerator, and is including health checks in the determination, whereas you are the one who determines where traffic in a custom accelerator goes, so there is no failover opportunity. anycast - anycast is one of four addressing methods in the Internet Protocol, alongside unicast, broadcast and multicast. With anycast, an IP address is shared among multiple geographically distributed nodes in the network and traffic is routed to the nearest node to the client. The nearest node is usually determined by the number of BGP hops between the client and the node. vpc peering - Global Accelerator establishes a peering connection with the VPC containing your endpoint, routing traffic from the edge location to your VPC via the AWS global network address preservation - the two anycast IP addresses remain associated with the accelerator even when it is disabled, and are only disassociated once the accelerator is deleted. traffic dials - allows you to configure how many requests an endpoint group will accept before the accelerator will route the remainder to other regions. Only available in standard accelerators. traffic weights - allows you to configure what proportion of traffic an accelerator routes to each endpoint. Only available on standard accelerators dials vs weights - you configure dials on endpoint groups and weights on endpoints within the group.","title":"How It Works"},{"location":"AWS%20Services/Global%20Accelerator/#types-of-accelerators","text":"standard - allows more automated routing of traffic based on \"standard\" signals such as proximity, endpoint health, etc, as well as allowing fine grained control of traffic balancing using traffic dials on endpoint groups and weights on endpoints. custom - best suited for scenarios where you want to use custom application logic to route connections to a specific endpoint, rather than the general purpose conditions of the standard accelerator. One example is a VoIP application that needs to route multiple connections to the same server to initiate a video, call or messaging session. Real-time gaming is another example, where you would want to assign multiple players to a server based on factors like player skill, geographic location and game mode.","title":"Types of accelerators"},{"location":"AWS%20Services/Global%20Accelerator/#use-cases","text":"For single-region applications , Global Accelerator lets you reduce the time your traffic spends on the public internet, reducing the effects of congestion on the performance of your application. For multi-region applications , Global Accelerator allows you to simplify your routing infrastructure by using the two anycast IP addresses as the single point of entry to your service. It also allowed you change your origins, such as by adding or removing regions or replacing endpoints with different ones, without the clients having to know. For multi-region storage , S3 Multi-Region Access Points is based on Global Accelerator so can improve performance when access data sets replicated across multiple regions by up to 60%.","title":"Use Cases"},{"location":"AWS%20Services/Global%20Accelerator/#benefits","text":"Accelerate latency-sensitive applications - by reducing the number of network hops and utilising the redundant bandwidth of the AWS global network, Global Accelerator is able to improve the performance of your applications by taking their traffic off the public internet earlier than if you weren't using it, reducing the change of your application suffering performance degredation due to data being lost in congested public networks. TCP connect at the edge - typically a TCP connection is established via a two-way handshake using three messages. Typically this connection would be established between your application and the client accessing it, and the further away those two are from each other, the longer it will take to establish a connection. Global Accelerator terminates the TCP connection at the edge location while nearly simultaneously establishing a connection with your endpoint. As a result, the client sees a faster response time while the endpoint uses a TCP connection that is optimised for the AWS network. Simplified global traffic management - typically as an application grows to a global audience, the routing infrastructure must grow with it. Global Accelerator allows you to keep your global routing infrastructure simple as your application grows by using the pair of anycast IP addresses as the single point of entry to your application all over the world. Traffic dials also allow you to manage the distribution of traffic between different endpoints, allowing different endpoints to be used for A/B testing or blue-green deployments. Protect your applications - Global Accelerator masks your applicaiton behind the pair of anycast IPs and routes traffic to your endpoint by establishing a peering connection to your VPC, allowing put your application on the internet without exposing the EC2 instances to attackers, as well as being protected from DDoS by default by AWS Shield. Disaster recovery and multi-Region resiliency - when using a standard accelerator, traffic can be automatically rerouted to a healthy endpoint when an active endpoint is detected to be unhealthy.","title":"Benefits"},{"location":"AWS%20Services/Global%20Accelerator/#drawbacks-and-limitations","text":"Global Accelerator does not support routing traffic to an endpoint owned by another AWS account. If you want to achieve this, you will need to first route the traffic to some sort of transit VPC in your account which can then route it to a VPC in another account Performance gains decrease with increasing data transfer size. For example, in Ireland, a 50KB file transfer was 25% faster with Global Accelerator, but a 5MB file transfer was only 6% faster. Testing using the speed comparison tool provided by AWS. A lot of information lost because of the use of TCP connections. HTTP would be able to preserve things like client IP addresses, but that can't be known using TCP connections. Relies on ISPs behaving.","title":"Drawbacks and limitations"},{"location":"AWS%20Services/Global%20Accelerator/#further-reading","text":"Accessing an AWS API Gateway via static IP addresses provided by AWS Global Accelerator Using AWS Global Accelerator to achieve blue/green deployments","title":"Further Reading"},{"location":"AWS%20Services/Guard%20Duty/","text":"","title":"Guard Duty"},{"location":"AWS%20Services/Inspector/","text":"","title":"Inspector"},{"location":"AWS%20Services/Security%20Hub/","text":"","title":"Security Hub"},{"location":"Books/97%20Things%20Every%20Cloud%20Engineer%20Should%20Know/97%20Things%20Every%20Cloud%20Engineer%20Should%20Know/","text":"Contents ... Summary in three sentences ... ... ... Who Should Read It? How the Book Changed Me Why did I read this? Thoughts and Feelings Practical Application Insights My Top Three Quotes ... ... ...","title":"Contents"},{"location":"Books/97%20Things%20Every%20Cloud%20Engineer%20Should%20Know/97%20Things%20Every%20Cloud%20Engineer%20Should%20Know/#contents","text":"...","title":"Contents"},{"location":"Books/97%20Things%20Every%20Cloud%20Engineer%20Should%20Know/97%20Things%20Every%20Cloud%20Engineer%20Should%20Know/#summary-in-three-sentences","text":"... ... ...","title":"Summary in three sentences"},{"location":"Books/97%20Things%20Every%20Cloud%20Engineer%20Should%20Know/97%20Things%20Every%20Cloud%20Engineer%20Should%20Know/#who-should-read-it","text":"","title":"Who Should Read It?"},{"location":"Books/97%20Things%20Every%20Cloud%20Engineer%20Should%20Know/97%20Things%20Every%20Cloud%20Engineer%20Should%20Know/#how-the-book-changed-me","text":"","title":"How the Book Changed Me"},{"location":"Books/97%20Things%20Every%20Cloud%20Engineer%20Should%20Know/97%20Things%20Every%20Cloud%20Engineer%20Should%20Know/#why-did-i-read-this","text":"","title":"Why did I read this?"},{"location":"Books/97%20Things%20Every%20Cloud%20Engineer%20Should%20Know/97%20Things%20Every%20Cloud%20Engineer%20Should%20Know/#thoughts-and-feelings","text":"","title":"Thoughts and Feelings"},{"location":"Books/97%20Things%20Every%20Cloud%20Engineer%20Should%20Know/97%20Things%20Every%20Cloud%20Engineer%20Should%20Know/#practical-application","text":"","title":"Practical Application"},{"location":"Books/97%20Things%20Every%20Cloud%20Engineer%20Should%20Know/97%20Things%20Every%20Cloud%20Engineer%20Should%20Know/#insights","text":"","title":"Insights"},{"location":"Books/97%20Things%20Every%20Cloud%20Engineer%20Should%20Know/97%20Things%20Every%20Cloud%20Engineer%20Should%20Know/#my-top-three-quotes","text":"... ... ...","title":"My Top Three Quotes"},{"location":"Books/97%20Things%20Every%20SRE%20Should%20Know/97%20Things%20Every%20SRE%20Should%20Know/","text":"Contents ... Summary in three sentences ... ... ... Who Should Read It? How the Book Changed Me Why did I read this? Thoughts and Feelings Practical Application Insights My Top Three Quotes ... ... ...","title":"Contents"},{"location":"Books/97%20Things%20Every%20SRE%20Should%20Know/97%20Things%20Every%20SRE%20Should%20Know/#contents","text":"...","title":"Contents"},{"location":"Books/97%20Things%20Every%20SRE%20Should%20Know/97%20Things%20Every%20SRE%20Should%20Know/#summary-in-three-sentences","text":"... ... ...","title":"Summary in three sentences"},{"location":"Books/97%20Things%20Every%20SRE%20Should%20Know/97%20Things%20Every%20SRE%20Should%20Know/#who-should-read-it","text":"","title":"Who Should Read It?"},{"location":"Books/97%20Things%20Every%20SRE%20Should%20Know/97%20Things%20Every%20SRE%20Should%20Know/#how-the-book-changed-me","text":"","title":"How the Book Changed Me"},{"location":"Books/97%20Things%20Every%20SRE%20Should%20Know/97%20Things%20Every%20SRE%20Should%20Know/#why-did-i-read-this","text":"","title":"Why did I read this?"},{"location":"Books/97%20Things%20Every%20SRE%20Should%20Know/97%20Things%20Every%20SRE%20Should%20Know/#thoughts-and-feelings","text":"","title":"Thoughts and Feelings"},{"location":"Books/97%20Things%20Every%20SRE%20Should%20Know/97%20Things%20Every%20SRE%20Should%20Know/#practical-application","text":"","title":"Practical Application"},{"location":"Books/97%20Things%20Every%20SRE%20Should%20Know/97%20Things%20Every%20SRE%20Should%20Know/#insights","text":"","title":"Insights"},{"location":"Books/97%20Things%20Every%20SRE%20Should%20Know/97%20Things%20Every%20SRE%20Should%20Know/#my-top-three-quotes","text":"... ... ...","title":"My Top Three Quotes"},{"location":"Books/97%20Things%20Every%20SRE%20Should%20Know/Quotes/","text":"6. Infrastructure: It\u2019s Where the Power Is To business people, operations is a cost center, an unfortunate necessity. This is a historical artifact; operations should be seen as yin to development\u2019s yang, united and inseparable, never \u201csomeone else\u2019s job.\u201d Biz is the why, dev is the what, and ops is the how. 8. Observability in the Development Cycle Observability is for figuring out where in your systems to find the code you need to debug.","title":"Quotes"},{"location":"Books/97%20Things%20Every%20SRE%20Should%20Know/Quotes/#6-infrastructure-its-where-the-power-is","text":"To business people, operations is a cost center, an unfortunate necessity. This is a historical artifact; operations should be seen as yin to development\u2019s yang, united and inseparable, never \u201csomeone else\u2019s job.\u201d Biz is the why, dev is the what, and ops is the how.","title":"6. Infrastructure: It\u2019s Where the Power Is"},{"location":"Books/97%20Things%20Every%20SRE%20Should%20Know/Quotes/#8-observability-in-the-development-cycle","text":"Observability is for figuring out where in your systems to find the code you need to debug.","title":"8. Observability in the Development Cycle"},{"location":"Books/A%20World%20Without%20Work/1.%20A%20History%20of%20Misplaced%20Anxiety/","text":"title: Summary There are two forces at play in the relationship between machines that automate a job and the people who do that job. One is a substituting force that sees people replaced by the machine, and the other is a complimenting one that sees the machine enhance the person doing the job. As ATMs were being rolled out in the US, one might expect the number of people employed as tellers would drop as the machines displaced them. In fact the oposite happened, where the number of teller employer rose during the same period, sometimes by as much as 20%. ATMs complimented the tellers directly, by freeing them up to offer better face to face support to customers, driving more footfall into the branch. At the same time, automation was driving improvements in the economy, making people more propsperous. Both of these increased demand for banking services, causing more branches to be opened, causing more tellers to be employed.","title":"1. A History of Misplaced Anxiety"},{"location":"Books/A%20World%20Without%20Work/2.%20The%20Age%20of%20Labour/","text":"Economists idea of the value of labour has always derived from the idea of skilled vs unskilled work, where the skill refers to the level of formal education someone has. This idea was challenged by the ALM hypothesis which shifted the conversation from a job bias to a task bias. The job-biased model considered each job as a single unit, where doctors did doctoring and lawyers did lawyering. The ALM hypothesis moved the conversation to a model where each job is composed of a number of tasks that are very different in nature, and it's these tasks that are being automated. A trap techno optimists fall into is to say that the only job that has been eliminated from the job market is elevator operator, and that all the other jobs are safe, but in reality each job has many tasks that can be automated.","title":"2. The Age of Labour"},{"location":"Books/A%20World%20Without%20Work/3.%20The%20Pragmatist%20Revolution/","text":"The most capable systems today are not designed like that, rather than are grown organically. Evolution is exactly like this, where the complexity of human anatomy has developed over millions of years, rather than been created by an intelligent being. This idea plays into the development of automation. In the book, two approaches to the development of AI are explained through development of machines that compete against humans in chess and Go. The early efforts in this were based around teaching the machines how to play the game by having grand masters teach them. The machines would approach the game the same way a human player would, by calculating a number of possible moves into the future. This was possible in chess, but would be difficult in Go because the number of possible moves was too high. This approach was about teaching it to win. The later approach was quite different. Instead of teaching the machine to win, it was taught to play. The machines were taught all the rules of the game, and then played many games against themselves.","title":"3. The Pragmatist Revolution"},{"location":"Books/A%20World%20Without%20Work/4.%20Underestimating%20Machines/","text":"","title":"4. Underestimating Machines"},{"location":"Books/A%20World%20Without%20Work/5.%20Task%20Encroachment/","text":"When economists think about the type of skills needed to perform a task, they describe them in terms like \"manual\", \"cognitive\", etc, but this in with respect to how humans perform the task. As we've already seen, robots are able to perform tasks that people previously considered un-automatable by doing them quite differently. When thinking about the automatability of a job, it's important to not only think about the nature of the work (routine or not) but the cost of automation. Human workers doing routine work might still be more economical to employ than an expensive machine. This links back to the origin of the term \"luddite\", where the cotton workers rebelling against the automation of their trade were actually highly skilled, and would likely have been members of powerful guilds. The goal of automating the cotton trade was to make it so a large number of skilled workers could be replaced with a smaller number of unskilled workers.","title":"5. Task Encroachment"},{"location":"Books/A%20World%20Without%20Work/6.%20Frictional%20Technological%20Unemployment/","text":"The future of work depends on two forces: a harmful substituting force and a helpful complementing force. Most stories have a hero and a villain fighting each other, but here technology is playing both roles at once, simultaneously displacing workers while increasing the demands for their services elsewhere in the economy. This does not mean, however, that workers displaced by automation can pick up the jobs created elsewhere in the economy as blue-collar manual workers are being displaced but demand is increasing for white-collar cognitive workers. This is called frictional technological unemployment . There are three types of mismatch preventing workers moving into the in-demand jobs: - skills mismatch - the in-demand jobs require higher skills than displaced workers possess. - identity mismatch - many displaced workers are either taking up work that is below their skill level, or are opting out of work altogether rather than take up \"pink collar work\", a derogatory term for those jobs still performed by humans that are typically done by women. - ****","title":"6. Frictional Technological Unemployment"},{"location":"Books/A%20World%20Without%20Work/A%20World%20Without%20Work/","text":"Contents Part 1: The Context 1. A History of Misplaced Anxiety 2. The Age of Labour 3. The Pragmatist Revolution 4. Underestimating Machines Part 2: The Threat Summary in three sentences ... ... ... Who Should Read It? How the Book Changed Me Why did I read this? Thoughts and Feelings Practical Application Insights My Top Three Quotes ... ... ... Summary in more than three sentences Part 1: The Context There are two ideas that are found at the intersection of Artificial Intelligence research and Economics. The first idea, held by AI researchers, states that only an Artificial General Intelligence would be a true reflection of human intelligence in a machine, and any machine that is able to perform tasks algorithmicaly is nothing more than an \"expensive alarm clock\". The second idea is known as the ALM Hypothesis, and it is used to explain the hollowing out of the labour market in the mid to late twentieth century, where those on the low and high end of the skill scale were flourishing while those in the middle were being automated out of a job. This hypothesis explained this phenomenon by challenging the \"job-bias\" of economic thinking of the time they thought of each profession only as a singular object, where lawyers did lawyering, doctors did doctoring, etc. This thinking lead to the assumption that certain jobs were safe from automation because a machine couldn't do \"lawyering\". The ALM hypothesis challenges this top-down thinking by proposing a bottom-up task-bias instead, describing each job as a collection of tasks, some of which were more automatable than others. It proposed the idea of \"routine work\" as being easy to automated, routine being defined as easy to explain the rules to someone else so they can do it. This articulation of the rules for completing a certain task was thought to be the limiting factor in the automatability of a task. This notion was eventually disproven by the success of chess and go-playing computers. Early computers designed to play chess were designed in the understanding that in order to win a game of chess, one must learn from an expert in the game. Thus, the play styles of grand master were studied and taught to the machines, based primarily on the idea of a chess player thinking X number of potential moves ahead. The computers were able to calculate all possible moves and use probability to make the moves most likely to achieve victory. This didn't scale to Go, however, since the number of potential moves were far too great for the computers to process. This changed with the advent of the \"pragmatic revolution\". Researchers built a computer called AlphaGo, which successfully won games of Go against champions not by learning from human games, but by learning from itself. Researchers programmed it only with the rules of the game, and it then played millions of games against itself, studying the results and formulating its own strategy with which it disproved the notion that Go was too complicated for a machine to win, and that only a human was capable of it. AlphaGo winning the game wasn't as important, however, as how it won it. During turn 37 of the second game, AlphaGo made a move that no human player would have done. It was considered a strategic blunder within the lore of the game, and one commentator described feeling physically sick, which another described it as not human. AlphoGo had rewritten the rules of the game and used them to win. The thinking around the automation of tasks has been root in, and limited by, human understanding of those tasks. Whether or not a task could be automated was understood to be based on whether or not a human could teach a machine the rule for performing it. This thinking did not account for the idea of machines teaching themselves a new set of rules for performing tasks. Human believe ourselves to the pinnacle of nature, to be the most advanced machine in existence to which there is no equal. This hubris has lead us to underestimate the capability of machines, who are on the verge of, if not already, overtaking us in certain areas.","title":"Contents"},{"location":"Books/A%20World%20Without%20Work/A%20World%20Without%20Work/#contents","text":"","title":"Contents"},{"location":"Books/A%20World%20Without%20Work/A%20World%20Without%20Work/#part-1-the-context","text":"1. A History of Misplaced Anxiety 2. The Age of Labour 3. The Pragmatist Revolution 4. Underestimating Machines","title":"Part 1: The Context"},{"location":"Books/A%20World%20Without%20Work/A%20World%20Without%20Work/#part-2-the-threat","text":"","title":"Part 2: The Threat"},{"location":"Books/A%20World%20Without%20Work/A%20World%20Without%20Work/#summary-in-three-sentences","text":"... ... ...","title":"Summary in three sentences"},{"location":"Books/A%20World%20Without%20Work/A%20World%20Without%20Work/#who-should-read-it","text":"","title":"Who Should Read It?"},{"location":"Books/A%20World%20Without%20Work/A%20World%20Without%20Work/#how-the-book-changed-me","text":"","title":"How the Book Changed Me"},{"location":"Books/A%20World%20Without%20Work/A%20World%20Without%20Work/#why-did-i-read-this","text":"","title":"Why did I read this?"},{"location":"Books/A%20World%20Without%20Work/A%20World%20Without%20Work/#thoughts-and-feelings","text":"","title":"Thoughts and Feelings"},{"location":"Books/A%20World%20Without%20Work/A%20World%20Without%20Work/#practical-application","text":"","title":"Practical Application"},{"location":"Books/A%20World%20Without%20Work/A%20World%20Without%20Work/#insights","text":"","title":"Insights"},{"location":"Books/A%20World%20Without%20Work/A%20World%20Without%20Work/#my-top-three-quotes","text":"... ... ...","title":"My Top Three Quotes"},{"location":"Books/A%20World%20Without%20Work/A%20World%20Without%20Work/#summary-in-more-than-three-sentences","text":"","title":"Summary in more than three sentences"},{"location":"Books/A%20World%20Without%20Work/A%20World%20Without%20Work/#part-1-the-context_1","text":"There are two ideas that are found at the intersection of Artificial Intelligence research and Economics. The first idea, held by AI researchers, states that only an Artificial General Intelligence would be a true reflection of human intelligence in a machine, and any machine that is able to perform tasks algorithmicaly is nothing more than an \"expensive alarm clock\". The second idea is known as the ALM Hypothesis, and it is used to explain the hollowing out of the labour market in the mid to late twentieth century, where those on the low and high end of the skill scale were flourishing while those in the middle were being automated out of a job. This hypothesis explained this phenomenon by challenging the \"job-bias\" of economic thinking of the time they thought of each profession only as a singular object, where lawyers did lawyering, doctors did doctoring, etc. This thinking lead to the assumption that certain jobs were safe from automation because a machine couldn't do \"lawyering\". The ALM hypothesis challenges this top-down thinking by proposing a bottom-up task-bias instead, describing each job as a collection of tasks, some of which were more automatable than others. It proposed the idea of \"routine work\" as being easy to automated, routine being defined as easy to explain the rules to someone else so they can do it. This articulation of the rules for completing a certain task was thought to be the limiting factor in the automatability of a task. This notion was eventually disproven by the success of chess and go-playing computers. Early computers designed to play chess were designed in the understanding that in order to win a game of chess, one must learn from an expert in the game. Thus, the play styles of grand master were studied and taught to the machines, based primarily on the idea of a chess player thinking X number of potential moves ahead. The computers were able to calculate all possible moves and use probability to make the moves most likely to achieve victory. This didn't scale to Go, however, since the number of potential moves were far too great for the computers to process. This changed with the advent of the \"pragmatic revolution\". Researchers built a computer called AlphaGo, which successfully won games of Go against champions not by learning from human games, but by learning from itself. Researchers programmed it only with the rules of the game, and it then played millions of games against itself, studying the results and formulating its own strategy with which it disproved the notion that Go was too complicated for a machine to win, and that only a human was capable of it. AlphaGo winning the game wasn't as important, however, as how it won it. During turn 37 of the second game, AlphaGo made a move that no human player would have done. It was considered a strategic blunder within the lore of the game, and one commentator described feeling physically sick, which another described it as not human. AlphoGo had rewritten the rules of the game and used them to win. The thinking around the automation of tasks has been root in, and limited by, human understanding of those tasks. Whether or not a task could be automated was understood to be based on whether or not a human could teach a machine the rule for performing it. This thinking did not account for the idea of machines teaching themselves a new set of rules for performing tasks. Human believe ourselves to the pinnacle of nature, to be the most advanced machine in existence to which there is no equal. This hubris has lead us to underestimate the capability of machines, who are on the verge of, if not already, overtaking us in certain areas.","title":"Part 1: The Context"},{"location":"Books/Atomic%20Habits/Atomic%20Habits/","text":"Summary in three sentences ... ... ... Who Should Read It? How the Book Changed Me Why did I read this? Thoughts and Feelings Practical Application Favourite Quotes ... ... ... 0.1: How to create a good habit The 1st Law - Make it Obvious Fill out the Habits Scorecard. Write down your current habits to become aware of them Use implementation intentions: \u201cI will [BEHAVIOUR] at [TIME] in [LOCATION]\" Use habit stacking: \u201cAfter [CURRENT HABIT], I will [NEW HABIT].\" Design your environment. Make the cures of good habits obvious and visible The 2nd Law - Make it Attractive Use temptation bundling. Pair an action you want to do with an action you need to do. Join a culture where you\u2019re desired behaviour is normal behaviour. Create a motivation ritual. Do something you enjoy immediately before a difficult habit. The 3rd Law - Make it Easy Reduce friction. Decrease the number of steps between you and your good habit. Prime the environment. Prepare your environment to make future actions easier. Master the decisive moment. Optimise the small choices that deliver outsized impact. Use the Two-Minute Rule. downscale your habits until they can be done in two minutes or less. Automate your habits. Invest in technology and onetime purchases that lock in future behaviour. The 4th Law - Make it Satisfying 0.2: How to break a bad habit Inversion of the 1st law - Make it invisible Reduce exposure. Remove the cues of your bad habits from your environment. Inversion of the 2nd law - Make it unattractive Reframe your mind-set. Highlight the benefits of avoiding your bad habits Inversion of the 3rd law - make it difficult Increase friction. Increase the number of steps between you and your bad habits. Use a commitment device. Restrict your future choices to the ones that benefit you. Inversion of the 4th law - Make it unsatisfying 1. The Surprising Power of Atomic Habits Chapter Summary Habits are the compound interest of self improvement. Getting 1 percent better every day counts for a lot in the long-run. Habits are a double-edged sword. They can work for you, or against you, which is why understanding the details is essential. Small changes often appear to make no difference until you cross a critical threshold. The most powerful outcomes of any compounding process are delayed. You need to be patient. An atomic habit is a little habit that is part of a larger system. Just as atoms are the building blocks of molecules, atomic habits are the building blocks of remarkable results. If you want better results, then forget about setting goals. Focus on your system instead. You do not rise to the level of your goals. You fall to the level of your systems. Other Notes The development of bad habits can be related to the shrinking of the comfort zone over time. The longer you wallow in the centre of your comfort zone, the more you build up the habits that are keeping you there. The bad habits are like concrete slowly solidifying and holding you in your comfort zone. The foundation of getting good results in life is the aggregation of marginal gains. Making small improvements in your life, and maintaining them, adds up to something great over time. In order to achieve in life, you should focus on the trajectory rather than the destination. For example, instead of focusing on loosing weight, focus instead on being fit and healthy, and the habits that lead to such a life. When the world looks at successful people, they only see the success. They don\u2019t see the years of work that lead up to that success. The world thinks these people were successful overnight. It\u2019s the same as judging one\u2019s life by someone else\u2019s Instagram or Facebook feeds, which are only a highlight reel of someone\u2019s life. They don\u2019t include the boring bits, or the bad bits. Because of this, many people quit working on their habits when they fail to see tangible results quick enough. In fact, it takes a long time to see those results, but when they appear, it can look from the outside like overnight success. It\u2019s more important to focus on the system that will help you reach a goal, rather than on the goal itself. For example, the Nike principles from the 80s include something like \u201cIf we do the right thing, we make money automatic\u201d. There\u2019s another one that says \u201cDo a good job, and success will find you\u201d. The quote in this chapter is about sports games: \u201cThe score takes care of itself\u201d. If you want to run a marathon, focus on being a good athlete. If you want to write a book, focus on being a writer. If a team wants to win a game, focus on playing well. Goals set the direction, but the systems is what makes the progress. Focusing on the goals can lead to some problems: Losers have the same goals People who achieve an ambitious goals are the ones the world sees. It doesn\u2019t see all the other people who failed to achieve the same goal. Achieving a goal is only a momentary change. You might clean you room, but unless you change the habits that lead to it becoming messy in the first place, it\u2019ll only get messy again. Goals restrict happiness Don\u2019t think \u201cI\u2019ll be happy once I\u2019ve run a marathon\u201d. That could takes years to achieve. Instead think, \u201cI\u2019m happy because I\u2019m an athlete\u201d, which is something you can achieve today by starting training. Goals are at odds with long term progress If you focus on the goal, you might stop once you reach it, losing your progress. \u201cWe don\u2019t rise to the level of our expectations, we fall to the level of our training\u201d - Archilochus 2. How Habits Shape Your Identity (and Vice Versa) Chapter Summary There are three levels of change: outcome change, process change and identity change. The most effective way to change your habits is to focus not on what you want to achieve but on who you wish to be. Your identity emerges out of your habits. Every action is a vote for the type of person you wish to become. Becoming the best version of yourself requires you to continuously edit your beliefs, and to upgrade and expand your identity. The real reason habits matter is not because they can get you better results (although they can do that), but because they can change your beliefs about yourself. Other notes Building better habits isn\u2019t about littering your day with life hacks. It\u2019s not about achieving certain goals like losing weight. Habits can help with that, but fundamentally they\u2019re not about having something, they\u2019re about becoming someone. Quite literally, you become your habits. Many people begin the process of changing their habits by focusing on what they want to achieve. This leads us to outcome-based habits. The alternative is to build identity-based habits. With this approach, we start by focusing on who we want to become. Your identity emerges out of your habits. The more you repeat a certain behaviour, the more you reinforce the identity associated with that behaviour. Every belief, including those about yourself, is learned and conditioned through experience. True behaviour change is identity change. You might start a habit because of motivation, but the only reason you\u2019ll stick with it is because it becomes a part of your identity. The goal is not to read a book, the goal is to become a reader The goal is not to run a marathon, the goal is to become a runner The goal is not to learn an instrument, the goal is to become a musician. Behaviour that is not congruent with the self will not last. You may want more money, but if your identity is someone who consumes rather than creates then you\u2019ll continue to be pulled towards spending rather than earning. 3. How to build better habits in 4 simple steps Chapter Summary A habit is a behaviour that is repeated enough times to become automatic The ultimate purpose of a habit is to solve the problems of life with as little energy and effort as possible. Any habit can be broken down into a feedback loop that involves four steps: cue, craving, response, reward. The Four Laws of Behaviour Change are a simple set of rules we can use to build better habits: Makes it obvious (Cue) Make it attractive (Craving) Make it easy (Response) Make it satisfying (Reward) Other Notes When a habit is forming, mental activity in the brain is high as it analyses the problem and comes up with a solution. The more you repeat this process the less activity there is in the brain is it locks in the process of solving the problem. A habit is a mental shortcut learned from experience. Good habits give us the freedom to life live. Someone with good financial habits doesn\u2019t have to worry about saving money, whereas someone with bad habits is always worrying about the next pound and living pay check to pay check. The process of forming habits can be divided into four steps: Cue Triggers your brain to initiate a behaviour. It is a bit of information that predicts a reward. Craving Cravings are the motivational force behind every habit. What you crave is not the habit, but the change in state it delivers. A smoker craves the nicotine hit, rather than the act of smoking itself. Every craving is linked to a desire to change an internal state. Cravings differ from one person to the next. They are meaningless until they are interpreted. The thoughts, feelings and emotions of an observer will transform a cue into a craving. Response The response is the habit you perform, which can take the form of a thought or an action. Reward End end goal of the habit The cue is about noticing the reward, the craving is about wanting the reward and the response is about obtaining the reward. First purpose of reward is to satisfy craving Second purpose is to teach us which actions are worth remembering for the future Rewards close the feedback loop and complete the habit cycle. If a behaviour is insufficient in any of these four steps, it will not become a habit. Without the first three steps, a behaviour will not occur. Without all four, it will not be repeated. A cue triggers a craving, which motivates a response, which provides a reward which satisfies the craving and becomes associated with the cue. These four steps can be split into two phases. The problem phase includes the cue and craving, while the solution phase includes the response and reward. All behaviour is driven by a desire to solve a problem. How to create a good habit The first law (cue) - Make it obvious The second law (craving) - Making it attractive The third law (response) - Make it easy The fourth law (reward) - Make it attractive How to break a bad habit Inversion of the first law (cue) - Make it invisible Inversion of the second law (craving) - Make it unattractive Inversion of the third law (response) - Make it difficult Inversion of the fourth law (reward) - Make it unsatisfying 4. The man who didn\u2019t look right Chapter Summary Without enough practice, your brain will pick up on the cues that predict certain outcomes without consciously thinking about it. Once our habits become automatic, we stop paying attention to what we are doing. The process of behaviour change always starts with awareness. You need to be aware of your habits before you can change them. Pointing-and-calling raises your level of awareness fri a non conscious habit to a more conscious level by verbalising your actions. The Habit Scorecard is a simple exercise you can use to become more aware of your behaviour. 5. The Best Way To Start A New Habit Chapter Summary The 1st Law of Behaviour Change is make it obvious. The two most common cues are time and location. Creating an implementation intention is a strategy you can use to pair a new habit with a specific time and location. The implementation intention formula is: I will [BEHAVIOUR] at [TIME] in [LOCATION]. Habit stacking is a strategy you can use to pair a new habit with a current habit. The Habit Stacking formula is: After [CURRENT HABIT], I will [NEW HABIT] 6. Motivation Is Overrated: Environment Often Matters More Chapter Summary Small changes in context can lead to large changes in behaviour over time. Every habit is limited by a cue. We are more likely to notice cues that stand out. Make the cues of a good habit obvious in your environment. Gradually, your habit become associated not with a single trigger but with the entire context surrounding the behaviour. The context becomes the cue. It is easier to build new habits in a new environment because you are not fighting against the old cues. 7. The Secret to Self-Control Chapter Summary The inversion of the 1st Law of Behaviour Change is to make it invisible. Once a habit is formed, it is unlikely to be forgotten. People with high self-control tend to spend less time in tempting situations. It\u2019s easier to avoid temptation than to resist it. One of the most practical ways to eliminate a bad habit is to reduce exposure to the cue that causes it. Self-control is a short-term strategy, not a long term one. 8. How to Make a Habit Irresistible Chapter Summary The 2nd Law of behaviour change is make it attractive. The more attractive an opportunity is, the more likely it is to become habit-forming. Habits are a dopamine-driven feedback loop. When dopamine rises, so does our motivation to act. It is the anticipation of a reward - not the fulfilment of it - that gets us to take action. The greater the anticipation, the greater the dopamine spike. Temptation bundling is one way to make your habits more attractive. The strategy is to pair an action you want to do with an action you need to do. 9. The Role of Family and Friends in Shaping Your Habits Chapter Summary The culture we live in determines which behaviours are attractive to us. We tend to adopt habits that are praised or approved of by our culture because we have a strong desire to fit in and belong to the tribe. We tend to imitate the habits of three social groups: the close (family and friends), the many (the tribe), and the powerful (those with status and prestige). One of the most effective things you can do to build better habits is to join a culture where (1) your desired behaviour is the normal behaviour and (2) you already have something in common with the group. The normal behaviour of the tribe often overpowers the desired behaviour of the individual. Most days, we\u2019d rather be wrong with the crowd than be right by ourselves. If a behaviour car get us approval, respect and praise, we find it attractive. 10. How to Find and Fix the Causes of Your Bad Habits Chapter Summary The inversion of the 2nd Law of Behaviour Change is make it unattractive. Every behaviour has a surface level craving and a deeper underlying motive. Your habits are modern day solutions to ancient desires. The cause of your habits is actually the prediction that precedes them. The prediction leads to a feeling. Highlight the benefits of avoiding a bad habit to make it seem unattractive. Habits are attractive when we associate them with positive feelings and unattractive when we associate them with negative feelings. Create motivation ritual by doing something you enjoy immediately before a difficult habit. 11. Walk Slowly, but Never Backward Chapter Summary The 3rd Law of behaviour Change is make it easy The most effective form of learning is practice, not planning Focus on taking action, not being in motion Habit formation is the process by which a behaviour becomes progressively more automatic through repetition. The amount of time you have been performing a habit is not as important as the number of times you have performed it. 12. The Law of Least Effort Chapter Summary Human behaviour follows the Law of Least Effort. We will naturally gravitate towards the option that requires the least amount of work. Create an environment where doing the right thing is as easy as possible. Reduce the friction associated with good behaviours. When friction is low, habits are easy. Increase the friction associated with the bad behaviours. When friction is high, habits are difficult. Prime your environment to make future actions easier. 13. How to Stop Procrastinating by Using the Two-Minute Rule Chapter Summary Habits can be completed in a few seconds but continue to impact your behaviour for minutes or hours afterward. Many habits occur at decisive moments - choices that are like a fork in the road - and either send you in a direction of a productive day or an unproductive one. The Two-Minute Rule states \u201cWhen you start a new habit, it should take less than two minutes to do\u201d. The more you ritualise the beginning of a process, the more likely it becomes that you can slip into the state of deep focus that is required to do great things. Standardise before you optimise. You can\u2019t improve a habit that doesn\u2019t exist. 14. How to Make Good Habits Inevitable and Bad Habits Impossible Chapter Summary The inversion of the 3rd Law of Behaviour Change is make it difficult. A commitment device is a choice you make in the present that locks in better behaviour in the future. The ultimate way to lock in future behaviour is to automate your habits. Onetime choices - like buying a better mattress or enrolling in an automatic savings plan - are single actions that automate your future habits and deliver increasing return over time. Using technology to automate your habits is the most reliable and effective way to guarantee the right behaviour. 15. The Cardinal Rule of Behaviour Change","title":"Atomic Habits"},{"location":"Books/Atomic%20Habits/Atomic%20Habits/#summary-in-three-sentences","text":"... ... ...","title":"Summary in three sentences"},{"location":"Books/Atomic%20Habits/Atomic%20Habits/#who-should-read-it","text":"","title":"Who Should Read It?"},{"location":"Books/Atomic%20Habits/Atomic%20Habits/#how-the-book-changed-me","text":"","title":"How the Book Changed Me"},{"location":"Books/Atomic%20Habits/Atomic%20Habits/#why-did-i-read-this","text":"","title":"Why did I read this?"},{"location":"Books/Atomic%20Habits/Atomic%20Habits/#thoughts-and-feelings","text":"","title":"Thoughts and Feelings"},{"location":"Books/Atomic%20Habits/Atomic%20Habits/#practical-application","text":"","title":"Practical Application"},{"location":"Books/Atomic%20Habits/Atomic%20Habits/#favourite-quotes","text":"... ... ...","title":"Favourite Quotes"},{"location":"Books/Atomic%20Habits/Atomic%20Habits/#01-how-to-create-a-good-habit","text":"The 1st Law - Make it Obvious Fill out the Habits Scorecard. Write down your current habits to become aware of them Use implementation intentions: \u201cI will [BEHAVIOUR] at [TIME] in [LOCATION]\" Use habit stacking: \u201cAfter [CURRENT HABIT], I will [NEW HABIT].\" Design your environment. Make the cures of good habits obvious and visible The 2nd Law - Make it Attractive Use temptation bundling. Pair an action you want to do with an action you need to do. Join a culture where you\u2019re desired behaviour is normal behaviour. Create a motivation ritual. Do something you enjoy immediately before a difficult habit. The 3rd Law - Make it Easy Reduce friction. Decrease the number of steps between you and your good habit. Prime the environment. Prepare your environment to make future actions easier. Master the decisive moment. Optimise the small choices that deliver outsized impact. Use the Two-Minute Rule. downscale your habits until they can be done in two minutes or less. Automate your habits. Invest in technology and onetime purchases that lock in future behaviour. The 4th Law - Make it Satisfying","title":"0.1: How to create a good habit"},{"location":"Books/Atomic%20Habits/Atomic%20Habits/#02-how-to-break-a-bad-habit","text":"Inversion of the 1st law - Make it invisible Reduce exposure. Remove the cues of your bad habits from your environment. Inversion of the 2nd law - Make it unattractive Reframe your mind-set. Highlight the benefits of avoiding your bad habits Inversion of the 3rd law - make it difficult Increase friction. Increase the number of steps between you and your bad habits. Use a commitment device. Restrict your future choices to the ones that benefit you. Inversion of the 4th law - Make it unsatisfying","title":"0.2: How to break a bad habit"},{"location":"Books/Atomic%20Habits/Atomic%20Habits/#1-the-surprising-power-of-atomic-habits","text":"","title":"1. The Surprising Power of Atomic Habits"},{"location":"Books/Atomic%20Habits/Atomic%20Habits/#chapter-summary","text":"Habits are the compound interest of self improvement. Getting 1 percent better every day counts for a lot in the long-run. Habits are a double-edged sword. They can work for you, or against you, which is why understanding the details is essential. Small changes often appear to make no difference until you cross a critical threshold. The most powerful outcomes of any compounding process are delayed. You need to be patient. An atomic habit is a little habit that is part of a larger system. Just as atoms are the building blocks of molecules, atomic habits are the building blocks of remarkable results. If you want better results, then forget about setting goals. Focus on your system instead. You do not rise to the level of your goals. You fall to the level of your systems.","title":"Chapter Summary"},{"location":"Books/Atomic%20Habits/Atomic%20Habits/#other-notes","text":"The development of bad habits can be related to the shrinking of the comfort zone over time. The longer you wallow in the centre of your comfort zone, the more you build up the habits that are keeping you there. The bad habits are like concrete slowly solidifying and holding you in your comfort zone. The foundation of getting good results in life is the aggregation of marginal gains. Making small improvements in your life, and maintaining them, adds up to something great over time. In order to achieve in life, you should focus on the trajectory rather than the destination. For example, instead of focusing on loosing weight, focus instead on being fit and healthy, and the habits that lead to such a life. When the world looks at successful people, they only see the success. They don\u2019t see the years of work that lead up to that success. The world thinks these people were successful overnight. It\u2019s the same as judging one\u2019s life by someone else\u2019s Instagram or Facebook feeds, which are only a highlight reel of someone\u2019s life. They don\u2019t include the boring bits, or the bad bits. Because of this, many people quit working on their habits when they fail to see tangible results quick enough. In fact, it takes a long time to see those results, but when they appear, it can look from the outside like overnight success. It\u2019s more important to focus on the system that will help you reach a goal, rather than on the goal itself. For example, the Nike principles from the 80s include something like \u201cIf we do the right thing, we make money automatic\u201d. There\u2019s another one that says \u201cDo a good job, and success will find you\u201d. The quote in this chapter is about sports games: \u201cThe score takes care of itself\u201d. If you want to run a marathon, focus on being a good athlete. If you want to write a book, focus on being a writer. If a team wants to win a game, focus on playing well. Goals set the direction, but the systems is what makes the progress. Focusing on the goals can lead to some problems: Losers have the same goals People who achieve an ambitious goals are the ones the world sees. It doesn\u2019t see all the other people who failed to achieve the same goal. Achieving a goal is only a momentary change. You might clean you room, but unless you change the habits that lead to it becoming messy in the first place, it\u2019ll only get messy again. Goals restrict happiness Don\u2019t think \u201cI\u2019ll be happy once I\u2019ve run a marathon\u201d. That could takes years to achieve. Instead think, \u201cI\u2019m happy because I\u2019m an athlete\u201d, which is something you can achieve today by starting training. Goals are at odds with long term progress If you focus on the goal, you might stop once you reach it, losing your progress. \u201cWe don\u2019t rise to the level of our expectations, we fall to the level of our training\u201d - Archilochus","title":"Other Notes"},{"location":"Books/Atomic%20Habits/Atomic%20Habits/#2-how-habits-shape-your-identity-and-vice-versa","text":"","title":"2. How Habits Shape Your Identity (and Vice Versa)"},{"location":"Books/Atomic%20Habits/Atomic%20Habits/#chapter-summary_1","text":"There are three levels of change: outcome change, process change and identity change. The most effective way to change your habits is to focus not on what you want to achieve but on who you wish to be. Your identity emerges out of your habits. Every action is a vote for the type of person you wish to become. Becoming the best version of yourself requires you to continuously edit your beliefs, and to upgrade and expand your identity. The real reason habits matter is not because they can get you better results (although they can do that), but because they can change your beliefs about yourself.","title":"Chapter Summary"},{"location":"Books/Atomic%20Habits/Atomic%20Habits/#other-notes_1","text":"Building better habits isn\u2019t about littering your day with life hacks. It\u2019s not about achieving certain goals like losing weight. Habits can help with that, but fundamentally they\u2019re not about having something, they\u2019re about becoming someone. Quite literally, you become your habits. Many people begin the process of changing their habits by focusing on what they want to achieve. This leads us to outcome-based habits. The alternative is to build identity-based habits. With this approach, we start by focusing on who we want to become. Your identity emerges out of your habits. The more you repeat a certain behaviour, the more you reinforce the identity associated with that behaviour. Every belief, including those about yourself, is learned and conditioned through experience. True behaviour change is identity change. You might start a habit because of motivation, but the only reason you\u2019ll stick with it is because it becomes a part of your identity. The goal is not to read a book, the goal is to become a reader The goal is not to run a marathon, the goal is to become a runner The goal is not to learn an instrument, the goal is to become a musician. Behaviour that is not congruent with the self will not last. You may want more money, but if your identity is someone who consumes rather than creates then you\u2019ll continue to be pulled towards spending rather than earning.","title":"Other notes"},{"location":"Books/Atomic%20Habits/Atomic%20Habits/#3-how-to-build-better-habits-in-4-simple-steps","text":"","title":"3. How to build better habits in 4 simple steps"},{"location":"Books/Atomic%20Habits/Atomic%20Habits/#chapter-summary_2","text":"A habit is a behaviour that is repeated enough times to become automatic The ultimate purpose of a habit is to solve the problems of life with as little energy and effort as possible. Any habit can be broken down into a feedback loop that involves four steps: cue, craving, response, reward. The Four Laws of Behaviour Change are a simple set of rules we can use to build better habits: Makes it obvious (Cue) Make it attractive (Craving) Make it easy (Response) Make it satisfying (Reward)","title":"Chapter Summary"},{"location":"Books/Atomic%20Habits/Atomic%20Habits/#other-notes_2","text":"When a habit is forming, mental activity in the brain is high as it analyses the problem and comes up with a solution. The more you repeat this process the less activity there is in the brain is it locks in the process of solving the problem. A habit is a mental shortcut learned from experience. Good habits give us the freedom to life live. Someone with good financial habits doesn\u2019t have to worry about saving money, whereas someone with bad habits is always worrying about the next pound and living pay check to pay check. The process of forming habits can be divided into four steps: Cue Triggers your brain to initiate a behaviour. It is a bit of information that predicts a reward. Craving Cravings are the motivational force behind every habit. What you crave is not the habit, but the change in state it delivers. A smoker craves the nicotine hit, rather than the act of smoking itself. Every craving is linked to a desire to change an internal state. Cravings differ from one person to the next. They are meaningless until they are interpreted. The thoughts, feelings and emotions of an observer will transform a cue into a craving. Response The response is the habit you perform, which can take the form of a thought or an action. Reward End end goal of the habit The cue is about noticing the reward, the craving is about wanting the reward and the response is about obtaining the reward. First purpose of reward is to satisfy craving Second purpose is to teach us which actions are worth remembering for the future Rewards close the feedback loop and complete the habit cycle. If a behaviour is insufficient in any of these four steps, it will not become a habit. Without the first three steps, a behaviour will not occur. Without all four, it will not be repeated. A cue triggers a craving, which motivates a response, which provides a reward which satisfies the craving and becomes associated with the cue. These four steps can be split into two phases. The problem phase includes the cue and craving, while the solution phase includes the response and reward. All behaviour is driven by a desire to solve a problem. How to create a good habit The first law (cue) - Make it obvious The second law (craving) - Making it attractive The third law (response) - Make it easy The fourth law (reward) - Make it attractive How to break a bad habit Inversion of the first law (cue) - Make it invisible Inversion of the second law (craving) - Make it unattractive Inversion of the third law (response) - Make it difficult Inversion of the fourth law (reward) - Make it unsatisfying","title":"Other Notes"},{"location":"Books/Atomic%20Habits/Atomic%20Habits/#4-the-man-who-didnt-look-right","text":"","title":"4. The man who didn\u2019t look right"},{"location":"Books/Atomic%20Habits/Atomic%20Habits/#chapter-summary_3","text":"Without enough practice, your brain will pick up on the cues that predict certain outcomes without consciously thinking about it. Once our habits become automatic, we stop paying attention to what we are doing. The process of behaviour change always starts with awareness. You need to be aware of your habits before you can change them. Pointing-and-calling raises your level of awareness fri a non conscious habit to a more conscious level by verbalising your actions. The Habit Scorecard is a simple exercise you can use to become more aware of your behaviour.","title":"Chapter Summary"},{"location":"Books/Atomic%20Habits/Atomic%20Habits/#5-the-best-way-to-start-a-new-habit","text":"","title":"5. The Best Way To Start A New Habit"},{"location":"Books/Atomic%20Habits/Atomic%20Habits/#chapter-summary_4","text":"The 1st Law of Behaviour Change is make it obvious. The two most common cues are time and location. Creating an implementation intention is a strategy you can use to pair a new habit with a specific time and location. The implementation intention formula is: I will [BEHAVIOUR] at [TIME] in [LOCATION]. Habit stacking is a strategy you can use to pair a new habit with a current habit. The Habit Stacking formula is: After [CURRENT HABIT], I will [NEW HABIT]","title":"Chapter Summary"},{"location":"Books/Atomic%20Habits/Atomic%20Habits/#6-motivation-is-overrated-environment-often-matters-more","text":"","title":"6. Motivation Is Overrated: Environment Often Matters More"},{"location":"Books/Atomic%20Habits/Atomic%20Habits/#chapter-summary_5","text":"Small changes in context can lead to large changes in behaviour over time. Every habit is limited by a cue. We are more likely to notice cues that stand out. Make the cues of a good habit obvious in your environment. Gradually, your habit become associated not with a single trigger but with the entire context surrounding the behaviour. The context becomes the cue. It is easier to build new habits in a new environment because you are not fighting against the old cues.","title":"Chapter Summary"},{"location":"Books/Atomic%20Habits/Atomic%20Habits/#7-the-secret-to-self-control","text":"","title":"7. The Secret to Self-Control"},{"location":"Books/Atomic%20Habits/Atomic%20Habits/#chapter-summary_6","text":"The inversion of the 1st Law of Behaviour Change is to make it invisible. Once a habit is formed, it is unlikely to be forgotten. People with high self-control tend to spend less time in tempting situations. It\u2019s easier to avoid temptation than to resist it. One of the most practical ways to eliminate a bad habit is to reduce exposure to the cue that causes it. Self-control is a short-term strategy, not a long term one.","title":"Chapter Summary"},{"location":"Books/Atomic%20Habits/Atomic%20Habits/#8-how-to-make-a-habit-irresistible","text":"","title":"8. How to Make a Habit Irresistible"},{"location":"Books/Atomic%20Habits/Atomic%20Habits/#chapter-summary_7","text":"The 2nd Law of behaviour change is make it attractive. The more attractive an opportunity is, the more likely it is to become habit-forming. Habits are a dopamine-driven feedback loop. When dopamine rises, so does our motivation to act. It is the anticipation of a reward - not the fulfilment of it - that gets us to take action. The greater the anticipation, the greater the dopamine spike. Temptation bundling is one way to make your habits more attractive. The strategy is to pair an action you want to do with an action you need to do.","title":"Chapter Summary"},{"location":"Books/Atomic%20Habits/Atomic%20Habits/#9-the-role-of-family-and-friends-in-shaping-your-habits","text":"","title":"9. The Role of Family and Friends in Shaping Your Habits"},{"location":"Books/Atomic%20Habits/Atomic%20Habits/#chapter-summary_8","text":"The culture we live in determines which behaviours are attractive to us. We tend to adopt habits that are praised or approved of by our culture because we have a strong desire to fit in and belong to the tribe. We tend to imitate the habits of three social groups: the close (family and friends), the many (the tribe), and the powerful (those with status and prestige). One of the most effective things you can do to build better habits is to join a culture where (1) your desired behaviour is the normal behaviour and (2) you already have something in common with the group. The normal behaviour of the tribe often overpowers the desired behaviour of the individual. Most days, we\u2019d rather be wrong with the crowd than be right by ourselves. If a behaviour car get us approval, respect and praise, we find it attractive.","title":"Chapter Summary"},{"location":"Books/Atomic%20Habits/Atomic%20Habits/#10-how-to-find-and-fix-the-causes-of-your-bad-habits","text":"","title":"10. How to Find and Fix the Causes of Your Bad Habits"},{"location":"Books/Atomic%20Habits/Atomic%20Habits/#chapter-summary_9","text":"The inversion of the 2nd Law of Behaviour Change is make it unattractive. Every behaviour has a surface level craving and a deeper underlying motive. Your habits are modern day solutions to ancient desires. The cause of your habits is actually the prediction that precedes them. The prediction leads to a feeling. Highlight the benefits of avoiding a bad habit to make it seem unattractive. Habits are attractive when we associate them with positive feelings and unattractive when we associate them with negative feelings. Create motivation ritual by doing something you enjoy immediately before a difficult habit.","title":"Chapter Summary"},{"location":"Books/Atomic%20Habits/Atomic%20Habits/#11-walk-slowly-but-never-backward","text":"","title":"11. Walk Slowly, but Never Backward"},{"location":"Books/Atomic%20Habits/Atomic%20Habits/#chapter-summary_10","text":"The 3rd Law of behaviour Change is make it easy The most effective form of learning is practice, not planning Focus on taking action, not being in motion Habit formation is the process by which a behaviour becomes progressively more automatic through repetition. The amount of time you have been performing a habit is not as important as the number of times you have performed it.","title":"Chapter Summary"},{"location":"Books/Atomic%20Habits/Atomic%20Habits/#12-the-law-of-least-effort","text":"","title":"12. The Law of Least Effort"},{"location":"Books/Atomic%20Habits/Atomic%20Habits/#chapter-summary_11","text":"Human behaviour follows the Law of Least Effort. We will naturally gravitate towards the option that requires the least amount of work. Create an environment where doing the right thing is as easy as possible. Reduce the friction associated with good behaviours. When friction is low, habits are easy. Increase the friction associated with the bad behaviours. When friction is high, habits are difficult. Prime your environment to make future actions easier.","title":"Chapter Summary"},{"location":"Books/Atomic%20Habits/Atomic%20Habits/#13-how-to-stop-procrastinating-by-using-the-two-minute-rule","text":"","title":"13. How to Stop Procrastinating by Using the Two-Minute Rule"},{"location":"Books/Atomic%20Habits/Atomic%20Habits/#chapter-summary_12","text":"Habits can be completed in a few seconds but continue to impact your behaviour for minutes or hours afterward. Many habits occur at decisive moments - choices that are like a fork in the road - and either send you in a direction of a productive day or an unproductive one. The Two-Minute Rule states \u201cWhen you start a new habit, it should take less than two minutes to do\u201d. The more you ritualise the beginning of a process, the more likely it becomes that you can slip into the state of deep focus that is required to do great things. Standardise before you optimise. You can\u2019t improve a habit that doesn\u2019t exist.","title":"Chapter Summary"},{"location":"Books/Atomic%20Habits/Atomic%20Habits/#14-how-to-make-good-habits-inevitable-and-bad-habits-impossible","text":"","title":"14. How to Make Good Habits Inevitable and Bad Habits Impossible"},{"location":"Books/Atomic%20Habits/Atomic%20Habits/#chapter-summary_13","text":"The inversion of the 3rd Law of Behaviour Change is make it difficult. A commitment device is a choice you make in the present that locks in better behaviour in the future. The ultimate way to lock in future behaviour is to automate your habits. Onetime choices - like buying a better mattress or enrolling in an automatic savings plan - are single actions that automate your future habits and deliver increasing return over time. Using technology to automate your habits is the most reliable and effective way to guarantee the right behaviour.","title":"Chapter Summary"},{"location":"Books/Atomic%20Habits/Atomic%20Habits/#15-the-cardinal-rule-of-behaviour-change","text":"","title":"15. The Cardinal Rule of Behaviour Change"},{"location":"Books/Coaching%20and%20Mentoring%20for%20Dummies/1.%20Get%20Off%20The%20Bench%20And%20Be%20The%20Coach/","text":"In This Chapter Defining what coaching means in the business world Contrasting two common types of managers: coaches versus doers Making the change to managing as a coach Taking a look at the tools of coaching Summary Being an effective manager in the modern workforce means being a coach over a doer, which means working according to the principle of and instead of or . This means you consider your job to be a balance of managing people and tasks (a coach), rather than people or tasks (a doer, who usually prioritises the tasks over the people). Being a coach is to step away from the work that is your background, and instead focus your efforts on developing the people who will do the work in your place. It means empowering your employees to be responsible for their own problems, and equipping them with the tools to solve them. Getting The Lowdown On Business Coaching Coaching, in a business context, has the following parts to its definition: being an approach to management, how one carries out the role of being a manager. a set of skills for managing employee performance to deliver results. managing as a coach means developing and challenging your employees skills so they learn and grow, allowing you to get the best out of them. coaching tools include: setting goals and performance plans giving performance feedback conducting periodic performance reviews guiding development through mentoring and tutoring tutoring with questions taking employees under your wing motivating employee performance delegating to empower and increase productivity training for skill development stimulating and supporting career development intervening to build improvement in performance your relationship will vary from one employee to the next, someone needing direction and firmness while others need a lighter touch, and the coaching tools are tailored to the individuals skill level and needs. the key to successful coaching is spending quality time, rather than quantity time, with each employee so they return to their job to perform better. Fine, but do I really need to be a coach? Coaching helps you to: - do more with fewer resources - get employees to adapt to change - find ways to increase efficiency and productivity - create an environment to retain employees - meet greater customer expectations - deliver results It's about helping employees work smarter not harder modern management is about moving from being a task-manager to being a coach who empowers employees coaching is about getting your employees to step up and take responsibility instead of waiting to be told what to do Managing as a Coach versus as a Doer managing as a coach means managing the work by managing the people. By developing the people doing the work, you enable them to do greater quantities of higher quality work in less time. ^6b0496 managing as a doer focuses more on the technical part of their role, functioning as a senior individual contributor. the key difference between these two roles is and vs or - the coach approaches the job as a balance between managing people and managing tasks. Doers, on the other hand, consider themselves either to have task issues or people issues to deal with, seeing the two as unconnected and generally preferring to focus on getting things done. I'm a Doer, You're a Doer - So Many Mangers Are Doers Most managers end up being doers for the following reasons: people often get started in management by being good doers and getting promoted from the ranks of the workers. because of this, many of the role models of new manager are doers. many managers tend to focus their continued learning on their technical field, often not seeing management as a discipline in its own right. If you find yourself following the doer style of management you're not a bad person, you just need to learn the skills of the coaching style you're part of a very big club coaches are doers too, just sharing their focus with coaching their employees. technical competence is important for coaching effectively. Being an effective manager means being a coach over a doer. It means working according to the principle of _and_ instead of _or_ by balancing both your technical and people responsibilities.","title":"In This Chapter"},{"location":"Books/Coaching%20and%20Mentoring%20for%20Dummies/1.%20Get%20Off%20The%20Bench%20And%20Be%20The%20Coach/#in-this-chapter","text":"Defining what coaching means in the business world Contrasting two common types of managers: coaches versus doers Making the change to managing as a coach Taking a look at the tools of coaching","title":"In This Chapter"},{"location":"Books/Coaching%20and%20Mentoring%20for%20Dummies/1.%20Get%20Off%20The%20Bench%20And%20Be%20The%20Coach/#summary","text":"Being an effective manager in the modern workforce means being a coach over a doer, which means working according to the principle of and instead of or . This means you consider your job to be a balance of managing people and tasks (a coach), rather than people or tasks (a doer, who usually prioritises the tasks over the people). Being a coach is to step away from the work that is your background, and instead focus your efforts on developing the people who will do the work in your place. It means empowering your employees to be responsible for their own problems, and equipping them with the tools to solve them.","title":"Summary"},{"location":"Books/Coaching%20and%20Mentoring%20for%20Dummies/1.%20Get%20Off%20The%20Bench%20And%20Be%20The%20Coach/#getting-the-lowdown-on-business-coaching","text":"Coaching, in a business context, has the following parts to its definition: being an approach to management, how one carries out the role of being a manager. a set of skills for managing employee performance to deliver results. managing as a coach means developing and challenging your employees skills so they learn and grow, allowing you to get the best out of them. coaching tools include: setting goals and performance plans giving performance feedback conducting periodic performance reviews guiding development through mentoring and tutoring tutoring with questions taking employees under your wing motivating employee performance delegating to empower and increase productivity training for skill development stimulating and supporting career development intervening to build improvement in performance your relationship will vary from one employee to the next, someone needing direction and firmness while others need a lighter touch, and the coaching tools are tailored to the individuals skill level and needs. the key to successful coaching is spending quality time, rather than quantity time, with each employee so they return to their job to perform better.","title":"Getting The Lowdown On Business Coaching"},{"location":"Books/Coaching%20and%20Mentoring%20for%20Dummies/1.%20Get%20Off%20The%20Bench%20And%20Be%20The%20Coach/#fine-but-do-i-really-need-to-be-a-coach","text":"Coaching helps you to: - do more with fewer resources - get employees to adapt to change - find ways to increase efficiency and productivity - create an environment to retain employees - meet greater customer expectations - deliver results It's about helping employees work smarter not harder modern management is about moving from being a task-manager to being a coach who empowers employees coaching is about getting your employees to step up and take responsibility instead of waiting to be told what to do","title":"Fine, but do I really need to be a coach?"},{"location":"Books/Coaching%20and%20Mentoring%20for%20Dummies/1.%20Get%20Off%20The%20Bench%20And%20Be%20The%20Coach/#managing-as-a-coach-versus-as-a-doer","text":"managing as a coach means managing the work by managing the people. By developing the people doing the work, you enable them to do greater quantities of higher quality work in less time. ^6b0496 managing as a doer focuses more on the technical part of their role, functioning as a senior individual contributor. the key difference between these two roles is and vs or - the coach approaches the job as a balance between managing people and managing tasks. Doers, on the other hand, consider themselves either to have task issues or people issues to deal with, seeing the two as unconnected and generally preferring to focus on getting things done.","title":"Managing as a Coach versus as a Doer"},{"location":"Books/Coaching%20and%20Mentoring%20for%20Dummies/1.%20Get%20Off%20The%20Bench%20And%20Be%20The%20Coach/#im-a-doer-youre-a-doer-so-many-mangers-are-doers","text":"Most managers end up being doers for the following reasons: people often get started in management by being good doers and getting promoted from the ranks of the workers. because of this, many of the role models of new manager are doers. many managers tend to focus their continued learning on their technical field, often not seeing management as a discipline in its own right. If you find yourself following the doer style of management you're not a bad person, you just need to learn the skills of the coaching style you're part of a very big club coaches are doers too, just sharing their focus with coaching their employees. technical competence is important for coaching effectively. Being an effective manager means being a coach over a doer. It means working according to the principle of _and_ instead of _or_ by balancing both your technical and people responsibilities.","title":"I'm a Doer, You're a Doer - So Many Mangers Are Doers"},{"location":"Books/Coaching%20and%20Mentoring%20for%20Dummies/10.%20Taking%20Them%20Under%20Your%20Wing/","text":"","title":"10. Taking Them Under Your Wing"},{"location":"Books/Coaching%20and%20Mentoring%20for%20Dummies/11.%20Motivation%2C%20Not%20Inspiration%20Or%20Perspiration/","text":"","title":"11. Motivation, Not Inspiration Or Perspiration"},{"location":"Books/Coaching%20and%20Mentoring%20for%20Dummies/12.%20Seven%20Practical%20Strategies%20To%20Motivate%20Employees/","text":"","title":"12. Seven Practical Strategies To Motivate Employees"},{"location":"Books/Coaching%20and%20Mentoring%20for%20Dummies/13.%20Don%27t%20Try%20To%20Do%20It%20All%20Yourself%20-%20Delegate/","text":"","title":"13. Don't Try To Do It All Yourself   Delegate"},{"location":"Books/Coaching%20and%20Mentoring%20for%20Dummies/14.%20Knowing%20When%20-%20And%20How%20-%20To%20Train/","text":"","title":"14. Knowing When   And How   To Train"},{"location":"Books/Coaching%20and%20Mentoring%20for%20Dummies/15.%20Building%20Career%20Self-Reliance/","text":"","title":"15. Building Career Self Reliance"},{"location":"Books/Coaching%20and%20Mentoring%20for%20Dummies/16.%20Making%20The%20Plan%20-%20Coaching%20For%20Development/","text":"","title":"16. Making The Plan   Coaching For Development"},{"location":"Books/Coaching%20and%20Mentoring%20for%20Dummies/17.%20Ten%20Coaching%20Myths/","text":"In The Chapter Debunking myths surrounding coaching Getting a fresh perspective on the realities of coaching You Can't Afford The Time To Coach Being a manager/leader means spending your time helping others be more effective, rather than working on your own tasks. Your time is a valuable resource and needs to be managed effectively. If you don't have the time to coach, you need to make it. ^b5ecc5 Coaching Is Only About Being Nice To Employees Being too nice to your employees makes it hard for you to give them constructive feedback, which can impair their performance and their growth. You need to be direct and firm with them when the situation calls for it. Without Any Good Role Models, Coaching Won't Work Be the change you want to see. If you don't have any effective role models, make sure your employees don't also feel the same way. Take responsibility for your own situation, and coach your employees to do likewise. Coaching Means Seeking Consensus On Every Decision You Make Don't fall into the trap of thinking that collaborative working means getting input from employees on every decision. Employees want you to make a lot of the decisions so they don't have to. If you get them involved in every decision you're trying to make, you'll stop them getting on with the work they're trying to do. Instead, figure out what outcome they would like to see, or at least what outcome would be best for them and sell it to them, then make a decision that achieves that outcome. If You Hire Good People, Coaching Isn't Really Necessary Hiring people and leaving them be doesn't maximize the employees potential. Even good people need guidance, feedback, goals and challenging work in order to grow, and for that you need to be involved with their growth. Employees Have To Ask For Coaching In Order To Be Receptive To It Coaching isn't something your employees should be opting in or out of, rather it should be an unquestioned part of your relationship with them. Coaching is simply what you do as a manager. ^426eeb Coaching Collaboratively Doesn't Work When You Have A Disagreement Coaching is actually the best way to work through a disagreement, provided both parties go into it with their minds open to new ideas. You Can Be An Effective Coach Even If You Lack Technical Competence In The Area You Manage If you are managing and coaching people in a function with which you are unfamiliar, your credibility will be called into question as you lack the understanding of what the people do, making it harder to coach them. This changes, however, when you manage managers, and the job you are coaching them to be better at is to manage and coach. Coaching Involves Being Direct - People Don't Like That This comes from mistaking being direct with being blunt. Being blunt is where you slam the point home so the person takes it personally. Being direct, on the other hand, is about getting to the point and being sincere and honest with your feelings, both the positive and negative, and most, if not all people, want you to be honest with them. You Have To Be A Psychologist To Coach Employees The only background you need to coach and manage employees is in the work you are coaching them to do. If your employees work in a technical field, then expertise in that field is all you need. If your employees are other managers, then a background in management is your qualification. Apart from that, the desire to work with your employees, to understand them as people and to help them grow is all that is needed.","title":"In The Chapter"},{"location":"Books/Coaching%20and%20Mentoring%20for%20Dummies/17.%20Ten%20Coaching%20Myths/#in-the-chapter","text":"Debunking myths surrounding coaching Getting a fresh perspective on the realities of coaching","title":"In The Chapter"},{"location":"Books/Coaching%20and%20Mentoring%20for%20Dummies/17.%20Ten%20Coaching%20Myths/#you-cant-afford-the-time-to-coach","text":"Being a manager/leader means spending your time helping others be more effective, rather than working on your own tasks. Your time is a valuable resource and needs to be managed effectively. If you don't have the time to coach, you need to make it. ^b5ecc5","title":"You Can't Afford The Time To Coach"},{"location":"Books/Coaching%20and%20Mentoring%20for%20Dummies/17.%20Ten%20Coaching%20Myths/#coaching-is-only-about-being-nice-to-employees","text":"Being too nice to your employees makes it hard for you to give them constructive feedback, which can impair their performance and their growth. You need to be direct and firm with them when the situation calls for it.","title":"Coaching Is Only About Being Nice To Employees"},{"location":"Books/Coaching%20and%20Mentoring%20for%20Dummies/17.%20Ten%20Coaching%20Myths/#without-any-good-role-models-coaching-wont-work","text":"Be the change you want to see. If you don't have any effective role models, make sure your employees don't also feel the same way. Take responsibility for your own situation, and coach your employees to do likewise.","title":"Without Any Good Role Models, Coaching Won't Work"},{"location":"Books/Coaching%20and%20Mentoring%20for%20Dummies/17.%20Ten%20Coaching%20Myths/#coaching-means-seeking-consensus-on-every-decision-you-make","text":"Don't fall into the trap of thinking that collaborative working means getting input from employees on every decision. Employees want you to make a lot of the decisions so they don't have to. If you get them involved in every decision you're trying to make, you'll stop them getting on with the work they're trying to do. Instead, figure out what outcome they would like to see, or at least what outcome would be best for them and sell it to them, then make a decision that achieves that outcome.","title":"Coaching Means Seeking Consensus On Every Decision You Make"},{"location":"Books/Coaching%20and%20Mentoring%20for%20Dummies/17.%20Ten%20Coaching%20Myths/#if-you-hire-good-people-coaching-isnt-really-necessary","text":"Hiring people and leaving them be doesn't maximize the employees potential. Even good people need guidance, feedback, goals and challenging work in order to grow, and for that you need to be involved with their growth.","title":"If You Hire Good People, Coaching Isn't Really Necessary"},{"location":"Books/Coaching%20and%20Mentoring%20for%20Dummies/17.%20Ten%20Coaching%20Myths/#employees-have-to-ask-for-coaching-in-order-to-be-receptive-to-it","text":"Coaching isn't something your employees should be opting in or out of, rather it should be an unquestioned part of your relationship with them. Coaching is simply what you do as a manager. ^426eeb","title":"Employees Have To Ask For Coaching In Order To Be Receptive To It"},{"location":"Books/Coaching%20and%20Mentoring%20for%20Dummies/17.%20Ten%20Coaching%20Myths/#coaching-collaboratively-doesnt-work-when-you-have-a-disagreement","text":"Coaching is actually the best way to work through a disagreement, provided both parties go into it with their minds open to new ideas.","title":"Coaching Collaboratively Doesn't Work When You Have A Disagreement"},{"location":"Books/Coaching%20and%20Mentoring%20for%20Dummies/17.%20Ten%20Coaching%20Myths/#you-can-be-an-effective-coach-even-if-you-lack-technical-competence-in-the-area-you-manage","text":"If you are managing and coaching people in a function with which you are unfamiliar, your credibility will be called into question as you lack the understanding of what the people do, making it harder to coach them. This changes, however, when you manage managers, and the job you are coaching them to be better at is to manage and coach.","title":"You Can Be An Effective Coach Even If You Lack Technical Competence In The Area You Manage"},{"location":"Books/Coaching%20and%20Mentoring%20for%20Dummies/17.%20Ten%20Coaching%20Myths/#coaching-involves-being-direct-people-dont-like-that","text":"This comes from mistaking being direct with being blunt. Being blunt is where you slam the point home so the person takes it personally. Being direct, on the other hand, is about getting to the point and being sincere and honest with your feelings, both the positive and negative, and most, if not all people, want you to be honest with them.","title":"Coaching Involves Being Direct - People Don't Like That"},{"location":"Books/Coaching%20and%20Mentoring%20for%20Dummies/17.%20Ten%20Coaching%20Myths/#you-have-to-be-a-psychologist-to-coach-employees","text":"The only background you need to coach and manage employees is in the work you are coaching them to do. If your employees work in a technical field, then expertise in that field is all you need. If your employees are other managers, then a background in management is your qualification. Apart from that, the desire to work with your employees, to understand them as people and to help them grow is all that is needed.","title":"You Have To Be A Psychologist To Coach Employees"},{"location":"Books/Coaching%20and%20Mentoring%20for%20Dummies/18.%20Ten%20Skills%20That%20Strengthen%20Your%20Foundation%20For%20Coaching/","text":"","title":"18. Ten Skills That Strengthen Your Foundation For Coaching"},{"location":"Books/Coaching%20and%20Mentoring%20for%20Dummies/19.%20Ten%20Management%20Behaviours%20To%20Avoid/","text":"","title":"19. Ten Management Behaviours To Avoid"},{"location":"Books/Coaching%20and%20Mentoring%20for%20Dummies/2.%20Laying%20A%20Foundation%20That%20Builds%20Commitment/","text":"In This Chapter Recognising ways to stimulate employee commitment Setting a leadership tone for effective coaching Managing assertively and collaboratively Introducing a model for guiding efforts that build employee commitment Summary Being an effective manager of others starts with being an effective manager of yourself. Your behaviour will set the tone for that of your employees, so you must conduct yourself in a way you would want them to emulate. Don't be the manager who responds to problems by blaming someone or something, instead be the manager who responds to problems with solutions. You want to behave in a way that seeks commitment from your employees, not demand compliance. You want to be assertive and collaborative, not aggressive. You want to follow through on your commitments and tackle problems with a solution-oriented mindset. You want to communicate directly while respecting the feelings of others. To build commitment in your employees, you must first build the five pillar upon which it sits: - focus , where everyone knows what they need to do and why - involvement , where everyone works in a context they helped shape - development , where everyone has the opportunity to grow their skills - gratitude , where good work is noticed and acknowledged - accountability , where everyone has responsibility and the authority to act on it Tuning Into Personal Vs Positional Influence Management by Positional Influence Management by Personal Influence Exercise Authority Exercise Personal Qualities Look To Maintain The Chain Of Command Look To Build Working Relationships Seek Control Seek Employee Ownership And Involvement Likely result: compliance Likely result: commitment Seeking Commitment vs Compliance in Today's Workforce Employees in today's workforce expect more autonomy and creative freedom than historically. People are more likely to stay at a job longer if they have a manager they respect and who respects them, rather than one attempts to control everything they do and enforce compliance. Always choose personal influence over positional influence even when under pressure and stress. If you flip between the two, you erode your credibility with your employees. Managing as a Tone Setter Your behavior as a manager is usually reflected in the employees you manage. If you routinely exhibit negative behaviors, you will either see those same behaviors in your employees, or they will exhibit other negative behaviors as a response to your own. For example, if you routinely blame employees for problems, your employees will be overly defensive and avoid taking responsibility for something in case they get blames for it going wrong. Similarly, if you routinely complain about things, including your manager, your employees will routinely complain, often about their manager. The Sweet 16 behaviors for good managers: - Listens to understand; isn't judgmental - Follows through and meets commitments - Takes an interest in employees as people - Works productively and meets deadlines - Is flexible and open-minded - Treats others with respect - Stays calm under pressure - Addresses issues timely and stays in touch - Collaborates with others - Is solutions-oriented and doesn't blame - Recognizes good performance of others - Displays honesty and integrity - Shows interest and enthusiasm for the work on individuals and the group - Shows up on time for meetings and other important events - Takes a positive focus in interactions The Collaborative and Assertive Nature of Coaching Managing in a collaborative way means having a conversation with your employees about what needs to be done. You want to avoid doing things for them, as well as avoiding sitting with them and holding their hands. Being a good manager is about being decisive about getting things done while also being willing to listen and open to discussion. Engage in two-way conversations - this involves having enough respect for one another to listen to and understand the others viewpoint. You don't necessarily have to agree with it, but you must hear and understand it Assert yourself - asserting yourself doesn't mean dominating others, instead it refers to your ability to communicate and take action in a positive, sincere and confident manner that maintains respect for others. It takes the form, for example, of communicating directly, using language constructively, addressing problems with a focus on solutions, following through, taking initiative and leading the way to bring issues to closure. title: Internalizing Collaboration The shift to this style of management occurs in these situations: - when a disagreement is recognised as an opportunity for listening and entering dialogue rather than as a time for arguing or just backing away. - When a manager reacts to an employees resistance by seeking to find out why the resistance occurred in the first place and how the issue can be settled. - When problems with an employees work are seen as an opportunity to ask questions and challenge employees to come up with solutions Hold the pickles, onions, and aggressiveness - Assertive managers address problems in a solutions-oriented manner, aggressive ones address them through blame, whether its the employees or someone else. An assertive manager is direct, an aggressive one is blunt. Being assertive invites collaboration, being aggressive seeks compliance. Don't be passive - coaching only works when you are actively involved with your employees and having dialogues with them. It don't work if you sit back and don't do anything. The Five Pillars for Building Commitment Focus . Focus is about the employees knowing where the group is going, about having a plan. While the plan may change, the group will adapt, and not be plunged into Chaos. Involvement . People support most what they help to create illustrates that people are most invested in a situation that they've helped to shape. Development . Employees have the opportunities to develop their skills. Gratitude . Good work done by employees is noticed and acknowledged. Accountability . Employees have responsibility along with the authority to carry it out. They perform good work because of the sense of achievement they get from doing so.","title":"In This Chapter"},{"location":"Books/Coaching%20and%20Mentoring%20for%20Dummies/2.%20Laying%20A%20Foundation%20That%20Builds%20Commitment/#in-this-chapter","text":"Recognising ways to stimulate employee commitment Setting a leadership tone for effective coaching Managing assertively and collaboratively Introducing a model for guiding efforts that build employee commitment","title":"In This Chapter"},{"location":"Books/Coaching%20and%20Mentoring%20for%20Dummies/2.%20Laying%20A%20Foundation%20That%20Builds%20Commitment/#summary","text":"Being an effective manager of others starts with being an effective manager of yourself. Your behaviour will set the tone for that of your employees, so you must conduct yourself in a way you would want them to emulate. Don't be the manager who responds to problems by blaming someone or something, instead be the manager who responds to problems with solutions. You want to behave in a way that seeks commitment from your employees, not demand compliance. You want to be assertive and collaborative, not aggressive. You want to follow through on your commitments and tackle problems with a solution-oriented mindset. You want to communicate directly while respecting the feelings of others. To build commitment in your employees, you must first build the five pillar upon which it sits: - focus , where everyone knows what they need to do and why - involvement , where everyone works in a context they helped shape - development , where everyone has the opportunity to grow their skills - gratitude , where good work is noticed and acknowledged - accountability , where everyone has responsibility and the authority to act on it","title":"Summary"},{"location":"Books/Coaching%20and%20Mentoring%20for%20Dummies/2.%20Laying%20A%20Foundation%20That%20Builds%20Commitment/#tuning-into-personal-vs-positional-influence","text":"Management by Positional Influence Management by Personal Influence Exercise Authority Exercise Personal Qualities Look To Maintain The Chain Of Command Look To Build Working Relationships Seek Control Seek Employee Ownership And Involvement Likely result: compliance Likely result: commitment","title":"Tuning Into Personal Vs Positional Influence"},{"location":"Books/Coaching%20and%20Mentoring%20for%20Dummies/2.%20Laying%20A%20Foundation%20That%20Builds%20Commitment/#seeking-commitment-vs-compliance-in-todays-workforce","text":"Employees in today's workforce expect more autonomy and creative freedom than historically. People are more likely to stay at a job longer if they have a manager they respect and who respects them, rather than one attempts to control everything they do and enforce compliance. Always choose personal influence over positional influence even when under pressure and stress. If you flip between the two, you erode your credibility with your employees.","title":"Seeking Commitment vs Compliance in Today's Workforce"},{"location":"Books/Coaching%20and%20Mentoring%20for%20Dummies/2.%20Laying%20A%20Foundation%20That%20Builds%20Commitment/#managing-as-a-tone-setter","text":"Your behavior as a manager is usually reflected in the employees you manage. If you routinely exhibit negative behaviors, you will either see those same behaviors in your employees, or they will exhibit other negative behaviors as a response to your own. For example, if you routinely blame employees for problems, your employees will be overly defensive and avoid taking responsibility for something in case they get blames for it going wrong. Similarly, if you routinely complain about things, including your manager, your employees will routinely complain, often about their manager. The Sweet 16 behaviors for good managers: - Listens to understand; isn't judgmental - Follows through and meets commitments - Takes an interest in employees as people - Works productively and meets deadlines - Is flexible and open-minded - Treats others with respect - Stays calm under pressure - Addresses issues timely and stays in touch - Collaborates with others - Is solutions-oriented and doesn't blame - Recognizes good performance of others - Displays honesty and integrity - Shows interest and enthusiasm for the work on individuals and the group - Shows up on time for meetings and other important events - Takes a positive focus in interactions","title":"Managing as a Tone Setter"},{"location":"Books/Coaching%20and%20Mentoring%20for%20Dummies/2.%20Laying%20A%20Foundation%20That%20Builds%20Commitment/#the-collaborative-and-assertive-nature-of-coaching","text":"Managing in a collaborative way means having a conversation with your employees about what needs to be done. You want to avoid doing things for them, as well as avoiding sitting with them and holding their hands. Being a good manager is about being decisive about getting things done while also being willing to listen and open to discussion. Engage in two-way conversations - this involves having enough respect for one another to listen to and understand the others viewpoint. You don't necessarily have to agree with it, but you must hear and understand it Assert yourself - asserting yourself doesn't mean dominating others, instead it refers to your ability to communicate and take action in a positive, sincere and confident manner that maintains respect for others. It takes the form, for example, of communicating directly, using language constructively, addressing problems with a focus on solutions, following through, taking initiative and leading the way to bring issues to closure. title: Internalizing Collaboration The shift to this style of management occurs in these situations: - when a disagreement is recognised as an opportunity for listening and entering dialogue rather than as a time for arguing or just backing away. - When a manager reacts to an employees resistance by seeking to find out why the resistance occurred in the first place and how the issue can be settled. - When problems with an employees work are seen as an opportunity to ask questions and challenge employees to come up with solutions Hold the pickles, onions, and aggressiveness - Assertive managers address problems in a solutions-oriented manner, aggressive ones address them through blame, whether its the employees or someone else. An assertive manager is direct, an aggressive one is blunt. Being assertive invites collaboration, being aggressive seeks compliance. Don't be passive - coaching only works when you are actively involved with your employees and having dialogues with them. It don't work if you sit back and don't do anything.","title":"The Collaborative and Assertive Nature of Coaching"},{"location":"Books/Coaching%20and%20Mentoring%20for%20Dummies/2.%20Laying%20A%20Foundation%20That%20Builds%20Commitment/#the-five-pillars-for-building-commitment","text":"Focus . Focus is about the employees knowing where the group is going, about having a plan. While the plan may change, the group will adapt, and not be plunged into Chaos. Involvement . People support most what they help to create illustrates that people are most invested in a situation that they've helped to shape. Development . Employees have the opportunities to develop their skills. Gratitude . Good work done by employees is noticed and acknowledged. Accountability . Employees have responsibility along with the authority to carry it out. They perform good work because of the sense of achievement they get from doing so.","title":"The Five Pillars for Building Commitment"},{"location":"Books/Coaching%20and%20Mentoring%20for%20Dummies/20.%20Ten%20%28er%2C%2050%29%20Ways%20To%20Build%20Commitment%20Through%20Coaching/","text":"","title":"20. Ten (er, 50) Ways To Build Commitment Through Coaching"},{"location":"Books/Coaching%20and%20Mentoring%20for%20Dummies/3.%20Coaching%20And%20Managing%20Diversity/","text":"In This Chapter Clarifying what \"managing diversity\" means Avoiding the assumptions that lead to problems Focusing on the issues of performance to manage - and behaviours not to tolerate Managing people as individuals Summary Managing diversity is about recognising that everyone, even those who all conform to one or other idea of \"diversity\" (for example, white cis-het males) are individuals and all require you to approach managing them differently. A one-size-fits-all approach might help some of your employees, but will likely let down others who require something more that what you're offering. Ways in which people are different include: style - the personal touch they bring to the job, which might include the layout of their desk; personal background - age, past job experience, ethnicity, religion, etc; and attitude , which can include negative opinions of people with, for example, two heads. While avoiding managing everyone the exact same, a manager must also avoid managing people based on assumptions, such as stereotyping , setting low expectations , believing that differences are negative , and equating sameness with equality . Since everyone is different, the way to effectively manage people is to focus on what affects peoples performance: attendance , where they show up and do so on time; the output, quality, completeness and timeliness of the work and tasks ; and job-related behaviours , which is the employees conduction and relation to others. While coaching the behaviours that positively impact performance, a manager must also eliminate the behaviours that negatively impact it, including but not limited to, ridicule or insult , vulgarity or profanity , exclusion , threats and slurs . Finding Out What Diversity Is All About Diversity, in this context, extends far beyond the signals that we typically use to identify diversity in the workforce: race, gender, age and ethnicity being the main ones. Instead, diversity is about going beyond these signals and recognising that everyone is different in some way. As managers, we need to manage people as individual by seeing past whatever superficial attributes define them from the outside and getting to know them on the inside. Everyone wants to come to work and be treated with respect and to feel they belong. Assumptions: The Ingredient To Leave Out Four common assumptions that will hinder your productivity if you act upon them as you manage your staff are: - stereotyping , prescribing a set of behaviours to someone based on a signal such as their occupation or background. - setting low expectations , stereotyping people with reduced expectation of their performance. - believing that differences are negative , building on stereotyping again, you believe individual from a group are too different to get on with. - equating sameness with equality , this comes from misunderstanding what it means to treat your employees equally. You want to treat everyone equally in your management efforts by treating them with respect, hold everyone to the same standard of performance and give everyone the guidance and support they need to do their job. What needs to differ is how you apply those efforts to your different employees. Trying to manage all employees with a one-size-fit-all management style is more likely to lead to employee failure than success. Focusing on Performance and Behaviours - Not on Assumptions The only two safe assumptions in coaching employees are: - everyone means well - they want to do the best job they can To coach and manage diversity effectively, you need to concentrate on two areas: First, focus on performance; second, don't tolerate behaviours that hinder performance. Emphasising performance Focusing management efforts on an employees performance focuses such efforts on the thing they are getting paid to do. The only way an employee can really fail is from their lack of skill and competence. Job performance can be broken into three main areas: - attendance . This comes in two parts: attendance , where the employee needs to show up to work at all, though illness and disabling situations do not count towards this; and punctuality , where the employee needs to be at work on time. In salaried jobs, this isn't a big problem provided the employee is getting all their work done, but in time sensitive roles, such as customer service, being a minute late can be too late. As a manager you should apply common sense to this situation, rather than rules for rules sake, otherwise you risk ending up with compliance rather than commitment. - the work and tasks people do . This comes in four parts: output is the volume of work needed to be done; quality is how well the job is done; completeness is how thoroughly the work is done; and timeliness is whether the work gets done when it needs to. - job related behaviours . This is about the employees conduct and relation to others, and is critical for success in their job. With regard to behaviours, focus should be placed on issues of performance that build positive work environments and yield productive outcomes. There are three issues that managers often try to manage but shouldn't: 1. attitude is something that can't be objectively seen, so is a minefield to try to manage, but doesn't need to matter. If an employee has a bad attitude towards people with two heads, but acts courteous and polite when working with people with two heads, then their attitude is irrelevant. 2. personal background covers things like age, past work experience, ethnicity, religion, etc, none of which determine a persons ability to do the job. 3. style is the personal touch someone puts on their job. Things like their desk layout are part of that. Unless style is harming others ability to do their jobs, it's not a performance issue. Stamping out insensitive behaviour The second factor in managing diversity is to not tolerate behaviours that are disruptive or insensitive since these hinder quality performance and damage morale. Examples include, but are not limited to, off-colour humour, ridicule or insult, profanity and vulgarity, stereotypical remarks, subtle-to-overt sabotage, threats, slurs, mimicking and exclusion.","title":"In This Chapter"},{"location":"Books/Coaching%20and%20Mentoring%20for%20Dummies/3.%20Coaching%20And%20Managing%20Diversity/#in-this-chapter","text":"Clarifying what \"managing diversity\" means Avoiding the assumptions that lead to problems Focusing on the issues of performance to manage - and behaviours not to tolerate Managing people as individuals","title":"In This Chapter"},{"location":"Books/Coaching%20and%20Mentoring%20for%20Dummies/3.%20Coaching%20And%20Managing%20Diversity/#summary","text":"Managing diversity is about recognising that everyone, even those who all conform to one or other idea of \"diversity\" (for example, white cis-het males) are individuals and all require you to approach managing them differently. A one-size-fits-all approach might help some of your employees, but will likely let down others who require something more that what you're offering. Ways in which people are different include: style - the personal touch they bring to the job, which might include the layout of their desk; personal background - age, past job experience, ethnicity, religion, etc; and attitude , which can include negative opinions of people with, for example, two heads. While avoiding managing everyone the exact same, a manager must also avoid managing people based on assumptions, such as stereotyping , setting low expectations , believing that differences are negative , and equating sameness with equality . Since everyone is different, the way to effectively manage people is to focus on what affects peoples performance: attendance , where they show up and do so on time; the output, quality, completeness and timeliness of the work and tasks ; and job-related behaviours , which is the employees conduction and relation to others. While coaching the behaviours that positively impact performance, a manager must also eliminate the behaviours that negatively impact it, including but not limited to, ridicule or insult , vulgarity or profanity , exclusion , threats and slurs .","title":"Summary"},{"location":"Books/Coaching%20and%20Mentoring%20for%20Dummies/3.%20Coaching%20And%20Managing%20Diversity/#finding-out-what-diversity-is-all-about","text":"Diversity, in this context, extends far beyond the signals that we typically use to identify diversity in the workforce: race, gender, age and ethnicity being the main ones. Instead, diversity is about going beyond these signals and recognising that everyone is different in some way. As managers, we need to manage people as individual by seeing past whatever superficial attributes define them from the outside and getting to know them on the inside. Everyone wants to come to work and be treated with respect and to feel they belong.","title":"Finding Out What Diversity Is All About"},{"location":"Books/Coaching%20and%20Mentoring%20for%20Dummies/3.%20Coaching%20And%20Managing%20Diversity/#assumptions-the-ingredient-to-leave-out","text":"Four common assumptions that will hinder your productivity if you act upon them as you manage your staff are: - stereotyping , prescribing a set of behaviours to someone based on a signal such as their occupation or background. - setting low expectations , stereotyping people with reduced expectation of their performance. - believing that differences are negative , building on stereotyping again, you believe individual from a group are too different to get on with. - equating sameness with equality , this comes from misunderstanding what it means to treat your employees equally. You want to treat everyone equally in your management efforts by treating them with respect, hold everyone to the same standard of performance and give everyone the guidance and support they need to do their job. What needs to differ is how you apply those efforts to your different employees. Trying to manage all employees with a one-size-fit-all management style is more likely to lead to employee failure than success.","title":"Assumptions: The Ingredient To Leave Out"},{"location":"Books/Coaching%20and%20Mentoring%20for%20Dummies/3.%20Coaching%20And%20Managing%20Diversity/#focusing-on-performance-and-behaviours-not-on-assumptions","text":"The only two safe assumptions in coaching employees are: - everyone means well - they want to do the best job they can To coach and manage diversity effectively, you need to concentrate on two areas: First, focus on performance; second, don't tolerate behaviours that hinder performance.","title":"Focusing on Performance and Behaviours - Not on Assumptions"},{"location":"Books/Coaching%20and%20Mentoring%20for%20Dummies/3.%20Coaching%20And%20Managing%20Diversity/#emphasising-performance","text":"Focusing management efforts on an employees performance focuses such efforts on the thing they are getting paid to do. The only way an employee can really fail is from their lack of skill and competence. Job performance can be broken into three main areas: - attendance . This comes in two parts: attendance , where the employee needs to show up to work at all, though illness and disabling situations do not count towards this; and punctuality , where the employee needs to be at work on time. In salaried jobs, this isn't a big problem provided the employee is getting all their work done, but in time sensitive roles, such as customer service, being a minute late can be too late. As a manager you should apply common sense to this situation, rather than rules for rules sake, otherwise you risk ending up with compliance rather than commitment. - the work and tasks people do . This comes in four parts: output is the volume of work needed to be done; quality is how well the job is done; completeness is how thoroughly the work is done; and timeliness is whether the work gets done when it needs to. - job related behaviours . This is about the employees conduct and relation to others, and is critical for success in their job. With regard to behaviours, focus should be placed on issues of performance that build positive work environments and yield productive outcomes. There are three issues that managers often try to manage but shouldn't: 1. attitude is something that can't be objectively seen, so is a minefield to try to manage, but doesn't need to matter. If an employee has a bad attitude towards people with two heads, but acts courteous and polite when working with people with two heads, then their attitude is irrelevant. 2. personal background covers things like age, past work experience, ethnicity, religion, etc, none of which determine a persons ability to do the job. 3. style is the personal touch someone puts on their job. Things like their desk layout are part of that. Unless style is harming others ability to do their jobs, it's not a performance issue.","title":"Emphasising performance"},{"location":"Books/Coaching%20and%20Mentoring%20for%20Dummies/3.%20Coaching%20And%20Managing%20Diversity/#stamping-out-insensitive-behaviour","text":"The second factor in managing diversity is to not tolerate behaviours that are disruptive or insensitive since these hinder quality performance and damage morale. Examples include, but are not limited to, off-colour humour, ridicule or insult, profanity and vulgarity, stereotypical remarks, subtle-to-overt sabotage, threats, slurs, mimicking and exclusion.","title":"Stamping out insensitive behaviour"},{"location":"Books/Coaching%20and%20Mentoring%20for%20Dummies/4.%20Finding%20The%20Time%20To%20Stay%20Connected/","text":"In This Chapter Contrasting how coaches and doers view and use their time. Identifying strategies for staying connected with your staff. Preparing and organising your coaching meetings. Facilitating effective two-way coaching meetings. Summary The doer and the coach differ greatly in how they manage their time. The doer doesn't have a lot of time to spend with their employees. One type of doer is the interruption-driven manager, who is always in crisis mode and will only spend time with their employees when the employee interrupts them. Another common type of doer is the isolated manager, who is rarely seen by their employees as they consumed by meetings and other management activities. The employees of both of these types of manager do not get quality time with their manager. This is in contract to the coach, who is in control of their time due to actively planning how they will spend it. The coach sees quality time spent with their employees as an investment that will generate returns in the future. They plan to spend time with their employees in one or more of the following ways: - Management By Walking Around (MBWA): walking around the office among the employees striking up casual conversations about non-work topics in order to build rapport and trust. - Management By Phoning Around (MBPA): Same as MBWA, but doing so over the phone (or Zoom). Usually needs to be more planned than the impromptu nature of MBWA since the manager and employee need to both be available at the same time. - Lunch: An opportunity to have a casual conversation with an employee in an environment outside of the office. - One-On-One Meetings: The most effective way to spend time with your employees. Can be used to casually talk or as a coaching session. Not all one-on-one meetings need be coaching sessions, but all coaching sessions will be one-on-one meetings. Coaches vs doers: Views on Using Time Coaches and doers both have very different views on how to spend their time. Time and the doer A doer is often in crisis mode because they often fail to delegate tasks or decisions. Rather than develop others to deal with fire fighting or solving day-to-day problems, the doer will get stuck into doing that themselves. Employees will bring them problems, and the doer manager will relieve them of that problem and look to solve it for them. The doers can be found somewhere between two extremes, if not right at one of them. One end of the spectrum is the interruption-driven manager , someone who always looks and sounds rushed, whose time is seldom structured or organised. If they spend 60 minutes with an employee during a week, it will likely be 60 one-minute chunks. On the other end is the isolated manager . These managers are rarely seen by their employees, their time being consumed by meetings and other management activities. If they are ever seen, it is usually in a hit-and-run incident when they swoop in to tell everyone what to do during a serious problem. This style creates havoc in their employees lives. They don't have the time to pay attention to their employees. Time and the coach The coach sees time spent with their employees as an investment that will yield a return later. Instead of giving the employee answers to their questions, they instead spend time helping the employee to learn how to find answers themselves. A coach spend their time making their employees more self-sufficient, allowing the manager to spend their time working on the critical issues they're paid to deal with. Coach vs Doer Coach Doer Spends an hour with the employee to prepare them for the challenges of the job Gets interrupted 60 times by one employee in the course of a week Spends time with employees to help them map out a plan to solve problems Watches employees get frustrated by a problem before telling them the answer Spends a half hour each week with an employee to review the status of a project Checks in with the employee three times a day (micromanaging them) to learn about the project Make my time count -- Coach manager A coaching manager organises their time by asking themselves three questions as part of their planning process (daily or weekly, say): - What activities will you be involved with and when? - How will you organise the time you spend in those activities? - What will you gain from giving them time? Use these questions to plan to spend time with employees who need your attention so it doesn't get monopolised by your other priorities. Two Techniques - MBWA and MBPA - for Building Connections Management by Walking Around (MBWA) is a technique for building connections with your employees by walking around the office and striking up casual conversations with them. This helps you build rapport with them by being visible being able to talk to them about non-work topics. To do MBWA effectively, there are a few tips: - be frequent - evenly distribute your time among employees - strike a good balance between long and short contacts - stay flexible in length of speaking and silence The two primary benefits of MBWA are: - your employees perceive you as being approachable - you gain more of an understanding of what's going on in your department Management by phoning around (MBPA) is the same as MBWA except you do it over the phone (or Zoom these days) instead of face to face. This one requires a bit more planning since you need to ensure the person you are speaking to is going to be available. Being friendly vs being a friend Using the MBWA and MBPA techniques doesn't have to make you overly familiar with your employees. These are communication strategies that help you build the rapport and trust to be able to develop effective working relationships. Let's Do Lunch Having lunch with your employees is another informal way to stay connected (perhaps Management by Eating Around, MBEA). It allows you to get to know them in an informal setting outside of work. One-on-One Meetings A one-on-one meeting is the best way to organise your time for coaching your employees. While not every one-on-one meeting will be a coaching session , all coaching sessions will be on-one-one meetings, where you work with the employee to prepare them to perform. You'll do things like give feedback, set goals, develop plans, mentor to solve problems, etc. As an organiser of one-on-one meetings, you should use these questions to plan them: - What is the objective for this meeting? Both you and the employee need to know this goal going in so you can both focus on it. - What positive outcome are you seeking? If you're dealing with a problem, the outcome you're seeking is a solution. If you're dealing with confusion, the outcome is a plan that provides clear direction. - What do you need to be prepared to do at the meeting? You might need to provide feedback or information, ask stimulating questions, give direction or spell out expectations. - What do you want the employee to come prepared to do? Avoid frustrating the employee or wasting their time by asking them to make necessary preparations ahead of time. - What particular plan or agenda for this session will encourage employee participation? You want to have a conversation in these sessions, not talk at the employee while they nod and smile. - How can this meeting help the employee perform better or more self-sufficiently for the future? Each coaching session should help the employee perform more self-sufficiently. - What follow-up should be set? If any actions come from the session, you should arrange a follow-up session to review them. These meetings should be driven by the employee. The manager's role is to provide support and add value that helps the employee perform well. Looking at some examples Sample 1 Objective: Have the employee correct some mistakes in performance that you noticed occurring yesterday. Positive outcome: Focus on solutions. The point of the meeting is not to swell on mistakes, but to fix them. Plan or flow of the meeting: Provide feedback of your observations of the mistakes made. Encourage twi-way discussion, letting the employee comment on your feedback that solicit the person's ideas for correction and contribute ideas as needed. Close by recapping the solution worked out during the session (have the employee recap as well) and set a follow-up meeting to review progress. Come prepared: Be ready to give the feedback and ask the questions so that the employee develops ideas for correction. Sample 2 Objective: To review progress on hitting a project milestone and set next steps for keeping the projects on track. Positive outcome: A chance to recognise accomplishments, set future direction and maintain accountability. Plan or flow of the meeting: Employee reports on deliverables produces to meet the project milestone. Your feedback is added as needed, especially to recognise good work. If problems are identified, engage in joint problem-solving to address them. With the employee, set the deliverables for the next milestone to be hit in the project. Close by setting another status-review meeting around the next milestone. Come prepared: Both parties should have a list of the deliverables for which the employee is to report progress. If the employee has any issues or problems, they are to come prepared to explain them and recommend ideas for solution. Sample 3 Objective: To evaluate how a customer meeting (a call and presentation) was handled by the employee. To be done as a debriefing after the customer meeting. Positive outcome: A chance to recognise what was done well and to determine what can be improved upon for future efforts. Plan or flow of the meeting: Employee evaluates their own efforts on what was done well in the presentation and customer meeting - and on what didn't go well. You provide your specific feedback on these two points. On the areas for which improvement is needed, ask for the employee's ideas of what can be done for the next time and provide suggestions as needed. Close the meeting be reinforcing the efforts that were done well and by setting action items for improvements with the employee. Come prepared: Let the employee know that you want to conduct a debriefing after the customer meeting and that you want them to be ready to self-evaluate how the call went. Then let them handle the call while you stay in a support role.","title":"In This Chapter"},{"location":"Books/Coaching%20and%20Mentoring%20for%20Dummies/4.%20Finding%20The%20Time%20To%20Stay%20Connected/#in-this-chapter","text":"Contrasting how coaches and doers view and use their time. Identifying strategies for staying connected with your staff. Preparing and organising your coaching meetings. Facilitating effective two-way coaching meetings.","title":"In This Chapter"},{"location":"Books/Coaching%20and%20Mentoring%20for%20Dummies/4.%20Finding%20The%20Time%20To%20Stay%20Connected/#summary","text":"The doer and the coach differ greatly in how they manage their time. The doer doesn't have a lot of time to spend with their employees. One type of doer is the interruption-driven manager, who is always in crisis mode and will only spend time with their employees when the employee interrupts them. Another common type of doer is the isolated manager, who is rarely seen by their employees as they consumed by meetings and other management activities. The employees of both of these types of manager do not get quality time with their manager. This is in contract to the coach, who is in control of their time due to actively planning how they will spend it. The coach sees quality time spent with their employees as an investment that will generate returns in the future. They plan to spend time with their employees in one or more of the following ways: - Management By Walking Around (MBWA): walking around the office among the employees striking up casual conversations about non-work topics in order to build rapport and trust. - Management By Phoning Around (MBPA): Same as MBWA, but doing so over the phone (or Zoom). Usually needs to be more planned than the impromptu nature of MBWA since the manager and employee need to both be available at the same time. - Lunch: An opportunity to have a casual conversation with an employee in an environment outside of the office. - One-On-One Meetings: The most effective way to spend time with your employees. Can be used to casually talk or as a coaching session. Not all one-on-one meetings need be coaching sessions, but all coaching sessions will be one-on-one meetings.","title":"Summary"},{"location":"Books/Coaching%20and%20Mentoring%20for%20Dummies/4.%20Finding%20The%20Time%20To%20Stay%20Connected/#coaches-vs-doers-views-on-using-time","text":"Coaches and doers both have very different views on how to spend their time.","title":"Coaches vs doers: Views on Using Time"},{"location":"Books/Coaching%20and%20Mentoring%20for%20Dummies/4.%20Finding%20The%20Time%20To%20Stay%20Connected/#time-and-the-doer","text":"A doer is often in crisis mode because they often fail to delegate tasks or decisions. Rather than develop others to deal with fire fighting or solving day-to-day problems, the doer will get stuck into doing that themselves. Employees will bring them problems, and the doer manager will relieve them of that problem and look to solve it for them. The doers can be found somewhere between two extremes, if not right at one of them. One end of the spectrum is the interruption-driven manager , someone who always looks and sounds rushed, whose time is seldom structured or organised. If they spend 60 minutes with an employee during a week, it will likely be 60 one-minute chunks. On the other end is the isolated manager . These managers are rarely seen by their employees, their time being consumed by meetings and other management activities. If they are ever seen, it is usually in a hit-and-run incident when they swoop in to tell everyone what to do during a serious problem. This style creates havoc in their employees lives. They don't have the time to pay attention to their employees.","title":"Time and the doer"},{"location":"Books/Coaching%20and%20Mentoring%20for%20Dummies/4.%20Finding%20The%20Time%20To%20Stay%20Connected/#time-and-the-coach","text":"The coach sees time spent with their employees as an investment that will yield a return later. Instead of giving the employee answers to their questions, they instead spend time helping the employee to learn how to find answers themselves. A coach spend their time making their employees more self-sufficient, allowing the manager to spend their time working on the critical issues they're paid to deal with.","title":"Time and the coach"},{"location":"Books/Coaching%20and%20Mentoring%20for%20Dummies/4.%20Finding%20The%20Time%20To%20Stay%20Connected/#coach-vs-doer","text":"Coach Doer Spends an hour with the employee to prepare them for the challenges of the job Gets interrupted 60 times by one employee in the course of a week Spends time with employees to help them map out a plan to solve problems Watches employees get frustrated by a problem before telling them the answer Spends a half hour each week with an employee to review the status of a project Checks in with the employee three times a day (micromanaging them) to learn about the project Make my time count -- Coach manager A coaching manager organises their time by asking themselves three questions as part of their planning process (daily or weekly, say): - What activities will you be involved with and when? - How will you organise the time you spend in those activities? - What will you gain from giving them time? Use these questions to plan to spend time with employees who need your attention so it doesn't get monopolised by your other priorities.","title":"Coach vs Doer"},{"location":"Books/Coaching%20and%20Mentoring%20for%20Dummies/4.%20Finding%20The%20Time%20To%20Stay%20Connected/#two-techniques-mbwa-and-mbpa-for-building-connections","text":"Management by Walking Around (MBWA) is a technique for building connections with your employees by walking around the office and striking up casual conversations with them. This helps you build rapport with them by being visible being able to talk to them about non-work topics. To do MBWA effectively, there are a few tips: - be frequent - evenly distribute your time among employees - strike a good balance between long and short contacts - stay flexible in length of speaking and silence The two primary benefits of MBWA are: - your employees perceive you as being approachable - you gain more of an understanding of what's going on in your department Management by phoning around (MBPA) is the same as MBWA except you do it over the phone (or Zoom these days) instead of face to face. This one requires a bit more planning since you need to ensure the person you are speaking to is going to be available.","title":"Two Techniques - MBWA and MBPA - for Building Connections"},{"location":"Books/Coaching%20and%20Mentoring%20for%20Dummies/4.%20Finding%20The%20Time%20To%20Stay%20Connected/#being-friendly-vs-being-a-friend","text":"Using the MBWA and MBPA techniques doesn't have to make you overly familiar with your employees. These are communication strategies that help you build the rapport and trust to be able to develop effective working relationships.","title":"Being friendly vs being a friend"},{"location":"Books/Coaching%20and%20Mentoring%20for%20Dummies/4.%20Finding%20The%20Time%20To%20Stay%20Connected/#lets-do-lunch","text":"Having lunch with your employees is another informal way to stay connected (perhaps Management by Eating Around, MBEA). It allows you to get to know them in an informal setting outside of work.","title":"Let's Do Lunch"},{"location":"Books/Coaching%20and%20Mentoring%20for%20Dummies/4.%20Finding%20The%20Time%20To%20Stay%20Connected/#one-on-one-meetings","text":"A one-on-one meeting is the best way to organise your time for coaching your employees. While not every one-on-one meeting will be a coaching session , all coaching sessions will be on-one-one meetings, where you work with the employee to prepare them to perform. You'll do things like give feedback, set goals, develop plans, mentor to solve problems, etc. As an organiser of one-on-one meetings, you should use these questions to plan them: - What is the objective for this meeting? Both you and the employee need to know this goal going in so you can both focus on it. - What positive outcome are you seeking? If you're dealing with a problem, the outcome you're seeking is a solution. If you're dealing with confusion, the outcome is a plan that provides clear direction. - What do you need to be prepared to do at the meeting? You might need to provide feedback or information, ask stimulating questions, give direction or spell out expectations. - What do you want the employee to come prepared to do? Avoid frustrating the employee or wasting their time by asking them to make necessary preparations ahead of time. - What particular plan or agenda for this session will encourage employee participation? You want to have a conversation in these sessions, not talk at the employee while they nod and smile. - How can this meeting help the employee perform better or more self-sufficiently for the future? Each coaching session should help the employee perform more self-sufficiently. - What follow-up should be set? If any actions come from the session, you should arrange a follow-up session to review them. These meetings should be driven by the employee. The manager's role is to provide support and add value that helps the employee perform well.","title":"One-on-One Meetings"},{"location":"Books/Coaching%20and%20Mentoring%20for%20Dummies/4.%20Finding%20The%20Time%20To%20Stay%20Connected/#looking-at-some-examples","text":"","title":"Looking at some examples"},{"location":"Books/Coaching%20and%20Mentoring%20for%20Dummies/4.%20Finding%20The%20Time%20To%20Stay%20Connected/#sample-1","text":"Objective: Have the employee correct some mistakes in performance that you noticed occurring yesterday. Positive outcome: Focus on solutions. The point of the meeting is not to swell on mistakes, but to fix them. Plan or flow of the meeting: Provide feedback of your observations of the mistakes made. Encourage twi-way discussion, letting the employee comment on your feedback that solicit the person's ideas for correction and contribute ideas as needed. Close by recapping the solution worked out during the session (have the employee recap as well) and set a follow-up meeting to review progress. Come prepared: Be ready to give the feedback and ask the questions so that the employee develops ideas for correction.","title":"Sample 1"},{"location":"Books/Coaching%20and%20Mentoring%20for%20Dummies/4.%20Finding%20The%20Time%20To%20Stay%20Connected/#sample-2","text":"Objective: To review progress on hitting a project milestone and set next steps for keeping the projects on track. Positive outcome: A chance to recognise accomplishments, set future direction and maintain accountability. Plan or flow of the meeting: Employee reports on deliverables produces to meet the project milestone. Your feedback is added as needed, especially to recognise good work. If problems are identified, engage in joint problem-solving to address them. With the employee, set the deliverables for the next milestone to be hit in the project. Close by setting another status-review meeting around the next milestone. Come prepared: Both parties should have a list of the deliverables for which the employee is to report progress. If the employee has any issues or problems, they are to come prepared to explain them and recommend ideas for solution.","title":"Sample 2"},{"location":"Books/Coaching%20and%20Mentoring%20for%20Dummies/4.%20Finding%20The%20Time%20To%20Stay%20Connected/#sample-3","text":"Objective: To evaluate how a customer meeting (a call and presentation) was handled by the employee. To be done as a debriefing after the customer meeting. Positive outcome: A chance to recognise what was done well and to determine what can be improved upon for future efforts. Plan or flow of the meeting: Employee evaluates their own efforts on what was done well in the presentation and customer meeting - and on what didn't go well. You provide your specific feedback on these two points. On the areas for which improvement is needed, ask for the employee's ideas of what can be done for the next time and provide suggestions as needed. Close the meeting be reinforcing the efforts that were done well and by setting action items for improvements with the employee. Come prepared: Let the employee know that you want to conduct a debriefing after the customer meeting and that you want them to be ready to self-evaluate how the call went. Then let them handle the call while you stay in a support role.","title":"Sample 3"},{"location":"Books/Coaching%20and%20Mentoring%20for%20Dummies/5.%20Giving%20Constructive%20Feedback%2C%20Not%20Praise%20And%20Criticism/","text":"In This Chapter Contrasting constructive feedback with praise and criticism Giving performance feedback effectively Introducing a tool for tracking your feedback efforts Facilitating the discussion after the feedback and handling challenges Influencing employee commitment through constructive feedback","title":"In This Chapter"},{"location":"Books/Coaching%20and%20Mentoring%20for%20Dummies/5.%20Giving%20Constructive%20Feedback%2C%20Not%20Praise%20And%20Criticism/#in-this-chapter","text":"Contrasting constructive feedback with praise and criticism Giving performance feedback effectively Introducing a tool for tracking your feedback efforts Facilitating the discussion after the feedback and handling challenges Influencing employee commitment through constructive feedback","title":"In This Chapter"},{"location":"Books/Coaching%20and%20Mentoring%20for%20Dummies/6.%20Setting%20Performance%20Plans%20The%20Smart%20Way/","text":"","title":"6. Setting Performance Plans The Smart Way"},{"location":"Books/Coaching%20and%20Mentoring%20for%20Dummies/7.%20Taking%20The%20Blues%20Out%20Of%20Reviews/","text":"","title":"7. Taking The Blues Out Of Reviews"},{"location":"Books/Coaching%20and%20Mentoring%20for%20Dummies/8.%20The%20Dos%20And%20Don%27ts%20Of%20Mentoring%20And%20Tutoring/","text":"","title":"8. The Dos And Don'ts Of Mentoring And Tutoring"},{"location":"Books/Coaching%20and%20Mentoring%20for%20Dummies/9.%20Don%27t%20Tell%2C%20But%20Do%20Ask%20-%20Tutoring%20With%20Questions/","text":"","title":"9. Don't Tell, But Do Ask   Tutoring With Questions"},{"location":"Books/Coaching%20and%20Mentoring%20for%20Dummies/Coaching%20and%20Mentoring%20for%20Dummies/","text":"Contents Part 1 - Building Employee Commitment Through Coaching 1. Get Off The Bench And Be The Coach 2. Laying A Foundation That Builds Commitment 3. Coaching And Managing Diversity 4. Finding The Time To Stay Connected Part 2 - Performance Coaching For Results 5. Giving Constructive Feedback, Not Praise And Criticism 6. Setting Performance Plans The Smart Way 7. Taking The Blues Out Of Reviews Part 3 - The Fine Art Of Mentoring And Tutoring 8. The Dos And Don'ts Of Mentoring And Tutoring 9. Don't Tell, But Do Ask - Tutoring With Questions 10. Taking Them Under Your Wing Part 4 - Motivating And Empowering Your Staff 11. Motivation, Not Inspiration Or Perspiration 12. Seven Practical Strategies To Motivate Employees 13. Don't Try To Do It All Yourself - Delegate Part 5 - Grooming And Growing Your Employees 14. Knowing When - And How - To Train 15. Building Career Self-Reliance 16. Making The Plan - Coaching For Development Part 6 - The Part Of Tens 17. Ten Coaching Myths 18. Ten Skills That Strengthen Your Foundation For Coaching 19. Ten Management Behaviours To Avoid 20. Ten (er, 50) Ways To Build Commitment Through Coaching Summary in three sentences ... ... ... Who Should Read It? Anyone in a management role is encouraged to read this, but it's even more important for those currently in their first role to learn how to shift the focus of their work away from the comfortable realm of their old role and onto the uncomfortable but very valuable realm of their new one. How the Book Changed Me After finishing the first chapter on a Sunday night, I'm already making notes for how I'm going to change my entire approach to work the next day. It made me realise I'd been going about it all wrong, and a lot of things I was supposed to be doing were getting dropped. I initially thought that coaching individuals was just one of many responsibilities of a manager, but after reading that first chapter I learned it is actually a management style that is supposed to be threaded through everything I do. Why did I read this? I start it because I'd recently been promoted into a management role with expectations that I would be coaching and mentoring younger engineers. I didn't comfortably know how to do this, so I entered \"coaching\" into Amazon and this was the first result. Thoughts and Feelings Practical Application Insights My Top Three Quotes ... ... ... Summary in more than three sentences Part 1 - Building Employee Commitment Through Coaching","title":"Contents"},{"location":"Books/Coaching%20and%20Mentoring%20for%20Dummies/Coaching%20and%20Mentoring%20for%20Dummies/#contents","text":"","title":"Contents"},{"location":"Books/Coaching%20and%20Mentoring%20for%20Dummies/Coaching%20and%20Mentoring%20for%20Dummies/#part-1-building-employee-commitment-through-coaching","text":"1. Get Off The Bench And Be The Coach 2. Laying A Foundation That Builds Commitment 3. Coaching And Managing Diversity 4. Finding The Time To Stay Connected","title":"Part 1 - Building Employee Commitment Through Coaching"},{"location":"Books/Coaching%20and%20Mentoring%20for%20Dummies/Coaching%20and%20Mentoring%20for%20Dummies/#part-2-performance-coaching-for-results","text":"5. Giving Constructive Feedback, Not Praise And Criticism 6. Setting Performance Plans The Smart Way 7. Taking The Blues Out Of Reviews","title":"Part 2 - Performance Coaching For Results"},{"location":"Books/Coaching%20and%20Mentoring%20for%20Dummies/Coaching%20and%20Mentoring%20for%20Dummies/#part-3-the-fine-art-of-mentoring-and-tutoring","text":"8. The Dos And Don'ts Of Mentoring And Tutoring 9. Don't Tell, But Do Ask - Tutoring With Questions 10. Taking Them Under Your Wing","title":"Part 3 - The Fine Art Of Mentoring And Tutoring"},{"location":"Books/Coaching%20and%20Mentoring%20for%20Dummies/Coaching%20and%20Mentoring%20for%20Dummies/#part-4-motivating-and-empowering-your-staff","text":"11. Motivation, Not Inspiration Or Perspiration 12. Seven Practical Strategies To Motivate Employees 13. Don't Try To Do It All Yourself - Delegate","title":"Part 4 - Motivating And Empowering Your Staff"},{"location":"Books/Coaching%20and%20Mentoring%20for%20Dummies/Coaching%20and%20Mentoring%20for%20Dummies/#part-5-grooming-and-growing-your-employees","text":"14. Knowing When - And How - To Train 15. Building Career Self-Reliance 16. Making The Plan - Coaching For Development","title":"Part 5 - Grooming And Growing Your Employees"},{"location":"Books/Coaching%20and%20Mentoring%20for%20Dummies/Coaching%20and%20Mentoring%20for%20Dummies/#part-6-the-part-of-tens","text":"17. Ten Coaching Myths 18. Ten Skills That Strengthen Your Foundation For Coaching 19. Ten Management Behaviours To Avoid 20. Ten (er, 50) Ways To Build Commitment Through Coaching","title":"Part 6 - The Part Of Tens"},{"location":"Books/Coaching%20and%20Mentoring%20for%20Dummies/Coaching%20and%20Mentoring%20for%20Dummies/#summary-in-three-sentences","text":"... ... ...","title":"Summary in three sentences"},{"location":"Books/Coaching%20and%20Mentoring%20for%20Dummies/Coaching%20and%20Mentoring%20for%20Dummies/#who-should-read-it","text":"Anyone in a management role is encouraged to read this, but it's even more important for those currently in their first role to learn how to shift the focus of their work away from the comfortable realm of their old role and onto the uncomfortable but very valuable realm of their new one.","title":"Who Should Read It?"},{"location":"Books/Coaching%20and%20Mentoring%20for%20Dummies/Coaching%20and%20Mentoring%20for%20Dummies/#how-the-book-changed-me","text":"After finishing the first chapter on a Sunday night, I'm already making notes for how I'm going to change my entire approach to work the next day. It made me realise I'd been going about it all wrong, and a lot of things I was supposed to be doing were getting dropped. I initially thought that coaching individuals was just one of many responsibilities of a manager, but after reading that first chapter I learned it is actually a management style that is supposed to be threaded through everything I do.","title":"How the Book Changed Me"},{"location":"Books/Coaching%20and%20Mentoring%20for%20Dummies/Coaching%20and%20Mentoring%20for%20Dummies/#why-did-i-read-this","text":"I start it because I'd recently been promoted into a management role with expectations that I would be coaching and mentoring younger engineers. I didn't comfortably know how to do this, so I entered \"coaching\" into Amazon and this was the first result.","title":"Why did I read this?"},{"location":"Books/Coaching%20and%20Mentoring%20for%20Dummies/Coaching%20and%20Mentoring%20for%20Dummies/#thoughts-and-feelings","text":"","title":"Thoughts and Feelings"},{"location":"Books/Coaching%20and%20Mentoring%20for%20Dummies/Coaching%20and%20Mentoring%20for%20Dummies/#practical-application","text":"","title":"Practical Application"},{"location":"Books/Coaching%20and%20Mentoring%20for%20Dummies/Coaching%20and%20Mentoring%20for%20Dummies/#insights","text":"","title":"Insights"},{"location":"Books/Coaching%20and%20Mentoring%20for%20Dummies/Coaching%20and%20Mentoring%20for%20Dummies/#my-top-three-quotes","text":"... ... ...","title":"My Top Three Quotes"},{"location":"Books/Coaching%20and%20Mentoring%20for%20Dummies/Coaching%20and%20Mentoring%20for%20Dummies/#summary-in-more-than-three-sentences","text":"","title":"Summary in more than three sentences"},{"location":"Books/Coaching%20and%20Mentoring%20for%20Dummies/Coaching%20and%20Mentoring%20for%20Dummies/#part-1-building-employee-commitment-through-coaching_1","text":"","title":"Part 1 - Building Employee Commitment Through Coaching"},{"location":"Books/Computer%20Networks%20-%20A%20Top%20Down%20Approach/1%20-%20Computer%20Networks%20and%20the%20Internet/","text":"What is the Internet? There are two ways of describing the internet. The first is a nuts and bolts description that includes the individual components of the internet. The second is a services description, where the internet is an infrastructure that provides services to applications. The Network Edge The part of a network that includes the end systems connecting to it. The sources and destinations of traffic reside at the network edge. This includes laptops and smartphones on the client side, and data centres on the server side. Access Networks An access network links the end system to the first router (also known as an Edge Router) on the path to its destination. Home Access: DSL One of two forms of residential internet connection that is provided by a customer's telephone provider. It carries both telephone and internet data signal simultaneously. It carries data in the following bands: A high-speed downstream channel between 50kHz and 1MHz A medium-speed upstream channel between 4kHz and 50kHz An ordinary two-way telephone channel between 0 and 4kHz On the customer side, a splitter separates the phone and internet signals while on the telco side a DSLAM (Digital subscriber line access multiplexer) separates them. A DSLAM is a device that interfaces the multiple networks of the internet and telephone lines with the single connection of the residential internet connection. It takes multiplexed signals from the residential end and separates them for use on separate telephone and internet networks. Conversely, it takes the separate signals from the telephone and internet networks and combines (multiplexes) them for transmission along the residential DSL connection. Thousands of homes can be connected to a single DSLAM Home Access: Cable One of two forms of residential internet connection that is provided by a customer's cable television provider. Cable Modem Termination System (CMTS) - equivalent to a DSLAM on a DSL internet connection. A device located in the cable head end of a cable TV network. It takes the analogue signal received from a the cable modem in a downstream home and turns it into a digital signal. Data Over Cable Service Interface Specification (DOCSIS) - An international telecommunications standard that permits a higher data transfer rate over existing cable television networks. Each new version of this standard defines a higher data transfer rate. Home Access: Fibre To The Home (FTTH) Optical Line Terminator (OLT) - The Fibre To The Home (FTTH) equivalent of the DSLAM on a DSL network or a CMTS in a cable internet network. Optical Network Terminator (ONT) - The equivalent of the router in a Fibre To The Home (FTTH) network. Enterprise Access: Ethernet The Network Core The part of a network that includes the switching and routing components. This part of the network is responsible for routing traffic between different end systems on the network edge. For example, traffic will leave a smartphone on the edge, travel through the routing infrastructure of the core, and arrive at a server on another part pf the edge. Edge Router - A router on the edge of the Network Core. This router is the first router through which traffic from an end system will travel on its way to its destination. The Network Core is highlighted here in green Packet Switching In a Packet-Switched Network, packets are sent onto the internet with no resources reserved for their transmission. Instead, packet switches will route packets to their destination as they arrive on the input link, but with the potentials for delays or packet loss. For example, if the network is congested and the switches output buffer is full, it will drop packets, either from the input link or the output buffer. This will result in packet loss where the packets are dropped, and delays where the packets are queued before being transmitted. Store-and-Forward Transmissions An Illustration of store-and-forward packet switching. When the switch receives the first bytes of a packet, it will buffer them until it has received all the bits. At this point it will begin transmitting the entire packet. Assume the following: L: Number of packets to be transmitted R: Transmission rate of the link along which the packets are being transmitted N: The number of links along the transmission path The end-to-end delay in transmitting this entire message is $d_{end-to-end}=N(L/R)$ Queuing Delays and Packet Loss The output buffer of a packet switch is the queue where packets wait to be transmitted. If a packet is ready to be transmitted, but the output link is busy, it will wait in the queue. If the queue is full, then either the packet in question, or one of the already queued packets, will be dropped, leading to packet loss. Forwarding Tables and Routing Protocols Each router contains forwarding tables that it uses to determine where to send the packet. It compares the destination address (or a part of it) of the packet to the entries in its forwarding table for forwards the packet along the relevant link. The internet has a number of routing protocols that are used to automatically populate these forwarding tables. Circuit Switching A type of network where an end-to-end connection between the source and destination is established before a message is sent. The resources between the source and destination (switches and links) along the path have a portion of their capacity reserved for the transmission of the message. Contrast this with a Packet-Switched Network, such as the Internet, where packets are sent onto the network without resources specifically allocated to it, and the network endeavors to get the packets to their destination as fast as possible, or at all. Multiplexing in Circuit-Switched Networks Frequency-Division Multiplexing - The bandwidth of the link is divided into individual bands for the exclusive use of the connections Time-Division Multiplexing - Each connection is allocated time slots during which its data will be transmitted across the link The difference between these two forms of multiplexing is that with FDM, each circuit gets a fraction of the bandwidth all of the time, whereas with TDM, each circuit gets all of the bandwidth for a fraction of the time. Circuit Switching vs Packet Switching Drawbacks of circuit switching: The resources allocated to a connection are wasted during silent times. For example, when someone on a telephone call stops talking, the bandwidth cannot be used by other connections for the duration of the silence. Complicated signalling software is need to co-ordinate the persistent connections and the activities of the packets along the path Drawbacks of packet switching: Not suitable for real-time services links telephone calls and video conferencing because of the variable and unpredictable transmission rates, due to variable and unpredictable queuing times. Benefits of circuit switching: Fixed connection with allocated bandwidth results in predictable transfer speeds and a more stable connection Benefits of packet switching: Better utilisation of connection resources, such as bandwidth Simpler to understand and implement A Network of Networks Interconnection of ISPs Point of Presence (PoP) A group of one or more routers on a provider's network where customer ISPs can connect to the provider ISP. Multi-home An ISP is said to be multi-homing when it connects to two or more provider ISPs. This allows the customer ISP to continue to send and receive traffic from the internet even when one of its providers suffers a failure. Peering Two ISPs can choose to connect their networks together in a process called peering. This will allow them to transfer data between each other without paying an intermediary provider ISP to do so. ISPs at the same level of the hierarchy will do this settlement-free, that is they don't day each other for transit across each other's network. Internet Exchange Point (IXP) A point at which multiple ISPs can peer together provided by a third-party company, typically in it's own building with it's own switches. There are currently over 400 such points on the internet today. Content-Provider Network A network operated by an internet content provider, such as Google. Google's network spans the world and attempts to bypass the tier-1 ISPs by peering directly with lower tier networks settlement free. Since these lower-tier access networks can only be accessed by the higher tier transit providers, Google peers with these tier-1 ISPs and pays the settlement for transit. A content-provider network allows a content provider to better control how its content is distributed to end systems. Delay, Loss, and Throughput in Packet-Switched Networks Overview of Delay in Packet-Switched Networks As a packet passes through the nodes along it's path, it suffers the following types of delay at each node: nodal processing delay - the delay added by inspecting the headers of the packet to determine it's destination. Error checking the integrity of the packet also contributes to this delay. Typically on the order of microseconds in high-speed router. queuing delay - the delay added while the packet is waiting in the queue at the output link. This delay is a function of the intensity and nature of the traffic arriving at the router. Typically on the order of microseconds to milliseconds in practice. transmission delay - the delay added as the packet is taken from the output queue and pushed onto the output link. Can be calculated as L/R, where L is the length of the packet in bits and R is the transmission rate of the output link. Typically on the order to microseconds to milliseconds in practice. propagation delay - the delay added after the packet is transmitted until it reaches the beginning of the input link at it's destination. The packet propagates at propagation speed of the link, and the propagation delay measured as d/s, where d is the distance between the two routers, and s is the propagation speed of the link. Can be typically on the order of milliseconds in wide area networks. Together these accumulate to give the total nodal delay: $d_{nodal}=d_{proc}+d_{queue}+d_{trans}+d_{prop}$ Queuing Delay and Packet Loss Queuing delay is the most significant and interesting of all the delays because it can vary from packet to packet. If 10 packets arrive at a route at the same time, the first packet will suffer no queuing delay, while the last will suffer a significant queuing delay. Thus, queuing delay needs to be characterized with statistical measure, such as average and variance. To be able to estimate the queuing delay, we need to understand the intensity of the traffic arriving at the router. This can be measure as: $La/R$ where: L is the average size of a packet in bits a is the average rate at which packets arrive in the queue R the rate at which packets are pushed out of the queue (transmission rate) When this ratio is greater than 1, then the average rate at which packets are arriving in the queue exceeds the rate at which they are being transmitted, and the queue delay will increase without bound until it reaches infinity. Average queuing delay as a function of traffic intensity. Note that small increases in the traffic intensity ratio can result in larger (percentage-wise) increase in queue delay. Average queuing delay as a function of traffic intensity. Note that small increases in the traffic intensity ratio can result in larger (percentage-wise) increase in queue delay. One of the golden rules of traffic engineering is \"design your system so that the traffic intensity is no greater than 1\". When this ratio is less then or equal to 1, the nature of the traffic will determine the queuing length. For example, of the packets arrive periodically, that is one packet arrives every L/R seconds, there will be no queuing delay since every packet will find an empty queue. On the other hand, if the packets arrive in bursts, then first packet transmitted will experience no queuing delay, while the last one will experience a significant queuing delay. In reality, traffic arrives at the router randomly, so the queue delay is effectively random. Also in reality, queue lengths are not infinite, which we assumed for the purpose of the above description. When a packet arrives at a router to find a full queue, the router will drop that packet. This is known as packet loss. End-to-End Delay The nodal delay discussed about is the delay incurred at a single router. The end-to-end delay is the delay incurred at all routers along the path: $d_{end-to-end}=N(d_{proc}+d_{trans}+d_{prop})$ In this equation, we assume the network is uncongested so that queuing delays are negligible. Protocol Layers and Their Service Models Analogy to the internet routing protocol layers using an airline flight as an example. Layered Architecture Application Layer The layer where network applications live. Protocols such as HTTP and FTP are implemented here, and applications such as DNS run here. Packets in this layer are called messages . Transport Layer The transport layer transports application-layer messages using one of two transport protocols: TCP and UDP. Packets in this layer are called segments . The behaviour of the traffic will be determined by the transport protocol chosen. For example, TCP implements congestion control mechanisms and guarantees delivery of packets to the destination. UDP, on the other, does non of these things. Network Layer The layer that is responsible for routing transport-layer segments from one host to another. Packets in this layer are called datagrams . This layer contains the IP protocol, which defines the fields in the datagram as well as how the end systems and routers act on those fields. It also implements the various other routing protocols in use on the internet. Every device that runs a network layer must implement the IP protocol. Link Layer The layer that moves a network-layer datagram from one node on the network to another. The services provided by link-layer protocols differ from one protocol to the next. For example, some link-layer protocols provide reliable delivery of packets from one node to the next. This should not be confused with the reliable delivery of the TCP protocol, which guarantees delivery between end-systems. A packet may be handled by multiple link-layer protocols on it's journey between end-systems, some examples of which are Ethernet and Wifi. Packets in the link layer are called frames . Physical Layer Responsible for moving the individual bits of a link-layer frame from one node to the next. The protocols here are further dependent on the transmission medium of the link. For example, ethernet has a different physical-layer protocol for twisted-pair copper wire, coaxial cable, fiber, etc. The OSI Model The OSI model was an alternative model in the late 1970s which is not in use today, but is still useful to understand how networks function. Five of it's layers had similar functionality to those of the IP stack described above. The other two layers provided the following functionality: Presentation Layer - Was responsible for the interpretation of the format of the data being transmitted, so that applications didn't have to worry about this themselves. Session Layer - Provided for delimiting and synchronization of data exchange The absence of these two layers in the modern IP stack implemented by the internet means the services they provide are left up to the application developers. Encapsulation An illustration of a packet moving up and down the stacks of the various devices on it's path. Each device is adding it's own header information before passing it to the next layer down in the stack (encapsulation). When moving up the stack, the header information for the current layer is removed and interpreted and the payload is passed up to the next layer (de-encapsulation). Thus, at each layer in the stack, a packet has two types of fields: a header field for the current layer, and a payload containing the original message and the header fields from the upper layers of the stack. Networks Under Attack History of Computer Networking and the Internet The Development of Packet Switching (1961-1972) Proprietary Networks and Internetworking (1972-1980) A proliferation of Networks (1980-1990) The Internet Explosion (1990s) The New Millennium","title":"What is the Internet?"},{"location":"Books/Computer%20Networks%20-%20A%20Top%20Down%20Approach/1%20-%20Computer%20Networks%20and%20the%20Internet/#what-is-the-internet","text":"There are two ways of describing the internet. The first is a nuts and bolts description that includes the individual components of the internet. The second is a services description, where the internet is an infrastructure that provides services to applications.","title":"What is the Internet?"},{"location":"Books/Computer%20Networks%20-%20A%20Top%20Down%20Approach/1%20-%20Computer%20Networks%20and%20the%20Internet/#the-network-edge","text":"The part of a network that includes the end systems connecting to it. The sources and destinations of traffic reside at the network edge. This includes laptops and smartphones on the client side, and data centres on the server side.","title":"The Network Edge"},{"location":"Books/Computer%20Networks%20-%20A%20Top%20Down%20Approach/1%20-%20Computer%20Networks%20and%20the%20Internet/#access-networks","text":"An access network links the end system to the first router (also known as an Edge Router) on the path to its destination.","title":"Access Networks"},{"location":"Books/Computer%20Networks%20-%20A%20Top%20Down%20Approach/1%20-%20Computer%20Networks%20and%20the%20Internet/#home-access-dsl","text":"One of two forms of residential internet connection that is provided by a customer's telephone provider. It carries both telephone and internet data signal simultaneously. It carries data in the following bands: A high-speed downstream channel between 50kHz and 1MHz A medium-speed upstream channel between 4kHz and 50kHz An ordinary two-way telephone channel between 0 and 4kHz On the customer side, a splitter separates the phone and internet signals while on the telco side a DSLAM (Digital subscriber line access multiplexer) separates them. A DSLAM is a device that interfaces the multiple networks of the internet and telephone lines with the single connection of the residential internet connection. It takes multiplexed signals from the residential end and separates them for use on separate telephone and internet networks. Conversely, it takes the separate signals from the telephone and internet networks and combines (multiplexes) them for transmission along the residential DSL connection. Thousands of homes can be connected to a single DSLAM","title":"Home Access: DSL"},{"location":"Books/Computer%20Networks%20-%20A%20Top%20Down%20Approach/1%20-%20Computer%20Networks%20and%20the%20Internet/#home-access-cable","text":"One of two forms of residential internet connection that is provided by a customer's cable television provider. Cable Modem Termination System (CMTS) - equivalent to a DSLAM on a DSL internet connection. A device located in the cable head end of a cable TV network. It takes the analogue signal received from a the cable modem in a downstream home and turns it into a digital signal. Data Over Cable Service Interface Specification (DOCSIS) - An international telecommunications standard that permits a higher data transfer rate over existing cable television networks. Each new version of this standard defines a higher data transfer rate.","title":"Home Access: Cable"},{"location":"Books/Computer%20Networks%20-%20A%20Top%20Down%20Approach/1%20-%20Computer%20Networks%20and%20the%20Internet/#home-access-fibre-to-the-home-ftth","text":"Optical Line Terminator (OLT) - The Fibre To The Home (FTTH) equivalent of the DSLAM on a DSL network or a CMTS in a cable internet network. Optical Network Terminator (ONT) - The equivalent of the router in a Fibre To The Home (FTTH) network.","title":"Home Access: Fibre To The Home (FTTH)"},{"location":"Books/Computer%20Networks%20-%20A%20Top%20Down%20Approach/1%20-%20Computer%20Networks%20and%20the%20Internet/#enterprise-access-ethernet","text":"","title":"Enterprise Access: Ethernet"},{"location":"Books/Computer%20Networks%20-%20A%20Top%20Down%20Approach/1%20-%20Computer%20Networks%20and%20the%20Internet/#the-network-core","text":"The part of a network that includes the switching and routing components. This part of the network is responsible for routing traffic between different end systems on the network edge. For example, traffic will leave a smartphone on the edge, travel through the routing infrastructure of the core, and arrive at a server on another part pf the edge. Edge Router - A router on the edge of the Network Core. This router is the first router through which traffic from an end system will travel on its way to its destination. The Network Core is highlighted here in green","title":"The Network Core"},{"location":"Books/Computer%20Networks%20-%20A%20Top%20Down%20Approach/1%20-%20Computer%20Networks%20and%20the%20Internet/#packet-switching","text":"In a Packet-Switched Network, packets are sent onto the internet with no resources reserved for their transmission. Instead, packet switches will route packets to their destination as they arrive on the input link, but with the potentials for delays or packet loss. For example, if the network is congested and the switches output buffer is full, it will drop packets, either from the input link or the output buffer. This will result in packet loss where the packets are dropped, and delays where the packets are queued before being transmitted.","title":"Packet Switching"},{"location":"Books/Computer%20Networks%20-%20A%20Top%20Down%20Approach/1%20-%20Computer%20Networks%20and%20the%20Internet/#store-and-forward-transmissions","text":"An Illustration of store-and-forward packet switching. When the switch receives the first bytes of a packet, it will buffer them until it has received all the bits. At this point it will begin transmitting the entire packet. Assume the following: L: Number of packets to be transmitted R: Transmission rate of the link along which the packets are being transmitted N: The number of links along the transmission path The end-to-end delay in transmitting this entire message is $d_{end-to-end}=N(L/R)$","title":"Store-and-Forward Transmissions"},{"location":"Books/Computer%20Networks%20-%20A%20Top%20Down%20Approach/1%20-%20Computer%20Networks%20and%20the%20Internet/#queuing-delays-and-packet-loss","text":"The output buffer of a packet switch is the queue where packets wait to be transmitted. If a packet is ready to be transmitted, but the output link is busy, it will wait in the queue. If the queue is full, then either the packet in question, or one of the already queued packets, will be dropped, leading to packet loss.","title":"Queuing Delays and Packet Loss"},{"location":"Books/Computer%20Networks%20-%20A%20Top%20Down%20Approach/1%20-%20Computer%20Networks%20and%20the%20Internet/#forwarding-tables-and-routing-protocols","text":"Each router contains forwarding tables that it uses to determine where to send the packet. It compares the destination address (or a part of it) of the packet to the entries in its forwarding table for forwards the packet along the relevant link. The internet has a number of routing protocols that are used to automatically populate these forwarding tables.","title":"Forwarding Tables and Routing Protocols"},{"location":"Books/Computer%20Networks%20-%20A%20Top%20Down%20Approach/1%20-%20Computer%20Networks%20and%20the%20Internet/#circuit-switching","text":"A type of network where an end-to-end connection between the source and destination is established before a message is sent. The resources between the source and destination (switches and links) along the path have a portion of their capacity reserved for the transmission of the message. Contrast this with a Packet-Switched Network, such as the Internet, where packets are sent onto the network without resources specifically allocated to it, and the network endeavors to get the packets to their destination as fast as possible, or at all.","title":"Circuit Switching"},{"location":"Books/Computer%20Networks%20-%20A%20Top%20Down%20Approach/1%20-%20Computer%20Networks%20and%20the%20Internet/#multiplexing-in-circuit-switched-networks","text":"Frequency-Division Multiplexing - The bandwidth of the link is divided into individual bands for the exclusive use of the connections Time-Division Multiplexing - Each connection is allocated time slots during which its data will be transmitted across the link The difference between these two forms of multiplexing is that with FDM, each circuit gets a fraction of the bandwidth all of the time, whereas with TDM, each circuit gets all of the bandwidth for a fraction of the time.","title":"Multiplexing in Circuit-Switched Networks"},{"location":"Books/Computer%20Networks%20-%20A%20Top%20Down%20Approach/1%20-%20Computer%20Networks%20and%20the%20Internet/#circuit-switching-vs-packet-switching","text":"Drawbacks of circuit switching: The resources allocated to a connection are wasted during silent times. For example, when someone on a telephone call stops talking, the bandwidth cannot be used by other connections for the duration of the silence. Complicated signalling software is need to co-ordinate the persistent connections and the activities of the packets along the path Drawbacks of packet switching: Not suitable for real-time services links telephone calls and video conferencing because of the variable and unpredictable transmission rates, due to variable and unpredictable queuing times. Benefits of circuit switching: Fixed connection with allocated bandwidth results in predictable transfer speeds and a more stable connection Benefits of packet switching: Better utilisation of connection resources, such as bandwidth Simpler to understand and implement","title":"Circuit Switching vs Packet Switching"},{"location":"Books/Computer%20Networks%20-%20A%20Top%20Down%20Approach/1%20-%20Computer%20Networks%20and%20the%20Internet/#a-network-of-networks","text":"Interconnection of ISPs Point of Presence (PoP) A group of one or more routers on a provider's network where customer ISPs can connect to the provider ISP. Multi-home An ISP is said to be multi-homing when it connects to two or more provider ISPs. This allows the customer ISP to continue to send and receive traffic from the internet even when one of its providers suffers a failure. Peering Two ISPs can choose to connect their networks together in a process called peering. This will allow them to transfer data between each other without paying an intermediary provider ISP to do so. ISPs at the same level of the hierarchy will do this settlement-free, that is they don't day each other for transit across each other's network. Internet Exchange Point (IXP) A point at which multiple ISPs can peer together provided by a third-party company, typically in it's own building with it's own switches. There are currently over 400 such points on the internet today. Content-Provider Network A network operated by an internet content provider, such as Google. Google's network spans the world and attempts to bypass the tier-1 ISPs by peering directly with lower tier networks settlement free. Since these lower-tier access networks can only be accessed by the higher tier transit providers, Google peers with these tier-1 ISPs and pays the settlement for transit. A content-provider network allows a content provider to better control how its content is distributed to end systems.","title":"A Network of Networks"},{"location":"Books/Computer%20Networks%20-%20A%20Top%20Down%20Approach/1%20-%20Computer%20Networks%20and%20the%20Internet/#delay-loss-and-throughput-in-packet-switched-networks","text":"","title":"Delay, Loss, and Throughput in Packet-Switched Networks"},{"location":"Books/Computer%20Networks%20-%20A%20Top%20Down%20Approach/1%20-%20Computer%20Networks%20and%20the%20Internet/#overview-of-delay-in-packet-switched-networks","text":"As a packet passes through the nodes along it's path, it suffers the following types of delay at each node: nodal processing delay - the delay added by inspecting the headers of the packet to determine it's destination. Error checking the integrity of the packet also contributes to this delay. Typically on the order of microseconds in high-speed router. queuing delay - the delay added while the packet is waiting in the queue at the output link. This delay is a function of the intensity and nature of the traffic arriving at the router. Typically on the order of microseconds to milliseconds in practice. transmission delay - the delay added as the packet is taken from the output queue and pushed onto the output link. Can be calculated as L/R, where L is the length of the packet in bits and R is the transmission rate of the output link. Typically on the order to microseconds to milliseconds in practice. propagation delay - the delay added after the packet is transmitted until it reaches the beginning of the input link at it's destination. The packet propagates at propagation speed of the link, and the propagation delay measured as d/s, where d is the distance between the two routers, and s is the propagation speed of the link. Can be typically on the order of milliseconds in wide area networks. Together these accumulate to give the total nodal delay: $d_{nodal}=d_{proc}+d_{queue}+d_{trans}+d_{prop}$","title":"Overview of Delay in Packet-Switched Networks"},{"location":"Books/Computer%20Networks%20-%20A%20Top%20Down%20Approach/1%20-%20Computer%20Networks%20and%20the%20Internet/#queuing-delay-and-packet-loss","text":"Queuing delay is the most significant and interesting of all the delays because it can vary from packet to packet. If 10 packets arrive at a route at the same time, the first packet will suffer no queuing delay, while the last will suffer a significant queuing delay. Thus, queuing delay needs to be characterized with statistical measure, such as average and variance. To be able to estimate the queuing delay, we need to understand the intensity of the traffic arriving at the router. This can be measure as: $La/R$ where: L is the average size of a packet in bits a is the average rate at which packets arrive in the queue R the rate at which packets are pushed out of the queue (transmission rate) When this ratio is greater than 1, then the average rate at which packets are arriving in the queue exceeds the rate at which they are being transmitted, and the queue delay will increase without bound until it reaches infinity. Average queuing delay as a function of traffic intensity. Note that small increases in the traffic intensity ratio can result in larger (percentage-wise) increase in queue delay. Average queuing delay as a function of traffic intensity. Note that small increases in the traffic intensity ratio can result in larger (percentage-wise) increase in queue delay. One of the golden rules of traffic engineering is \"design your system so that the traffic intensity is no greater than 1\". When this ratio is less then or equal to 1, the nature of the traffic will determine the queuing length. For example, of the packets arrive periodically, that is one packet arrives every L/R seconds, there will be no queuing delay since every packet will find an empty queue. On the other hand, if the packets arrive in bursts, then first packet transmitted will experience no queuing delay, while the last one will experience a significant queuing delay. In reality, traffic arrives at the router randomly, so the queue delay is effectively random. Also in reality, queue lengths are not infinite, which we assumed for the purpose of the above description. When a packet arrives at a router to find a full queue, the router will drop that packet. This is known as packet loss.","title":"Queuing Delay and Packet Loss"},{"location":"Books/Computer%20Networks%20-%20A%20Top%20Down%20Approach/1%20-%20Computer%20Networks%20and%20the%20Internet/#end-to-end-delay","text":"The nodal delay discussed about is the delay incurred at a single router. The end-to-end delay is the delay incurred at all routers along the path: $d_{end-to-end}=N(d_{proc}+d_{trans}+d_{prop})$ In this equation, we assume the network is uncongested so that queuing delays are negligible.","title":"End-to-End Delay"},{"location":"Books/Computer%20Networks%20-%20A%20Top%20Down%20Approach/1%20-%20Computer%20Networks%20and%20the%20Internet/#protocol-layers-and-their-service-models","text":"Analogy to the internet routing protocol layers using an airline flight as an example.","title":"Protocol Layers and Their Service Models"},{"location":"Books/Computer%20Networks%20-%20A%20Top%20Down%20Approach/1%20-%20Computer%20Networks%20and%20the%20Internet/#layered-architecture","text":"Application Layer The layer where network applications live. Protocols such as HTTP and FTP are implemented here, and applications such as DNS run here. Packets in this layer are called messages . Transport Layer The transport layer transports application-layer messages using one of two transport protocols: TCP and UDP. Packets in this layer are called segments . The behaviour of the traffic will be determined by the transport protocol chosen. For example, TCP implements congestion control mechanisms and guarantees delivery of packets to the destination. UDP, on the other, does non of these things. Network Layer The layer that is responsible for routing transport-layer segments from one host to another. Packets in this layer are called datagrams . This layer contains the IP protocol, which defines the fields in the datagram as well as how the end systems and routers act on those fields. It also implements the various other routing protocols in use on the internet. Every device that runs a network layer must implement the IP protocol. Link Layer The layer that moves a network-layer datagram from one node on the network to another. The services provided by link-layer protocols differ from one protocol to the next. For example, some link-layer protocols provide reliable delivery of packets from one node to the next. This should not be confused with the reliable delivery of the TCP protocol, which guarantees delivery between end-systems. A packet may be handled by multiple link-layer protocols on it's journey between end-systems, some examples of which are Ethernet and Wifi. Packets in the link layer are called frames . Physical Layer Responsible for moving the individual bits of a link-layer frame from one node to the next. The protocols here are further dependent on the transmission medium of the link. For example, ethernet has a different physical-layer protocol for twisted-pair copper wire, coaxial cable, fiber, etc. The OSI Model The OSI model was an alternative model in the late 1970s which is not in use today, but is still useful to understand how networks function. Five of it's layers had similar functionality to those of the IP stack described above. The other two layers provided the following functionality: Presentation Layer - Was responsible for the interpretation of the format of the data being transmitted, so that applications didn't have to worry about this themselves. Session Layer - Provided for delimiting and synchronization of data exchange The absence of these two layers in the modern IP stack implemented by the internet means the services they provide are left up to the application developers.","title":"Layered Architecture"},{"location":"Books/Computer%20Networks%20-%20A%20Top%20Down%20Approach/1%20-%20Computer%20Networks%20and%20the%20Internet/#encapsulation","text":"An illustration of a packet moving up and down the stacks of the various devices on it's path. Each device is adding it's own header information before passing it to the next layer down in the stack (encapsulation). When moving up the stack, the header information for the current layer is removed and interpreted and the payload is passed up to the next layer (de-encapsulation). Thus, at each layer in the stack, a packet has two types of fields: a header field for the current layer, and a payload containing the original message and the header fields from the upper layers of the stack.","title":"Encapsulation"},{"location":"Books/Computer%20Networks%20-%20A%20Top%20Down%20Approach/1%20-%20Computer%20Networks%20and%20the%20Internet/#networks-under-attack","text":"","title":"Networks Under Attack"},{"location":"Books/Computer%20Networks%20-%20A%20Top%20Down%20Approach/1%20-%20Computer%20Networks%20and%20the%20Internet/#history-of-computer-networking-and-the-internet","text":"","title":"History of Computer Networking and the Internet"},{"location":"Books/Computer%20Networks%20-%20A%20Top%20Down%20Approach/1%20-%20Computer%20Networks%20and%20the%20Internet/#the-development-of-packet-switching-1961-1972","text":"","title":"The Development of Packet Switching (1961-1972)"},{"location":"Books/Computer%20Networks%20-%20A%20Top%20Down%20Approach/1%20-%20Computer%20Networks%20and%20the%20Internet/#proprietary-networks-and-internetworking-1972-1980","text":"","title":"Proprietary Networks and Internetworking (1972-1980)"},{"location":"Books/Computer%20Networks%20-%20A%20Top%20Down%20Approach/1%20-%20Computer%20Networks%20and%20the%20Internet/#a-proliferation-of-networks-1980-1990","text":"","title":"A proliferation of Networks (1980-1990)"},{"location":"Books/Computer%20Networks%20-%20A%20Top%20Down%20Approach/1%20-%20Computer%20Networks%20and%20the%20Internet/#the-internet-explosion-1990s","text":"","title":"The Internet Explosion (1990s)"},{"location":"Books/Computer%20Networks%20-%20A%20Top%20Down%20Approach/1%20-%20Computer%20Networks%20and%20the%20Internet/#the-new-millennium","text":"","title":"The New Millennium"},{"location":"Books/Computer%20Networks%20-%20A%20Top%20Down%20Approach/2%20-%20Application%20Layer/","text":"Principles of Network Applications Communication between applications running on end systems takes place at the application layer. Network applications on any type of end systems - laptop, desktop, server, iOS, Android, etc - can communicate with each other because their communication is separated from the transportation of the message. Network Application Architectures In client-server architectures there is an always-on host with a fixed IP address called a server. This host is communicated with by one or more client hosts, for example a web browser on someones laptop. Because the server is always on, the users laptop is always able to find the server when it needs to communicate with it. Since a single server can easily be overwhelmed by the amount of traffic a busy website can generate, many servers are gather together inside a datacentre . Peer to Peer architectures , on the other hand, do not rely on a single host with which to communicate, rather they communicate with other end systems running the same network application, usually laptops and desktop controlled by users. P2P architectures have the advantages of scalability, since each peer not only generates workloads for other peers in the network, but provides capacity by serving resources. The drawback to this decentralised model is performance (the network relies on the users internet connection, the quality of which will vary), reiability (the peers in the network can come and go, causing capacity and availability of shared resources to flux) and security (any peer can join the network with no credibility). Processes Communicating Processes communicate across a network by sending messages to one another in pairs - a client and a server. On the web, a browser accessing a server is called the client and the server is called the server. In P2P applications, the host that is downloading a file is called the client, the one hosting it is called the server. In a P2P network, a single end system can be both a client and a server simultaneously. Generally, the process initiating the communication is called the client, and the process waiting to be contacted is called the server. Messages enter and leave an end system through an interface called a socket . The network application pushes its message into the socket, assuming trapsorting infrastructure will be on the other side to pick it up. A socket might offer a choice of transport protocol, as well as allow the application developer to set some protocol-specific parameters, but the transportation logic is hidden away behind the socket API . In order for a message to reach its destination, it must be transmitted with two pieces of information: an IP address and a port number . A socket is the interface between an application process and the transport layer protocol. Transport Services Available to Applications Choosing a transport layer protocol is like choosing a mode of transport between cities, eg plane or train. Each offers different services which can be broadly categorised as: - Data Transfer - some applications cannot tolerate loss during transit, such as email and banking data, whereas multimedia applications such as video and voice call can. When a transport protocol provides reliable data transfer, the application can send its data into the socket completely confident that it will all reach its destination. - Throughput - if a transport layer protocol is able to provide thorughput guarantees, then bandwidth-sensitive applications , such as internet telephony, can request a specific throughput when they send their data into a socket, while elastic applications , such as email, can use as much or as little as is available. - Timing - this is where a protocol guarantees data is received at the destination no more than x milliseconds after it was transmitted. - Security - this is where a transport layer protocol encrypts the data after it enters the sending socket and decrypts it after it arrives at the receiver socket before it's send on to the destination process. Other examples include data integrity and end-point authentication. Transport Services Provided by the Internet Application-Layer Protocols Network Applications Covered in This Book The Web and HTTP Overview of HTTP Non-Persistent and Persistent Connections HTTP Message Format User-Server Interaction: Cookies Web Caching Electronic Mail in the Internet SMTP Comparison with HTTP Mail Message Formats Mail Access Protocols DNS - The Internet's Directory Service Services Provided by DNS Overview of How DNS Works DNS Records and Messages Peer-to-Peer File Distribution Video Streaming and Content Distribution Networks Internet Video HTTP Streaming and DASH Content Distribution Networks Case Studies: Netflix, YouTube, and Kankan Socket Programming: Creating Network Applications Socket Programming with UDP Socket Programming with TCP","title":"Principles of Network Applications"},{"location":"Books/Computer%20Networks%20-%20A%20Top%20Down%20Approach/2%20-%20Application%20Layer/#principles-of-network-applications","text":"Communication between applications running on end systems takes place at the application layer. Network applications on any type of end systems - laptop, desktop, server, iOS, Android, etc - can communicate with each other because their communication is separated from the transportation of the message.","title":"Principles of Network Applications"},{"location":"Books/Computer%20Networks%20-%20A%20Top%20Down%20Approach/2%20-%20Application%20Layer/#network-application-architectures","text":"In client-server architectures there is an always-on host with a fixed IP address called a server. This host is communicated with by one or more client hosts, for example a web browser on someones laptop. Because the server is always on, the users laptop is always able to find the server when it needs to communicate with it. Since a single server can easily be overwhelmed by the amount of traffic a busy website can generate, many servers are gather together inside a datacentre . Peer to Peer architectures , on the other hand, do not rely on a single host with which to communicate, rather they communicate with other end systems running the same network application, usually laptops and desktop controlled by users. P2P architectures have the advantages of scalability, since each peer not only generates workloads for other peers in the network, but provides capacity by serving resources. The drawback to this decentralised model is performance (the network relies on the users internet connection, the quality of which will vary), reiability (the peers in the network can come and go, causing capacity and availability of shared resources to flux) and security (any peer can join the network with no credibility).","title":"Network Application Architectures"},{"location":"Books/Computer%20Networks%20-%20A%20Top%20Down%20Approach/2%20-%20Application%20Layer/#processes-communicating","text":"Processes communicate across a network by sending messages to one another in pairs - a client and a server. On the web, a browser accessing a server is called the client and the server is called the server. In P2P applications, the host that is downloading a file is called the client, the one hosting it is called the server. In a P2P network, a single end system can be both a client and a server simultaneously. Generally, the process initiating the communication is called the client, and the process waiting to be contacted is called the server. Messages enter and leave an end system through an interface called a socket . The network application pushes its message into the socket, assuming trapsorting infrastructure will be on the other side to pick it up. A socket might offer a choice of transport protocol, as well as allow the application developer to set some protocol-specific parameters, but the transportation logic is hidden away behind the socket API . In order for a message to reach its destination, it must be transmitted with two pieces of information: an IP address and a port number . A socket is the interface between an application process and the transport layer protocol.","title":"Processes Communicating"},{"location":"Books/Computer%20Networks%20-%20A%20Top%20Down%20Approach/2%20-%20Application%20Layer/#transport-services-available-to-applications","text":"Choosing a transport layer protocol is like choosing a mode of transport between cities, eg plane or train. Each offers different services which can be broadly categorised as: - Data Transfer - some applications cannot tolerate loss during transit, such as email and banking data, whereas multimedia applications such as video and voice call can. When a transport protocol provides reliable data transfer, the application can send its data into the socket completely confident that it will all reach its destination. - Throughput - if a transport layer protocol is able to provide thorughput guarantees, then bandwidth-sensitive applications , such as internet telephony, can request a specific throughput when they send their data into a socket, while elastic applications , such as email, can use as much or as little as is available. - Timing - this is where a protocol guarantees data is received at the destination no more than x milliseconds after it was transmitted. - Security - this is where a transport layer protocol encrypts the data after it enters the sending socket and decrypts it after it arrives at the receiver socket before it's send on to the destination process. Other examples include data integrity and end-point authentication.","title":"Transport Services Available to Applications"},{"location":"Books/Computer%20Networks%20-%20A%20Top%20Down%20Approach/2%20-%20Application%20Layer/#transport-services-provided-by-the-internet","text":"","title":"Transport Services Provided by the Internet"},{"location":"Books/Computer%20Networks%20-%20A%20Top%20Down%20Approach/2%20-%20Application%20Layer/#application-layer-protocols","text":"","title":"Application-Layer Protocols"},{"location":"Books/Computer%20Networks%20-%20A%20Top%20Down%20Approach/2%20-%20Application%20Layer/#network-applications-covered-in-this-book","text":"","title":"Network Applications Covered in This Book"},{"location":"Books/Computer%20Networks%20-%20A%20Top%20Down%20Approach/2%20-%20Application%20Layer/#the-web-and-http","text":"","title":"The Web and HTTP"},{"location":"Books/Computer%20Networks%20-%20A%20Top%20Down%20Approach/2%20-%20Application%20Layer/#overview-of-http","text":"","title":"Overview of HTTP"},{"location":"Books/Computer%20Networks%20-%20A%20Top%20Down%20Approach/2%20-%20Application%20Layer/#non-persistent-and-persistent-connections","text":"","title":"Non-Persistent and Persistent Connections"},{"location":"Books/Computer%20Networks%20-%20A%20Top%20Down%20Approach/2%20-%20Application%20Layer/#http-message-format","text":"","title":"HTTP Message Format"},{"location":"Books/Computer%20Networks%20-%20A%20Top%20Down%20Approach/2%20-%20Application%20Layer/#user-server-interaction-cookies","text":"","title":"User-Server Interaction: Cookies"},{"location":"Books/Computer%20Networks%20-%20A%20Top%20Down%20Approach/2%20-%20Application%20Layer/#web-caching","text":"","title":"Web Caching"},{"location":"Books/Computer%20Networks%20-%20A%20Top%20Down%20Approach/2%20-%20Application%20Layer/#electronic-mail-in-the-internet","text":"","title":"Electronic Mail in the Internet"},{"location":"Books/Computer%20Networks%20-%20A%20Top%20Down%20Approach/2%20-%20Application%20Layer/#smtp","text":"","title":"SMTP"},{"location":"Books/Computer%20Networks%20-%20A%20Top%20Down%20Approach/2%20-%20Application%20Layer/#comparison-with-http","text":"","title":"Comparison with HTTP"},{"location":"Books/Computer%20Networks%20-%20A%20Top%20Down%20Approach/2%20-%20Application%20Layer/#mail-message-formats","text":"","title":"Mail Message Formats"},{"location":"Books/Computer%20Networks%20-%20A%20Top%20Down%20Approach/2%20-%20Application%20Layer/#mail-access-protocols","text":"","title":"Mail Access Protocols"},{"location":"Books/Computer%20Networks%20-%20A%20Top%20Down%20Approach/2%20-%20Application%20Layer/#dns-the-internets-directory-service","text":"","title":"DNS - The Internet's Directory Service"},{"location":"Books/Computer%20Networks%20-%20A%20Top%20Down%20Approach/2%20-%20Application%20Layer/#services-provided-by-dns","text":"","title":"Services Provided by DNS"},{"location":"Books/Computer%20Networks%20-%20A%20Top%20Down%20Approach/2%20-%20Application%20Layer/#overview-of-how-dns-works","text":"","title":"Overview of How DNS Works"},{"location":"Books/Computer%20Networks%20-%20A%20Top%20Down%20Approach/2%20-%20Application%20Layer/#dns-records-and-messages","text":"","title":"DNS Records and Messages"},{"location":"Books/Computer%20Networks%20-%20A%20Top%20Down%20Approach/2%20-%20Application%20Layer/#peer-to-peer-file-distribution","text":"","title":"Peer-to-Peer File Distribution"},{"location":"Books/Computer%20Networks%20-%20A%20Top%20Down%20Approach/2%20-%20Application%20Layer/#video-streaming-and-content-distribution-networks","text":"","title":"Video Streaming and Content Distribution Networks"},{"location":"Books/Computer%20Networks%20-%20A%20Top%20Down%20Approach/2%20-%20Application%20Layer/#internet-video","text":"","title":"Internet Video"},{"location":"Books/Computer%20Networks%20-%20A%20Top%20Down%20Approach/2%20-%20Application%20Layer/#http-streaming-and-dash","text":"","title":"HTTP Streaming and DASH"},{"location":"Books/Computer%20Networks%20-%20A%20Top%20Down%20Approach/2%20-%20Application%20Layer/#content-distribution-networks","text":"","title":"Content Distribution Networks"},{"location":"Books/Computer%20Networks%20-%20A%20Top%20Down%20Approach/2%20-%20Application%20Layer/#case-studies-netflix-youtube-and-kankan","text":"","title":"Case Studies: Netflix, YouTube, and Kankan"},{"location":"Books/Computer%20Networks%20-%20A%20Top%20Down%20Approach/2%20-%20Application%20Layer/#socket-programming-creating-network-applications","text":"","title":"Socket Programming: Creating Network Applications"},{"location":"Books/Computer%20Networks%20-%20A%20Top%20Down%20Approach/2%20-%20Application%20Layer/#socket-programming-with-udp","text":"","title":"Socket Programming with UDP"},{"location":"Books/Computer%20Networks%20-%20A%20Top%20Down%20Approach/2%20-%20Application%20Layer/#socket-programming-with-tcp","text":"","title":"Socket Programming with TCP"},{"location":"Books/Computer%20Networks%20-%20A%20Top%20Down%20Approach/3%20-%20Transport%20Layer/","text":"","title":"3   Transport Layer"},{"location":"Books/Computer%20Networks%20-%20A%20Top%20Down%20Approach/4%20-%20The%20Network%20Layer%20-%20The%20Data%20Plane/","text":"","title":"4   The Network Layer   The Data Plane"},{"location":"Books/Computer%20Networks%20-%20A%20Top%20Down%20Approach/5%20-%20The%20Network%20Layer%20-%20Control%20Plane/","text":"Routing Among the ISPs: BGP BGP is an inter-AS routing protocol. The Role of BGP When a router is forwarding packets to another AS, it doesn't forward them to a specific address, rather to a CIDRized prefix, such as 138.16.88/22. The routers forwarding table would contain an entry of the form (x, l) where x is the prefix and l is the interface number of one of the routers interfaces. BGP fulfills the following roles: - Obtain prefix reachability information from neighboring ASs . BGP allows each subnet to advertise their existence to the rest of the internet. Without BGP, each subnet would be an isolated island with no traffic able to move between them. - Determine the \"best\" routes to the prefixes . A router will use reachability information as well as policy information to determine the best route to specific prefix when two or more are available. Advertising BGP Route Information Consider the network shown below: The gateway routers in the ASs send messages to each other to announce routes to the different ASs they know about. These gateway routers connect the AS to other ASs, while internal routers only connect to hosts within the AS. Routing information is exchanged over semi-permanent TCP connections, called BGP connections , using port 179. A BGP connection spanning two ASs is called an external BGP connection (eBGP) while such a connection between hosts in the same AS is called an internal BGP connection (iBGP) . In the diagram above, routing announcements travel over both external and internal BGP connections so that each router knows about the routes between the three ASs. Determining the Best Routes In BGP, a prefix along with its attributes is called a route , the two most important of which are: - AS-PATH - the list of ASs through which the advertisement has pass. Routers are configured to reject advertisements that contain their own AS to prevent looping advertisements - NEXT-HOP - The IP address of the router interface that begins the AS-PATH. Hot Potato Routing Hot potato routing is where the least cost route is chosen, where cost isn't necessarily about money. It could, for example, mean the fewest hops or the lowest ping time. A router calculates the least cost path to a link and adds it to its forwarding table. Hot potato routing is named after a hot potato that is burning your hand, and you want to pass it on to the next person as quickly as possible. When adding an outside-AS prefix to the forwarding table, both the intra-AS routing protocol (BGP) and inter-AS routing protocol (OSPF) are used. Hot potato routing is a selfish routing algorithm where routers prioritize reducing costs to their own AS while ignoring the end-to-end-cost out the AS. Even if there are multiple routes out of an AS to the destination, a router won't consider anything other than the cheapest option with respect to its own situation. Route Selection Algorithm","title":"Routing Among the ISPs: BGP"},{"location":"Books/Computer%20Networks%20-%20A%20Top%20Down%20Approach/5%20-%20The%20Network%20Layer%20-%20Control%20Plane/#routing-among-the-isps-bgp","text":"BGP is an inter-AS routing protocol.","title":"Routing Among the ISPs: BGP"},{"location":"Books/Computer%20Networks%20-%20A%20Top%20Down%20Approach/5%20-%20The%20Network%20Layer%20-%20Control%20Plane/#the-role-of-bgp","text":"When a router is forwarding packets to another AS, it doesn't forward them to a specific address, rather to a CIDRized prefix, such as 138.16.88/22. The routers forwarding table would contain an entry of the form (x, l) where x is the prefix and l is the interface number of one of the routers interfaces. BGP fulfills the following roles: - Obtain prefix reachability information from neighboring ASs . BGP allows each subnet to advertise their existence to the rest of the internet. Without BGP, each subnet would be an isolated island with no traffic able to move between them. - Determine the \"best\" routes to the prefixes . A router will use reachability information as well as policy information to determine the best route to specific prefix when two or more are available.","title":"The Role of BGP"},{"location":"Books/Computer%20Networks%20-%20A%20Top%20Down%20Approach/5%20-%20The%20Network%20Layer%20-%20Control%20Plane/#advertising-bgp-route-information","text":"Consider the network shown below: The gateway routers in the ASs send messages to each other to announce routes to the different ASs they know about. These gateway routers connect the AS to other ASs, while internal routers only connect to hosts within the AS. Routing information is exchanged over semi-permanent TCP connections, called BGP connections , using port 179. A BGP connection spanning two ASs is called an external BGP connection (eBGP) while such a connection between hosts in the same AS is called an internal BGP connection (iBGP) . In the diagram above, routing announcements travel over both external and internal BGP connections so that each router knows about the routes between the three ASs.","title":"Advertising BGP Route Information"},{"location":"Books/Computer%20Networks%20-%20A%20Top%20Down%20Approach/5%20-%20The%20Network%20Layer%20-%20Control%20Plane/#determining-the-best-routes","text":"In BGP, a prefix along with its attributes is called a route , the two most important of which are: - AS-PATH - the list of ASs through which the advertisement has pass. Routers are configured to reject advertisements that contain their own AS to prevent looping advertisements - NEXT-HOP - The IP address of the router interface that begins the AS-PATH.","title":"Determining the Best Routes"},{"location":"Books/Computer%20Networks%20-%20A%20Top%20Down%20Approach/5%20-%20The%20Network%20Layer%20-%20Control%20Plane/#hot-potato-routing","text":"Hot potato routing is where the least cost route is chosen, where cost isn't necessarily about money. It could, for example, mean the fewest hops or the lowest ping time. A router calculates the least cost path to a link and adds it to its forwarding table. Hot potato routing is named after a hot potato that is burning your hand, and you want to pass it on to the next person as quickly as possible. When adding an outside-AS prefix to the forwarding table, both the intra-AS routing protocol (BGP) and inter-AS routing protocol (OSPF) are used. Hot potato routing is a selfish routing algorithm where routers prioritize reducing costs to their own AS while ignoring the end-to-end-cost out the AS. Even if there are multiple routes out of an AS to the destination, a router won't consider anything other than the cheapest option with respect to its own situation.","title":"Hot Potato Routing"},{"location":"Books/Computer%20Networks%20-%20A%20Top%20Down%20Approach/5%20-%20The%20Network%20Layer%20-%20Control%20Plane/#route-selection-algorithm","text":"","title":"Route Selection Algorithm"},{"location":"Books/Computer%20Networks%20-%20A%20Top%20Down%20Approach/6%20-%20The%20Link%20Layer%20and%20LANs/","text":"","title":"6   The Link Layer and LANs"},{"location":"Books/Computer%20Networks%20-%20A%20Top%20Down%20Approach/7%20-%20Wireless%20and%20Mobile%20Networks/","text":"","title":"7   Wireless and Mobile Networks"},{"location":"Books/Computer%20Networks%20-%20A%20Top%20Down%20Approach/8%20-%20Security%20in%20Computer%20Networks/","text":"","title":"8   Security in Computer Networks"},{"location":"Books/Computer%20Networks%20-%20A%20Top%20Down%20Approach/9%20-%20Multimedia%20Networking/","text":"","title":"9   Multimedia Networking"},{"location":"Books/Computer%20Networks%20-%20A%20Top%20Down%20Approach/Computer%20Networks%20-%20A%20Top%20Down%20Approach/","text":"Contents 1 - Computer Networks and the Internet 2 - Application Layer 3 - Transport Layer 4 - The Network Layer - The Data Plane 5 - The Network Layer - Control Plane 6 - The Link Layer and LANs 7 - Wireless and Mobile Networks 8 - Security in Computer Networks 9 - Multimedia Networking Summary in three sentences ... ... ... Who Should Read It? How the Book Changed Me Why did I read this? Thoughts and Feelings Practical Application Insights My Top Three Quotes ... ... ...","title":"Contents"},{"location":"Books/Computer%20Networks%20-%20A%20Top%20Down%20Approach/Computer%20Networks%20-%20A%20Top%20Down%20Approach/#contents","text":"1 - Computer Networks and the Internet 2 - Application Layer 3 - Transport Layer 4 - The Network Layer - The Data Plane 5 - The Network Layer - Control Plane 6 - The Link Layer and LANs 7 - Wireless and Mobile Networks 8 - Security in Computer Networks 9 - Multimedia Networking","title":"Contents"},{"location":"Books/Computer%20Networks%20-%20A%20Top%20Down%20Approach/Computer%20Networks%20-%20A%20Top%20Down%20Approach/#summary-in-three-sentences","text":"... ... ...","title":"Summary in three sentences"},{"location":"Books/Computer%20Networks%20-%20A%20Top%20Down%20Approach/Computer%20Networks%20-%20A%20Top%20Down%20Approach/#who-should-read-it","text":"","title":"Who Should Read It?"},{"location":"Books/Computer%20Networks%20-%20A%20Top%20Down%20Approach/Computer%20Networks%20-%20A%20Top%20Down%20Approach/#how-the-book-changed-me","text":"","title":"How the Book Changed Me"},{"location":"Books/Computer%20Networks%20-%20A%20Top%20Down%20Approach/Computer%20Networks%20-%20A%20Top%20Down%20Approach/#why-did-i-read-this","text":"","title":"Why did I read this?"},{"location":"Books/Computer%20Networks%20-%20A%20Top%20Down%20Approach/Computer%20Networks%20-%20A%20Top%20Down%20Approach/#thoughts-and-feelings","text":"","title":"Thoughts and Feelings"},{"location":"Books/Computer%20Networks%20-%20A%20Top%20Down%20Approach/Computer%20Networks%20-%20A%20Top%20Down%20Approach/#practical-application","text":"","title":"Practical Application"},{"location":"Books/Computer%20Networks%20-%20A%20Top%20Down%20Approach/Computer%20Networks%20-%20A%20Top%20Down%20Approach/#insights","text":"","title":"Insights"},{"location":"Books/Computer%20Networks%20-%20A%20Top%20Down%20Approach/Computer%20Networks%20-%20A%20Top%20Down%20Approach/#my-top-three-quotes","text":"... ... ...","title":"My Top Three Quotes"},{"location":"Books/Drive%20-%20The%20Surprising%20Truth%20About%20What%20Motivates%20Us/Drive%20-%20The%20Surprising%20Truth%20About%20What%20Motivates%20Us/","text":"Summary in three sentences Carrot and stick forms of management only work on mechanical tasks. These have been shown to be detrimental to the success of tasks that require even the slightest creative thinking. People are driven by three desires: Autonomy , to self-direct; Mastery , to acquire new skills; and Purpose , to do work that has meaning. ... Who Should Read It? How the Book Changed Me Why did I read this? Thoughts and Feelings Practical Application Favourite Quotes ... ... ... 1. Motivation 1.0 and motivation 2.0: basic needs and the stick and the carrot Motivation 1.0 was the driving force behind all our actions through most of our evolution - the need to eat and reproduce. Motivation 2.0 is the primary motivation in the workplace today, where employers believe that workers will only work if rewarded or punished by management. This is extrinsic motivation , often called the carrot and the stick. 2. There is another way: Motivation 3.0 - intrinsic motivation in place of exterior incentives Motivation 3.0 is where the fulfillment felt by doing a job is the only reward someone needs. This is known as intrinsic motivation . Intrinsically motivated people want to choose when they work, what they work on and what they are responsible for. 3. Missing the target: the stick and the carrot can have harmful consequences Carrot and stick is typically detrimental to performance is the task is more than a simple manual task. Mechanics in a garage incentivised by the number of repairs they complete go on to complete unnecessary repairs, annoying the customers and damaging the garages reputation. Experiments have found that incentivising subjects to complete a task with some sort of creative thinking impaired the subjects judgment. 4. Extrinsic promises destroy intrinsic motivation Intrinsic motivation is present in children, but gradually eroded by a world that values extrinsic motivation. A nursery experiment asked children to draw a picture. One group was promised a certificate and the other wasn't. Later on, both groups were asked to draw, but no one was promised a reward. The children who were previously promised a certificate no longer wanted to draw. They had learned only to draw in exchange for a reward. 5. Get into the flow: the inner drive for perfection leads to passion and dedication The most important component of motivation 3.0 is the inner urge for perfection. People who don't feel passionate about their work will not pursue perfection in it. Creative people driven by perfection will periodically enter a flow state where they are 100% focused on their work. People who think we are born with our skills are difficult to motivate, whereas people who think they can grow and develop will be driven to improve their work. In work, if an employer give an employee a task and encourages them to improve, they will come to work every day with dedication and passion. 6. The pursuit of meaningfulness: a fundamental intrinsic impetus A group of university students were ask what motivated them. Some specified extrinsic motivations like money, and others specified intrinsic motivations like developing themselves and helping others. Years later the same group where interviewed about how things turned out. Those who specified extrinsic motivations largely suffered from depression and anxiety, despite having achieved their goals. Personal development and helping others is a far more powerful and activating motivation than money. 7. My task, my time, my team! Self-determination promotes intrinsic motivation Google allows employees to self-organise during working ours, and to spend 20% of their time working on their own ideas, which has lead to Google News and Google Mail. Meddius did away with fixed working hours, and everyone has the goal of completing their tasks on time and deciding when they do so. Zappos allows its callcentre staff to work from home with no managerial oversight and lead calls in their own style, leading to higher motivation and retention. Whole Foods allows the workers to help choose new employees. W.L. Gore and Partner require anyone who wants to leads a time to find people willing to work for them. 8. The effective company: upgrading to 3.0 -","title":"Drive   The Surprising Truth About What Motivates Us"},{"location":"Books/Drive%20-%20The%20Surprising%20Truth%20About%20What%20Motivates%20Us/Drive%20-%20The%20Surprising%20Truth%20About%20What%20Motivates%20Us/#summary-in-three-sentences","text":"Carrot and stick forms of management only work on mechanical tasks. These have been shown to be detrimental to the success of tasks that require even the slightest creative thinking. People are driven by three desires: Autonomy , to self-direct; Mastery , to acquire new skills; and Purpose , to do work that has meaning. ...","title":"Summary in three sentences"},{"location":"Books/Drive%20-%20The%20Surprising%20Truth%20About%20What%20Motivates%20Us/Drive%20-%20The%20Surprising%20Truth%20About%20What%20Motivates%20Us/#who-should-read-it","text":"","title":"Who Should Read It?"},{"location":"Books/Drive%20-%20The%20Surprising%20Truth%20About%20What%20Motivates%20Us/Drive%20-%20The%20Surprising%20Truth%20About%20What%20Motivates%20Us/#how-the-book-changed-me","text":"","title":"How the Book Changed Me"},{"location":"Books/Drive%20-%20The%20Surprising%20Truth%20About%20What%20Motivates%20Us/Drive%20-%20The%20Surprising%20Truth%20About%20What%20Motivates%20Us/#why-did-i-read-this","text":"","title":"Why did I read this?"},{"location":"Books/Drive%20-%20The%20Surprising%20Truth%20About%20What%20Motivates%20Us/Drive%20-%20The%20Surprising%20Truth%20About%20What%20Motivates%20Us/#thoughts-and-feelings","text":"","title":"Thoughts and Feelings"},{"location":"Books/Drive%20-%20The%20Surprising%20Truth%20About%20What%20Motivates%20Us/Drive%20-%20The%20Surprising%20Truth%20About%20What%20Motivates%20Us/#practical-application","text":"","title":"Practical Application"},{"location":"Books/Drive%20-%20The%20Surprising%20Truth%20About%20What%20Motivates%20Us/Drive%20-%20The%20Surprising%20Truth%20About%20What%20Motivates%20Us/#favourite-quotes","text":"... ... ...","title":"Favourite Quotes"},{"location":"Books/Drive%20-%20The%20Surprising%20Truth%20About%20What%20Motivates%20Us/Drive%20-%20The%20Surprising%20Truth%20About%20What%20Motivates%20Us/#1-motivation-10-and-motivation-20-basic-needs-and-the-stick-and-the-carrot","text":"Motivation 1.0 was the driving force behind all our actions through most of our evolution - the need to eat and reproduce. Motivation 2.0 is the primary motivation in the workplace today, where employers believe that workers will only work if rewarded or punished by management. This is extrinsic motivation , often called the carrot and the stick.","title":"1. Motivation 1.0 and motivation 2.0: basic needs and the stick and the carrot"},{"location":"Books/Drive%20-%20The%20Surprising%20Truth%20About%20What%20Motivates%20Us/Drive%20-%20The%20Surprising%20Truth%20About%20What%20Motivates%20Us/#2-there-is-another-way-motivation-30-intrinsic-motivation-in-place-of-exterior-incentives","text":"Motivation 3.0 is where the fulfillment felt by doing a job is the only reward someone needs. This is known as intrinsic motivation . Intrinsically motivated people want to choose when they work, what they work on and what they are responsible for.","title":"2. There is another way: Motivation 3.0 - intrinsic motivation in place of exterior incentives"},{"location":"Books/Drive%20-%20The%20Surprising%20Truth%20About%20What%20Motivates%20Us/Drive%20-%20The%20Surprising%20Truth%20About%20What%20Motivates%20Us/#3-missing-the-target-the-stick-and-the-carrot-can-have-harmful-consequences","text":"Carrot and stick is typically detrimental to performance is the task is more than a simple manual task. Mechanics in a garage incentivised by the number of repairs they complete go on to complete unnecessary repairs, annoying the customers and damaging the garages reputation. Experiments have found that incentivising subjects to complete a task with some sort of creative thinking impaired the subjects judgment.","title":"3. Missing the target: the stick and the carrot can have harmful consequences"},{"location":"Books/Drive%20-%20The%20Surprising%20Truth%20About%20What%20Motivates%20Us/Drive%20-%20The%20Surprising%20Truth%20About%20What%20Motivates%20Us/#4-extrinsic-promises-destroy-intrinsic-motivation","text":"Intrinsic motivation is present in children, but gradually eroded by a world that values extrinsic motivation. A nursery experiment asked children to draw a picture. One group was promised a certificate and the other wasn't. Later on, both groups were asked to draw, but no one was promised a reward. The children who were previously promised a certificate no longer wanted to draw. They had learned only to draw in exchange for a reward.","title":"4. Extrinsic promises destroy intrinsic motivation"},{"location":"Books/Drive%20-%20The%20Surprising%20Truth%20About%20What%20Motivates%20Us/Drive%20-%20The%20Surprising%20Truth%20About%20What%20Motivates%20Us/#5-get-into-the-flow-the-inner-drive-for-perfection-leads-to-passion-and-dedication","text":"The most important component of motivation 3.0 is the inner urge for perfection. People who don't feel passionate about their work will not pursue perfection in it. Creative people driven by perfection will periodically enter a flow state where they are 100% focused on their work. People who think we are born with our skills are difficult to motivate, whereas people who think they can grow and develop will be driven to improve their work. In work, if an employer give an employee a task and encourages them to improve, they will come to work every day with dedication and passion.","title":"5. Get into the flow: the inner drive for perfection leads to passion and dedication"},{"location":"Books/Drive%20-%20The%20Surprising%20Truth%20About%20What%20Motivates%20Us/Drive%20-%20The%20Surprising%20Truth%20About%20What%20Motivates%20Us/#6-the-pursuit-of-meaningfulness-a-fundamental-intrinsic-impetus","text":"A group of university students were ask what motivated them. Some specified extrinsic motivations like money, and others specified intrinsic motivations like developing themselves and helping others. Years later the same group where interviewed about how things turned out. Those who specified extrinsic motivations largely suffered from depression and anxiety, despite having achieved their goals. Personal development and helping others is a far more powerful and activating motivation than money.","title":"6. The pursuit of meaningfulness: a fundamental intrinsic impetus"},{"location":"Books/Drive%20-%20The%20Surprising%20Truth%20About%20What%20Motivates%20Us/Drive%20-%20The%20Surprising%20Truth%20About%20What%20Motivates%20Us/#7-my-task-my-time-my-team-self-determination-promotes-intrinsic-motivation","text":"Google allows employees to self-organise during working ours, and to spend 20% of their time working on their own ideas, which has lead to Google News and Google Mail. Meddius did away with fixed working hours, and everyone has the goal of completing their tasks on time and deciding when they do so. Zappos allows its callcentre staff to work from home with no managerial oversight and lead calls in their own style, leading to higher motivation and retention. Whole Foods allows the workers to help choose new employees. W.L. Gore and Partner require anyone who wants to leads a time to find people willing to work for them.","title":"7. My task, my time, my team! Self-determination promotes intrinsic motivation"},{"location":"Books/Drive%20-%20The%20Surprising%20Truth%20About%20What%20Motivates%20Us/Drive%20-%20The%20Surprising%20Truth%20About%20What%20Motivates%20Us/#8-the-effective-company-upgrading-to-30","text":"-","title":"8. The effective company: upgrading to 3.0"},{"location":"Books/Getting%20Things%20Done/1.%20A%20New%20Practice%20For%20A%20New%20Reality/","text":"If you've ever decided to tackle a problem by sitting down and writing a list of things, then you're probably familiar with the feeling of control over the situation that comes from doing so. Getting things done is about applying this practice to all aspects of your life. professional or personal, urgent or non-urgent, in order to exert control over our commitments so they don't control us. The goal is to reach a productivity state of mind similar to a concept in martial arts called \"mind like water\", where the reaction of water to a stone being dropped into it is directly proportional to the force of the impact. The water neither over nor under reacts, it reacts exactly as much as it needs to. A martial artist can learn to break a brick with their hands by utilising the speed of their punch, rather than the force behind it. This agility requires complete relaxation of the muscles, since tension will only slow the muscle. We want to achieve a state of relaxed control over the commitments in our lives. Until we write them down, they remain in our brains as what the author refers to as open loops , that is commitments that are pulling our attention away from the present because they are not where they are supposed to be, how they are supposed to be. In order to get them to where and how they are supposed to be, we must define: - what \"done\" looks like - our desired outcome - what \"doing\" looks like - the next, smallest action we can take to move towards the outcome Once we have these written down, we must enter them into a system that we will review on a regular basis, and will remind us of the outcome and action. This system must be designed in such a way as to give us both horizontal control and vertical control over our commitments. Horizontal control allows us to stay in control of all the projects and activities in which we are engaged as we move between them, and vertical control allows us to stay in control of the individual project and topic needs. Using your brain to store your commitments is problematic because there's a part of your psyche that habitually tracks all of these commitments, not as a way to be helpful but to constantly remind you it's there and you must do something about it. This causes us to constantly be in a reactive state, living only day to day and not thinking longer term. By offloading our day to day commitments to such a system, our minds are freed up to think about the larger, long term, concerns of our lives.","title":"1. A New Practice For A New Reality"},{"location":"Books/Getting%20Things%20Done/10.%20Getting%20Projects%20Under%20Control/","text":"","title":"10. Getting Projects Under Control"},{"location":"Books/Getting%20Things%20Done/11.%20The%20Power%20of%20the%20Capturing%20Habit/","text":"","title":"11. The Power of the Capturing Habit"},{"location":"Books/Getting%20Things%20Done/12.%20The%20Power%20of%20the%20Next-Action%20Decision/","text":"","title":"12. The Power of the Next Action Decision"},{"location":"Books/Getting%20Things%20Done/13.%20The%20Power%20of%20Outcome-Focusing/","text":"","title":"13. The Power of Outcome Focusing"},{"location":"Books/Getting%20Things%20Done/14.%20GTD%20and%20Cognitive%20Science/","text":"","title":"14. GTD and Cognitive Science"},{"location":"Books/Getting%20Things%20Done/15.%20The%20Path%20of%20GTD%20Mastery/","text":"","title":"15. The Path of GTD Mastery"},{"location":"Books/Getting%20Things%20Done/2.%20Getting%20Control%20of%20Your%20Life%20-%20The%20Five%20Steps%20of%20Mastering%20Workflow/","text":"In order to achieve this relaxed control over the commitments in our lives, we must: 1. capture what has our attention 2. clarify what each item means and what to do about it 3. organize the results 4. reflect on them 5. engage with them It is generally better to split these five steps out and do them at different times of the day, rather than try to do them all at once, so you can focus your mind properly. an \" incomplete \" is defined as anything in our world that is not where or how it should be an item becomes an incomplete as soon as we attach a \"should\", \"need to\" or \"ought to\" to it, because this shows decisions still need to be made on it. all incompletes needs to be captured in containers somewhere which are emptied regularly as we make decisions on what to do with them","title":"2. Getting Control of Your Life   The Five Steps of Mastering Workflow"},{"location":"Books/Getting%20Things%20Done/3.%20Getting%20Projects%20Creatively%20Under%20Way%20-%20The%20Five%20Phases%20of%20Project%20Planning/","text":"","title":"3. Getting Projects Creatively Under Way   The Five Phases of Project Planning"},{"location":"Books/Getting%20Things%20Done/4.%20Getting%20Things%20Started%20-%20Setting%20Up%20Time%2C%20Space%20and%20Tools/","text":"","title":"4. Getting Things Started   Setting Up Time, Space and Tools"},{"location":"Books/Getting%20Things%20Done/5.%20Capturing%20-%20Corralling%20Your%20%22Stuff%22/","text":"","title":"5. Capturing   Corralling Your \"Stuff\""},{"location":"Books/Getting%20Things%20Done/6.%20Clarifying%20-%20Getting%20%22In%22%20to%20Empty/","text":"","title":"6. Clarifying   Getting \"In\" to Empty"},{"location":"Books/Getting%20Things%20Done/7.%20Organising%20-%20Setting%20Up%20The%20Right%20Buckets/","text":"","title":"7. Organising   Setting Up The Right Buckets"},{"location":"Books/Getting%20Things%20Done/8.%20Reflecting%20-%20Keeping%20it%20all%20Fresh%20and%20Functional/","text":"","title":"8. Reflecting   Keeping it all Fresh and Functional"},{"location":"Books/Getting%20Things%20Done/9.%20Engaging%20-%20Making%20The%20Best%20Action%20Choices/","text":"","title":"9. Engaging   Making The Best Action Choices"},{"location":"Books/Getting%20Things%20Done/Getting%20Things%20Done/","text":"Contents Part 1: The Art of Getting Things Done 1. A New Practice For A New Reality 2. Getting Control of Your Life - The Five Steps of Mastering Workflow 3. Getting Projects Creatively Under Way - The Five Phases of Project Planning Part 2: Practicing Stress-Free Productivity 4. Getting Things Started - Setting Up Time, Space and Tools 5. Capturing - Corralling Your \"Stuff\" 6. Clarifying - Getting \"In\" to Empty 7. Organising - Setting Up The Right Buckets 8. Reflecting - Keeping it all Fresh and Functional 9. Engaging - Making The Best Action Choices 10. Getting Projects Under Control Part 3: The Power of Key Principles 11. The Power of the Capturing Habit 12. The Power of the Next-Action Decision 13. The Power of Outcome-Focusing 14. GTD and Cognitive Science 15. The Path of GTD Mastery Summary in three sentences ... ... ... Who Should Read It? How the Book Changed Me Why did I read this? Thoughts and Feelings Practical Application Insights My Top Three Quotes Your ability to generate power is directly proportional to your ability to relax Getting things done requires two basic components: defining (1) what \"done\" means (outcome) and (2) what \"doing\" looks like (action). ...","title":"Contents"},{"location":"Books/Getting%20Things%20Done/Getting%20Things%20Done/#contents","text":"","title":"Contents"},{"location":"Books/Getting%20Things%20Done/Getting%20Things%20Done/#part-1-the-art-of-getting-things-done","text":"1. A New Practice For A New Reality 2. Getting Control of Your Life - The Five Steps of Mastering Workflow 3. Getting Projects Creatively Under Way - The Five Phases of Project Planning","title":"Part 1: The Art of Getting Things Done"},{"location":"Books/Getting%20Things%20Done/Getting%20Things%20Done/#part-2-practicing-stress-free-productivity","text":"4. Getting Things Started - Setting Up Time, Space and Tools 5. Capturing - Corralling Your \"Stuff\" 6. Clarifying - Getting \"In\" to Empty 7. Organising - Setting Up The Right Buckets 8. Reflecting - Keeping it all Fresh and Functional 9. Engaging - Making The Best Action Choices 10. Getting Projects Under Control","title":"Part 2: Practicing Stress-Free Productivity"},{"location":"Books/Getting%20Things%20Done/Getting%20Things%20Done/#part-3-the-power-of-key-principles","text":"11. The Power of the Capturing Habit 12. The Power of the Next-Action Decision 13. The Power of Outcome-Focusing 14. GTD and Cognitive Science 15. The Path of GTD Mastery","title":"Part 3: The Power of Key Principles"},{"location":"Books/Getting%20Things%20Done/Getting%20Things%20Done/#summary-in-three-sentences","text":"... ... ...","title":"Summary in three sentences"},{"location":"Books/Getting%20Things%20Done/Getting%20Things%20Done/#who-should-read-it","text":"","title":"Who Should Read It?"},{"location":"Books/Getting%20Things%20Done/Getting%20Things%20Done/#how-the-book-changed-me","text":"","title":"How the Book Changed Me"},{"location":"Books/Getting%20Things%20Done/Getting%20Things%20Done/#why-did-i-read-this","text":"","title":"Why did I read this?"},{"location":"Books/Getting%20Things%20Done/Getting%20Things%20Done/#thoughts-and-feelings","text":"","title":"Thoughts and Feelings"},{"location":"Books/Getting%20Things%20Done/Getting%20Things%20Done/#practical-application","text":"","title":"Practical Application"},{"location":"Books/Getting%20Things%20Done/Getting%20Things%20Done/#insights","text":"","title":"Insights"},{"location":"Books/Getting%20Things%20Done/Getting%20Things%20Done/#my-top-three-quotes","text":"Your ability to generate power is directly proportional to your ability to relax Getting things done requires two basic components: defining (1) what \"done\" means (outcome) and (2) what \"doing\" looks like (action). ...","title":"My Top Three Quotes"},{"location":"Books/How%20To%20Win%20Friends%20And%20Influence%20People/How%20To%20Win%20Friends%20And%20Influence%20People/","text":"Contents ... Summary in three sentences ... ... ... Who Should Read It? How the Book Changed Me Why did I read this? Thoughts and Feelings Practical Application Insights My Top Three Quotes ... ... ... Summary in more than three sentences","title":"Contents"},{"location":"Books/How%20To%20Win%20Friends%20And%20Influence%20People/How%20To%20Win%20Friends%20And%20Influence%20People/#contents","text":"...","title":"Contents"},{"location":"Books/How%20To%20Win%20Friends%20And%20Influence%20People/How%20To%20Win%20Friends%20And%20Influence%20People/#summary-in-three-sentences","text":"... ... ...","title":"Summary in three sentences"},{"location":"Books/How%20To%20Win%20Friends%20And%20Influence%20People/How%20To%20Win%20Friends%20And%20Influence%20People/#who-should-read-it","text":"","title":"Who Should Read It?"},{"location":"Books/How%20To%20Win%20Friends%20And%20Influence%20People/How%20To%20Win%20Friends%20And%20Influence%20People/#how-the-book-changed-me","text":"","title":"How the Book Changed Me"},{"location":"Books/How%20To%20Win%20Friends%20And%20Influence%20People/How%20To%20Win%20Friends%20And%20Influence%20People/#why-did-i-read-this","text":"","title":"Why did I read this?"},{"location":"Books/How%20To%20Win%20Friends%20And%20Influence%20People/How%20To%20Win%20Friends%20And%20Influence%20People/#thoughts-and-feelings","text":"","title":"Thoughts and Feelings"},{"location":"Books/How%20To%20Win%20Friends%20And%20Influence%20People/How%20To%20Win%20Friends%20And%20Influence%20People/#practical-application","text":"","title":"Practical Application"},{"location":"Books/How%20To%20Win%20Friends%20And%20Influence%20People/How%20To%20Win%20Friends%20And%20Influence%20People/#insights","text":"","title":"Insights"},{"location":"Books/How%20To%20Win%20Friends%20And%20Influence%20People/How%20To%20Win%20Friends%20And%20Influence%20People/#my-top-three-quotes","text":"... ... ...","title":"My Top Three Quotes"},{"location":"Books/How%20To%20Win%20Friends%20And%20Influence%20People/How%20To%20Win%20Friends%20And%20Influence%20People/#summary-in-more-than-three-sentences","text":"","title":"Summary in more than three sentences"},{"location":"Books/How%20To%20Win%20Friends%20And%20Influence%20People/Part%201%20-%20Fundamental%20Techniques%20In%20Handling%20People/","text":"Chapter 1: If You Want To Gather Honey, Don't Kick Over The Beehive","title":"Chapter 1: If You Want To Gather Honey, Don't Kick Over The Beehive"},{"location":"Books/How%20To%20Win%20Friends%20And%20Influence%20People/Part%201%20-%20Fundamental%20Techniques%20In%20Handling%20People/#chapter-1-if-you-want-to-gather-honey-dont-kick-over-the-beehive","text":"","title":"Chapter 1: If You Want To Gather Honey, Don't Kick Over The Beehive"},{"location":"Books/Ikigai%20-%20The%20Japanese%20Secret%20to%20a%20Long%20and%20Happy%20Life/Ikigai%20-%20The%20Japanese%20Secret%20to%20a%20Long%20and%20Happy%20Life/","text":"Summary in three sentences ... ... ... Who Should Read It? How the Book Changed Me Why did I read this? Thoughts and Feelings Practical Application My Top Three Quotes ... ... ... 1. Ikigai: The art of staying young while growing old What Is Your Reason For Being? According to the Japanese, everyone has an Ikigai, a reason for being. You might not know yours yet, but it's in there and you just need the patience to discover it. Whatever you do, don't retire The idea of retirement simply doesn't exist in Japan, at least not as we understand it in the West. People keep doing what they love for as long as their health allows them. The island of (almost) eternal youth The five blue zones Five blue zones identified by Dan Buettner in his book The Blue Zones - Okinawa, Japan - Sardinia, Italy - Loma Linda, California - The Nicoya Peninsula, Costa Rica - Ikaria, Greece According to scientists who have studied the blue zones, the keys factors to longevity are - diet - exercise - finding a purpose in live - forming strong social ties The 80 percent secret Hara hachi bu is a Japanese say that roughly translates to \"eat until you are 80 percent full\". In Japan, food is usually served on small plates, resulting i eating less. Japanese people typically consume between 1800-1900 calories per day, compared to the average 2200-3300 in the west. The Okinawan diet is ricj in tofu, sweet potatoes fish and vegetables. Moai : Connected for life A moai is an informal group of individuals who share common interests and look out for one another. People pay a financial contribution to the group for membership and attendance at the groups events. The funds are used for the groups activities, and the surplus is given to individual members on a rotating basis, helping ensure financial wellbeing for the groups members. 2. Antiaging secrets: Little things that add up to a long and happy life Mental exercise is just as important for health as physical exercise. Keeping the brain active throughout your life keeps new neural pathways being developed, and thus keeps the brain active. Stress: Accused of killing longevity High levels of prolonged stress are bad for us in the long term, shortening our life and generally making us less happy and pleasant day-to-day. Stress, however, isn't an inherintly bad thing. The problem is the sort of stress that causes us to be in a perpetual state of reacting to danger, the fight or flight response. A good form of stress is the low-level stress that comes from being challanged by work you are enjoying. Ways to reduce stress Walk to work, or just go for a walk for at least 20 minutes each day Use your feet instead of an elevator or escalator good for posture, muscales and respiratory system Participate in social or leisure activities so you don't spend too much time in front of the TV Replace your junk food with fruit you'll have less of an urge to snack, and more nutrients in your system Get the right amount of sleep Seven to nine hours is good, but any more than that makes us lethergic Play with children or pets, or join a sports team this not only strengthens your body but also stimulates the mind and boost self-esteem. Be conscious of your daily routine in order to detect harmful habits and repace them with more positive ones Anti-aging attitude Research has found that having a positive attitude and a high degree of emotional awareness correlates with a longer, happier life. Those who face challenges with a positive outlook and are able to manage their emotions are already well on their way to longevity. A stoic attitude (serenity in the face of setback) can also help keep you young as it lowers anxiety and stress levels. 3. From Logotherapy To Ikigai: How to live longer and better by finding your purpose One of the first questions Viktor Frankl would has his patients was \"why do you not commit suicide?\". The patient would usually be able to find a number of reasons to live. The process of logotherapy can be summarized in these five steps: 1. A person feels empty, frustrated or anxious. 2. The therapist shows them that what they are feeling is the desire to have a meaningful life 3. The patient discovers their lifes purpose (at that particular point in time) 4. Of their own free will, the patient decides to accept or reject that destiny. 5. This newfound passion for life helps them overcome obstacles and sorrows. 5. Find Flow In Everything You Do: How To Turn Work And Free Time Into Spaces For Growth We are what we repeatedly do. Excellence, then, is not an act but a habit. -- Aristotle","title":"Ikigai   The Japanese Secret to a Long and Happy Life"},{"location":"Books/Ikigai%20-%20The%20Japanese%20Secret%20to%20a%20Long%20and%20Happy%20Life/Ikigai%20-%20The%20Japanese%20Secret%20to%20a%20Long%20and%20Happy%20Life/#summary-in-three-sentences","text":"... ... ...","title":"Summary in three sentences"},{"location":"Books/Ikigai%20-%20The%20Japanese%20Secret%20to%20a%20Long%20and%20Happy%20Life/Ikigai%20-%20The%20Japanese%20Secret%20to%20a%20Long%20and%20Happy%20Life/#who-should-read-it","text":"","title":"Who Should Read It?"},{"location":"Books/Ikigai%20-%20The%20Japanese%20Secret%20to%20a%20Long%20and%20Happy%20Life/Ikigai%20-%20The%20Japanese%20Secret%20to%20a%20Long%20and%20Happy%20Life/#how-the-book-changed-me","text":"","title":"How the Book Changed Me"},{"location":"Books/Ikigai%20-%20The%20Japanese%20Secret%20to%20a%20Long%20and%20Happy%20Life/Ikigai%20-%20The%20Japanese%20Secret%20to%20a%20Long%20and%20Happy%20Life/#why-did-i-read-this","text":"","title":"Why did I read this?"},{"location":"Books/Ikigai%20-%20The%20Japanese%20Secret%20to%20a%20Long%20and%20Happy%20Life/Ikigai%20-%20The%20Japanese%20Secret%20to%20a%20Long%20and%20Happy%20Life/#thoughts-and-feelings","text":"","title":"Thoughts and Feelings"},{"location":"Books/Ikigai%20-%20The%20Japanese%20Secret%20to%20a%20Long%20and%20Happy%20Life/Ikigai%20-%20The%20Japanese%20Secret%20to%20a%20Long%20and%20Happy%20Life/#practical-application","text":"","title":"Practical Application"},{"location":"Books/Ikigai%20-%20The%20Japanese%20Secret%20to%20a%20Long%20and%20Happy%20Life/Ikigai%20-%20The%20Japanese%20Secret%20to%20a%20Long%20and%20Happy%20Life/#my-top-three-quotes","text":"... ... ...","title":"My Top Three Quotes"},{"location":"Books/Ikigai%20-%20The%20Japanese%20Secret%20to%20a%20Long%20and%20Happy%20Life/Ikigai%20-%20The%20Japanese%20Secret%20to%20a%20Long%20and%20Happy%20Life/#1-ikigai-the-art-of-staying-young-while-growing-old","text":"","title":"1. Ikigai: The art of staying young while growing old"},{"location":"Books/Ikigai%20-%20The%20Japanese%20Secret%20to%20a%20Long%20and%20Happy%20Life/Ikigai%20-%20The%20Japanese%20Secret%20to%20a%20Long%20and%20Happy%20Life/#what-is-your-reason-for-being","text":"According to the Japanese, everyone has an Ikigai, a reason for being. You might not know yours yet, but it's in there and you just need the patience to discover it.","title":"What Is Your Reason For Being?"},{"location":"Books/Ikigai%20-%20The%20Japanese%20Secret%20to%20a%20Long%20and%20Happy%20Life/Ikigai%20-%20The%20Japanese%20Secret%20to%20a%20Long%20and%20Happy%20Life/#whatever-you-do-dont-retire","text":"The idea of retirement simply doesn't exist in Japan, at least not as we understand it in the West. People keep doing what they love for as long as their health allows them.","title":"Whatever you do, don't retire"},{"location":"Books/Ikigai%20-%20The%20Japanese%20Secret%20to%20a%20Long%20and%20Happy%20Life/Ikigai%20-%20The%20Japanese%20Secret%20to%20a%20Long%20and%20Happy%20Life/#the-island-of-almost-eternal-youth","text":"","title":"The island of (almost) eternal youth"},{"location":"Books/Ikigai%20-%20The%20Japanese%20Secret%20to%20a%20Long%20and%20Happy%20Life/Ikigai%20-%20The%20Japanese%20Secret%20to%20a%20Long%20and%20Happy%20Life/#the-five-blue-zones","text":"Five blue zones identified by Dan Buettner in his book The Blue Zones - Okinawa, Japan - Sardinia, Italy - Loma Linda, California - The Nicoya Peninsula, Costa Rica - Ikaria, Greece According to scientists who have studied the blue zones, the keys factors to longevity are - diet - exercise - finding a purpose in live - forming strong social ties","title":"The five blue zones"},{"location":"Books/Ikigai%20-%20The%20Japanese%20Secret%20to%20a%20Long%20and%20Happy%20Life/Ikigai%20-%20The%20Japanese%20Secret%20to%20a%20Long%20and%20Happy%20Life/#the-80-percent-secret","text":"Hara hachi bu is a Japanese say that roughly translates to \"eat until you are 80 percent full\". In Japan, food is usually served on small plates, resulting i eating less. Japanese people typically consume between 1800-1900 calories per day, compared to the average 2200-3300 in the west. The Okinawan diet is ricj in tofu, sweet potatoes fish and vegetables.","title":"The 80 percent secret"},{"location":"Books/Ikigai%20-%20The%20Japanese%20Secret%20to%20a%20Long%20and%20Happy%20Life/Ikigai%20-%20The%20Japanese%20Secret%20to%20a%20Long%20and%20Happy%20Life/#moai-connected-for-life","text":"A moai is an informal group of individuals who share common interests and look out for one another. People pay a financial contribution to the group for membership and attendance at the groups events. The funds are used for the groups activities, and the surplus is given to individual members on a rotating basis, helping ensure financial wellbeing for the groups members.","title":"Moai: Connected for life"},{"location":"Books/Ikigai%20-%20The%20Japanese%20Secret%20to%20a%20Long%20and%20Happy%20Life/Ikigai%20-%20The%20Japanese%20Secret%20to%20a%20Long%20and%20Happy%20Life/#2-antiaging-secrets-little-things-that-add-up-to-a-long-and-happy-life","text":"Mental exercise is just as important for health as physical exercise. Keeping the brain active throughout your life keeps new neural pathways being developed, and thus keeps the brain active.","title":"2. Antiaging secrets: Little things that add up to a long and happy life"},{"location":"Books/Ikigai%20-%20The%20Japanese%20Secret%20to%20a%20Long%20and%20Happy%20Life/Ikigai%20-%20The%20Japanese%20Secret%20to%20a%20Long%20and%20Happy%20Life/#stress-accused-of-killing-longevity","text":"High levels of prolonged stress are bad for us in the long term, shortening our life and generally making us less happy and pleasant day-to-day. Stress, however, isn't an inherintly bad thing. The problem is the sort of stress that causes us to be in a perpetual state of reacting to danger, the fight or flight response. A good form of stress is the low-level stress that comes from being challanged by work you are enjoying.","title":"Stress: Accused of killing longevity"},{"location":"Books/Ikigai%20-%20The%20Japanese%20Secret%20to%20a%20Long%20and%20Happy%20Life/Ikigai%20-%20The%20Japanese%20Secret%20to%20a%20Long%20and%20Happy%20Life/#ways-to-reduce-stress","text":"Walk to work, or just go for a walk for at least 20 minutes each day Use your feet instead of an elevator or escalator good for posture, muscales and respiratory system Participate in social or leisure activities so you don't spend too much time in front of the TV Replace your junk food with fruit you'll have less of an urge to snack, and more nutrients in your system Get the right amount of sleep Seven to nine hours is good, but any more than that makes us lethergic Play with children or pets, or join a sports team this not only strengthens your body but also stimulates the mind and boost self-esteem. Be conscious of your daily routine in order to detect harmful habits and repace them with more positive ones","title":"Ways to reduce stress"},{"location":"Books/Ikigai%20-%20The%20Japanese%20Secret%20to%20a%20Long%20and%20Happy%20Life/Ikigai%20-%20The%20Japanese%20Secret%20to%20a%20Long%20and%20Happy%20Life/#anti-aging-attitude","text":"Research has found that having a positive attitude and a high degree of emotional awareness correlates with a longer, happier life. Those who face challenges with a positive outlook and are able to manage their emotions are already well on their way to longevity. A stoic attitude (serenity in the face of setback) can also help keep you young as it lowers anxiety and stress levels.","title":"Anti-aging attitude"},{"location":"Books/Ikigai%20-%20The%20Japanese%20Secret%20to%20a%20Long%20and%20Happy%20Life/Ikigai%20-%20The%20Japanese%20Secret%20to%20a%20Long%20and%20Happy%20Life/#3-from-logotherapy-to-ikigai-how-to-live-longer-and-better-by-finding-your-purpose","text":"One of the first questions Viktor Frankl would has his patients was \"why do you not commit suicide?\". The patient would usually be able to find a number of reasons to live. The process of logotherapy can be summarized in these five steps: 1. A person feels empty, frustrated or anxious. 2. The therapist shows them that what they are feeling is the desire to have a meaningful life 3. The patient discovers their lifes purpose (at that particular point in time) 4. Of their own free will, the patient decides to accept or reject that destiny. 5. This newfound passion for life helps them overcome obstacles and sorrows.","title":"3. From Logotherapy To Ikigai: How to live longer and better by finding your purpose"},{"location":"Books/Ikigai%20-%20The%20Japanese%20Secret%20to%20a%20Long%20and%20Happy%20Life/Ikigai%20-%20The%20Japanese%20Secret%20to%20a%20Long%20and%20Happy%20Life/#5-find-flow-in-everything-you-do-how-to-turn-work-and-free-time-into-spaces-for-growth","text":"We are what we repeatedly do. Excellence, then, is not an act but a habit. -- Aristotle","title":"5. Find Flow In Everything You Do: How To Turn Work And Free Time Into Spaces For Growth"},{"location":"Books/Show%20Your%20Work/Show%20Your%20Work/","text":"0. A New Way of Operating Creativity is not a talent. It is a way of operating -- John Cleese While it's true that you don't find your audience, that they instead find you, it's also true that you have to be finable by the audience. This book is about making yourself findable. 1. You Don't Have To Be A Genius Find a Scenius Give what you have. To someone, it may be better than you dare think. -- Henry Wadsworth Longfellow Creativity doesn't happen in a vacuum from a lone individual secluded away in their studio, it instead comes from a scene of people learning from each other. It's not an antisocial act, like the myth of the lone creative genius, rather it's a very social act. Being a valuable member of the scenius isn't about what you derive from it, rather it's about what you contribute to it, the connections you make and the conversations you start. Everyone, including the amateur on their first day, has the ability to contribute something. Be an Amateur That's all any of us are: amateurs. We don't live long enough to be anything else. -- Charlie Chaplin Being an amateur means you are free to make mistakes because you have nothing to lose. You do something because you love it, and when you share that you are also sharing your love, which people will pick up on. Join a scenius, contribute to it, and see what other people are sharing. Take note of what people aren't sharing that you might be able to. You Can't Find Your Voice If You Don't Use It Find your voice, shout it from the rooftops, and keep going it until the people that are looking for you find you. -- Dan Harmon Read Obituaries Remembering that I'll be dead soon is the most important tool I've ever encountered to help me make the big choices in life. Because almost everything - all external expectations, all price, all fear of embarassment or failure - these things just fall away in the face of death, leaving only what is truely important. Remembering that you are going to die is the best wya I know to avoid the trap of thinking you have something to lose. You are already naked. -- Steve Jobs 2. Think Process, Not Product Take People Behind The Scenes A lot of people are so used to just seeing the outcome of work. They mever see the side of the work you go through to produce the outcome. -- Michael Jackson Don't just share the end result, but the process of getting there. It give your audience a way of connecting with you, since they see you struggling along and can connect with that on a human level. It gives the audience the chance to be a part of the creative process along with the artist. Become a Documentarian of What You Do In order for connection to happen, we have to allow ourselves to be seen - really seen -- Brene Brown Keep a journal of your work. Take photos or videos of your work at various stages of completion. This isn't about making art. It's about keeping track of what's going on around you. When you're ready to share something, you'll have a surplus of material to choose from. 3. Share Something Small Everyday Send Out A Daily Dispatch Put yourself, and your work, out there every day, and you'll start meeting some aamzing people. -- Bobby Solomon One day at a time. It sounds so simple. It actually is simple but it isn't easy: It requires incredible suport and fastidious structuring. -- Russel Brand The \"So What?\" Test Make no mistake: This is not your diary. You are not letting it all hang out. You are picking and chosing every single word -- Dani Shapiro When you share something, ask yourself \"is this helpful? is this entertaining?\" Turn Your Flow Into Stock If you work on something a little bit every day, you end up with something that is massive -- Kenneth Goldsmith Your flow is the steady stream of updates that remind people you exist, and stock is the larger work you produce. You want to keep your flow going while working on your stock in the background. Looking back over your flow can be good for creating your stock. Social media is a good place to share ideas and get feedback from people. Over time, you might see themes emerge in your flow that can be taken and turned into stock. Build A Good (Domain) Name Carving out a space for yourself online, somewhere where you can express yourself and share your work, is still one of the best possible investments you can make with your time. -- Andy Baio Social networks come and go so it's important to have your own personal space on the internet. Buy a domain name and set up a blog/website there. This will be your home on the interent regardless of what social networks are popular. 4. Open Up Yout Cabinet of Curiosities Don't Be A Hoarder The problem with hoarding is you end up living off your reserves. Eventually, you'll become stale. If you give away everything you have, you are left with nothing. This forces you to look, to be aware, to replenish... Somehow the more you give away, the more comes back to you. -- Paul Arden A cabinet of curiosities is a collection of objects that reflect your taste. While your work might not be good in the beginning, you can share your taste with the world. Share things that inspire you. You're only as good as your record collection -- DJ Spooky No Guilty Pleasures I don't believe in guilty pleasures. If you fucking like something, like it. -- Dave Grohl Don't feel guilty for enjoying the things other people have decided are garbage. Don't try to be hip or cool or follow trends. Being yourself is the best way to connect with people. Credit Is Always Due Do what you do best and link to the rest -- Jeff Jarvis Sharing something without attribution not only deprives the original creator of credit for their work, it deprives the people who have seen your share of being able to follow a breadcrumb and find more of that work. Always include a link someone can click. People won't bother to google a name. 5. Tell Good Stories Work Doesn't Speak For Itself To fake a photograph, all you have to do is change the caption. To fake a painting, change the attribution. -- Errol Morris People attribute value to art based on what they are told about it. If you want to be more effective in selling your work, you need to become a better story teller. The cat sat on a mast is not a story. The cat set on the dog's mat is a story. -- John le Carre Structure Everything In the first act, you get your hero up a tree. In the second act you throw rocks at him. For the third act, you let him down. -- George Abbot Talk About Yourself At Parties You got to make your case -- Kanye West By day I work in IT and by night I... Have empathy for your audience. Anticipate blank stares and more questions. Drop all the adjectives from your bio (you're not an aspiring photographer, you're a photographer) and never describe yourself as a rockstar, ninja or guru unless you physically are one Whatever we say, we're always talking about ourselves. -- Alison Bechdel 6. Teach What You Know Share Your Trade Secrets The impulse to keep to yourself what you have leadned is not only shameful, it is destructive. Anything you do not give freely and abundantly becomes lost to you. You open your safe and find ashes. -- Annie Dillard Teaching doesn't mean instance competition. Just because you know the masters technique doesn't mean you'll be able to emulate it right away. 7. Don't Turn Into Human Spam Shut Up And Listen When people realise they're being listened to, they tell you things. -- Richard Ford You don't get anywhere in creative work without paying your dues to the scene. To be a successful writer, you must first be a reader of other work you emulate. You must be a good citizen of your scene by contributing to it. You must interact with your fans at the level of being a fan. If you want to be noticed, you must first notice. You Want Hearts, Not Eyeballs What you want is to follow and be followed by human beings who care about issues you care about. This thing we make together. This things is about hearts and minds, not eyeballs. -- Jeffrey Zeldman Focus on the quality of the people following you, not the quantity. Do this by being more of an interesting person by \"being curisous, attentive and being interested\". If you want to be interesting, you have to first be interested. Don't try to make connections. Instead, focus on doing good work and the connections will be a natural offshoot of that. \"Follow me back?\" is the saddest question on the internet. The Vampire Test Whatever excites you, go do it. Whatever drains you, stop doing it. -- Derek Sivers Identify Your Fellow Knuckleballers Part of the act of creating is in discovering your own kind. They are everywhere. But don't look for them in the wrong places. -- Henry Miller When you find the few people who are your true peers, with the same interests and mission as you, keep them close, Sing their praises, invite them to collaborate, show them work before anyone else. It's all about paying attention. Attention is vitality. It connects you with others. -- Susan Sontag Meet Up In Meatspace You and I will be around a lot longer than Twitter, and nothing substitues face to face -- Rob Delaney 8. Learn To Take A Punch Let 'Em Take Their Best Shot I ain't going to give up. Every time you think I'm one place, I'm going to show up someplace else. I came pre-hated. Take your best shot. -- Cyndi Lauper When you take a punch: - Relax and beathe - Strengthen your neck (practice getting hit a lot) - Roll with the punches - Protect your vulnerable areas - keep any work that is too sensitive to criticism private, but don't overdo it. Compulsive avoidance of embaracement is a form of suicide. - Keep yout balance - your work is something you do, not something you are. Don't make it too personal. Don't Feed The Trolls The trick is not caring what EVERYBODY think of you and just caring about what the RIGHT people think of you -- Brian Michael Bendis If someone took a dump in your livingroom, you wouldn't let it sit there. Be wary of trolls who are making the same noises as your insecurities. Other trolls re easy to dismiss but when they hit close to home, it's easier for them to get inside your mental firewall. You don't have to have comments on all your work. There's no comment section under a painting in an art gallery or at the end of a book. 9. Sell Out Even The Renaissance Had To Be Funded Sellout...I'm not crazy about the word. We're all entrepreneurs. To me, I don't care if you own a furniture store or whatever - the best sign you can put up is sold out. -- Bill Withers An amateur is an artist who supports himself with outside jobs which enable him to paint. A professional is someone whose wife works to enable him to paint. -- Ben Shahn I'd love to sell out completely. It's just that nobody has been willing to buy. -- John Waters Keep A Mailing List Even if you don't have something to sell, collect email addresses of your fans. When you do eventually ahve something to sell, you'll have a base of followers who are so into your work that they signed up to be potentially spamed by you. Don't abuse that trust - make sure they know what they were getting into and maintain that expectation. Make More Work For Yourself We don't make movies to make money, we make money to make more movies. -- Walt Disney Be ambitious and try new things. If an opportunity comes along that allows you to make more of the work you enjoy, then take it. There is no misery in art. All art is about saying yes, and all art is about its own making. -- John Currin Pay It Forward Above all, recognise that if you have had success, you have also had luck - and with luck comes obligation. You owe a bedt, and not just to your gods. You owe a debt to the unlucky -- Michael Lewis 10. Stick Around Don't Quit Your Own Show Work is never finished, only abandoned -- Paul Valery Chain-Smoke Your last book doesn't write your next one. A successful or failed project is no indicator of whether the next one will be a success or failure. Whether you just one big or just big, you always have to face the question \"what next?\" Avoid stalling in your career by keeping the momentum going. We work because it's a chain reaction, each subject leads to the next. -- Charles Eames Go Away So You Can Come Back The minute you stop wanting something you get it -- Andy Warhol Taking a sabatical is a good way to recharge the inspiration, but it's not practical for all of us, so there are lots of ways we can take little sabaticals in our daily lives: commute exercise nature Begin Again Whenever Picasso learned how to do something, he abaondoned it -- Milton Glaser Sometimes you need to throw away your work and start again as an amateur. You will be starting over but with the lessons you've learned from your previous work.","title":"Show Your Work"},{"location":"Books/Show%20Your%20Work/Show%20Your%20Work/#0-a-new-way-of-operating","text":"Creativity is not a talent. It is a way of operating -- John Cleese While it's true that you don't find your audience, that they instead find you, it's also true that you have to be finable by the audience. This book is about making yourself findable.","title":"0. A New Way of Operating"},{"location":"Books/Show%20Your%20Work/Show%20Your%20Work/#1-you-dont-have-to-be-a-genius","text":"","title":"1. You Don't Have To Be A Genius"},{"location":"Books/Show%20Your%20Work/Show%20Your%20Work/#find-a-scenius","text":"Give what you have. To someone, it may be better than you dare think. -- Henry Wadsworth Longfellow Creativity doesn't happen in a vacuum from a lone individual secluded away in their studio, it instead comes from a scene of people learning from each other. It's not an antisocial act, like the myth of the lone creative genius, rather it's a very social act. Being a valuable member of the scenius isn't about what you derive from it, rather it's about what you contribute to it, the connections you make and the conversations you start. Everyone, including the amateur on their first day, has the ability to contribute something.","title":"Find a Scenius"},{"location":"Books/Show%20Your%20Work/Show%20Your%20Work/#be-an-amateur","text":"That's all any of us are: amateurs. We don't live long enough to be anything else. -- Charlie Chaplin Being an amateur means you are free to make mistakes because you have nothing to lose. You do something because you love it, and when you share that you are also sharing your love, which people will pick up on. Join a scenius, contribute to it, and see what other people are sharing. Take note of what people aren't sharing that you might be able to.","title":"Be an Amateur"},{"location":"Books/Show%20Your%20Work/Show%20Your%20Work/#you-cant-find-your-voice-if-you-dont-use-it","text":"Find your voice, shout it from the rooftops, and keep going it until the people that are looking for you find you. -- Dan Harmon","title":"You Can't Find Your Voice If You Don't Use It"},{"location":"Books/Show%20Your%20Work/Show%20Your%20Work/#read-obituaries","text":"Remembering that I'll be dead soon is the most important tool I've ever encountered to help me make the big choices in life. Because almost everything - all external expectations, all price, all fear of embarassment or failure - these things just fall away in the face of death, leaving only what is truely important. Remembering that you are going to die is the best wya I know to avoid the trap of thinking you have something to lose. You are already naked. -- Steve Jobs","title":"Read Obituaries"},{"location":"Books/Show%20Your%20Work/Show%20Your%20Work/#2-think-process-not-product","text":"","title":"2. Think Process, Not Product"},{"location":"Books/Show%20Your%20Work/Show%20Your%20Work/#take-people-behind-the-scenes","text":"A lot of people are so used to just seeing the outcome of work. They mever see the side of the work you go through to produce the outcome. -- Michael Jackson Don't just share the end result, but the process of getting there. It give your audience a way of connecting with you, since they see you struggling along and can connect with that on a human level. It gives the audience the chance to be a part of the creative process along with the artist.","title":"Take People Behind The Scenes"},{"location":"Books/Show%20Your%20Work/Show%20Your%20Work/#become-a-documentarian-of-what-you-do","text":"In order for connection to happen, we have to allow ourselves to be seen - really seen -- Brene Brown Keep a journal of your work. Take photos or videos of your work at various stages of completion. This isn't about making art. It's about keeping track of what's going on around you. When you're ready to share something, you'll have a surplus of material to choose from.","title":"Become a Documentarian of What You Do"},{"location":"Books/Show%20Your%20Work/Show%20Your%20Work/#3-share-something-small-everyday","text":"","title":"3. Share Something Small Everyday"},{"location":"Books/Show%20Your%20Work/Show%20Your%20Work/#send-out-a-daily-dispatch","text":"Put yourself, and your work, out there every day, and you'll start meeting some aamzing people. -- Bobby Solomon One day at a time. It sounds so simple. It actually is simple but it isn't easy: It requires incredible suport and fastidious structuring. -- Russel Brand","title":"Send Out A Daily Dispatch"},{"location":"Books/Show%20Your%20Work/Show%20Your%20Work/#the-so-what-test","text":"Make no mistake: This is not your diary. You are not letting it all hang out. You are picking and chosing every single word -- Dani Shapiro When you share something, ask yourself \"is this helpful? is this entertaining?\"","title":"The \"So What?\" Test"},{"location":"Books/Show%20Your%20Work/Show%20Your%20Work/#turn-your-flow-into-stock","text":"If you work on something a little bit every day, you end up with something that is massive -- Kenneth Goldsmith Your flow is the steady stream of updates that remind people you exist, and stock is the larger work you produce. You want to keep your flow going while working on your stock in the background. Looking back over your flow can be good for creating your stock. Social media is a good place to share ideas and get feedback from people. Over time, you might see themes emerge in your flow that can be taken and turned into stock.","title":"Turn Your Flow Into Stock"},{"location":"Books/Show%20Your%20Work/Show%20Your%20Work/#build-a-good-domain-name","text":"Carving out a space for yourself online, somewhere where you can express yourself and share your work, is still one of the best possible investments you can make with your time. -- Andy Baio Social networks come and go so it's important to have your own personal space on the internet. Buy a domain name and set up a blog/website there. This will be your home on the interent regardless of what social networks are popular.","title":"Build A Good (Domain) Name"},{"location":"Books/Show%20Your%20Work/Show%20Your%20Work/#4-open-up-yout-cabinet-of-curiosities","text":"","title":"4. Open Up Yout Cabinet of Curiosities"},{"location":"Books/Show%20Your%20Work/Show%20Your%20Work/#dont-be-a-hoarder","text":"The problem with hoarding is you end up living off your reserves. Eventually, you'll become stale. If you give away everything you have, you are left with nothing. This forces you to look, to be aware, to replenish... Somehow the more you give away, the more comes back to you. -- Paul Arden A cabinet of curiosities is a collection of objects that reflect your taste. While your work might not be good in the beginning, you can share your taste with the world. Share things that inspire you. You're only as good as your record collection -- DJ Spooky","title":"Don't Be A Hoarder"},{"location":"Books/Show%20Your%20Work/Show%20Your%20Work/#no-guilty-pleasures","text":"I don't believe in guilty pleasures. If you fucking like something, like it. -- Dave Grohl Don't feel guilty for enjoying the things other people have decided are garbage. Don't try to be hip or cool or follow trends. Being yourself is the best way to connect with people.","title":"No Guilty Pleasures"},{"location":"Books/Show%20Your%20Work/Show%20Your%20Work/#credit-is-always-due","text":"Do what you do best and link to the rest -- Jeff Jarvis Sharing something without attribution not only deprives the original creator of credit for their work, it deprives the people who have seen your share of being able to follow a breadcrumb and find more of that work. Always include a link someone can click. People won't bother to google a name.","title":"Credit Is Always Due"},{"location":"Books/Show%20Your%20Work/Show%20Your%20Work/#5-tell-good-stories","text":"","title":"5. Tell Good Stories"},{"location":"Books/Show%20Your%20Work/Show%20Your%20Work/#work-doesnt-speak-for-itself","text":"To fake a photograph, all you have to do is change the caption. To fake a painting, change the attribution. -- Errol Morris People attribute value to art based on what they are told about it. If you want to be more effective in selling your work, you need to become a better story teller. The cat sat on a mast is not a story. The cat set on the dog's mat is a story. -- John le Carre","title":"Work Doesn't Speak For Itself"},{"location":"Books/Show%20Your%20Work/Show%20Your%20Work/#structure-everything","text":"In the first act, you get your hero up a tree. In the second act you throw rocks at him. For the third act, you let him down. -- George Abbot","title":"Structure Everything"},{"location":"Books/Show%20Your%20Work/Show%20Your%20Work/#talk-about-yourself-at-parties","text":"You got to make your case -- Kanye West By day I work in IT and by night I... Have empathy for your audience. Anticipate blank stares and more questions. Drop all the adjectives from your bio (you're not an aspiring photographer, you're a photographer) and never describe yourself as a rockstar, ninja or guru unless you physically are one Whatever we say, we're always talking about ourselves. -- Alison Bechdel","title":"Talk About Yourself At Parties"},{"location":"Books/Show%20Your%20Work/Show%20Your%20Work/#6-teach-what-you-know","text":"","title":"6. Teach What You Know"},{"location":"Books/Show%20Your%20Work/Show%20Your%20Work/#share-your-trade-secrets","text":"The impulse to keep to yourself what you have leadned is not only shameful, it is destructive. Anything you do not give freely and abundantly becomes lost to you. You open your safe and find ashes. -- Annie Dillard Teaching doesn't mean instance competition. Just because you know the masters technique doesn't mean you'll be able to emulate it right away.","title":"Share Your Trade Secrets"},{"location":"Books/Show%20Your%20Work/Show%20Your%20Work/#7-dont-turn-into-human-spam","text":"","title":"7. Don't Turn Into Human Spam"},{"location":"Books/Show%20Your%20Work/Show%20Your%20Work/#shut-up-and-listen","text":"When people realise they're being listened to, they tell you things. -- Richard Ford You don't get anywhere in creative work without paying your dues to the scene. To be a successful writer, you must first be a reader of other work you emulate. You must be a good citizen of your scene by contributing to it. You must interact with your fans at the level of being a fan. If you want to be noticed, you must first notice.","title":"Shut Up And Listen"},{"location":"Books/Show%20Your%20Work/Show%20Your%20Work/#you-want-hearts-not-eyeballs","text":"What you want is to follow and be followed by human beings who care about issues you care about. This thing we make together. This things is about hearts and minds, not eyeballs. -- Jeffrey Zeldman Focus on the quality of the people following you, not the quantity. Do this by being more of an interesting person by \"being curisous, attentive and being interested\". If you want to be interesting, you have to first be interested. Don't try to make connections. Instead, focus on doing good work and the connections will be a natural offshoot of that. \"Follow me back?\" is the saddest question on the internet.","title":"You Want Hearts, Not Eyeballs"},{"location":"Books/Show%20Your%20Work/Show%20Your%20Work/#the-vampire-test","text":"Whatever excites you, go do it. Whatever drains you, stop doing it. -- Derek Sivers","title":"The Vampire Test"},{"location":"Books/Show%20Your%20Work/Show%20Your%20Work/#identify-your-fellow-knuckleballers","text":"Part of the act of creating is in discovering your own kind. They are everywhere. But don't look for them in the wrong places. -- Henry Miller When you find the few people who are your true peers, with the same interests and mission as you, keep them close, Sing their praises, invite them to collaborate, show them work before anyone else. It's all about paying attention. Attention is vitality. It connects you with others. -- Susan Sontag","title":"Identify Your Fellow Knuckleballers"},{"location":"Books/Show%20Your%20Work/Show%20Your%20Work/#meet-up-in-meatspace","text":"You and I will be around a lot longer than Twitter, and nothing substitues face to face -- Rob Delaney","title":"Meet Up In Meatspace"},{"location":"Books/Show%20Your%20Work/Show%20Your%20Work/#8-learn-to-take-a-punch","text":"","title":"8. Learn To Take A Punch"},{"location":"Books/Show%20Your%20Work/Show%20Your%20Work/#let-em-take-their-best-shot","text":"I ain't going to give up. Every time you think I'm one place, I'm going to show up someplace else. I came pre-hated. Take your best shot. -- Cyndi Lauper When you take a punch: - Relax and beathe - Strengthen your neck (practice getting hit a lot) - Roll with the punches - Protect your vulnerable areas - keep any work that is too sensitive to criticism private, but don't overdo it. Compulsive avoidance of embaracement is a form of suicide. - Keep yout balance - your work is something you do, not something you are. Don't make it too personal.","title":"Let 'Em Take Their Best Shot"},{"location":"Books/Show%20Your%20Work/Show%20Your%20Work/#dont-feed-the-trolls","text":"The trick is not caring what EVERYBODY think of you and just caring about what the RIGHT people think of you -- Brian Michael Bendis If someone took a dump in your livingroom, you wouldn't let it sit there. Be wary of trolls who are making the same noises as your insecurities. Other trolls re easy to dismiss but when they hit close to home, it's easier for them to get inside your mental firewall. You don't have to have comments on all your work. There's no comment section under a painting in an art gallery or at the end of a book.","title":"Don't Feed The Trolls"},{"location":"Books/Show%20Your%20Work/Show%20Your%20Work/#9-sell-out","text":"","title":"9. Sell Out"},{"location":"Books/Show%20Your%20Work/Show%20Your%20Work/#even-the-renaissance-had-to-be-funded","text":"Sellout...I'm not crazy about the word. We're all entrepreneurs. To me, I don't care if you own a furniture store or whatever - the best sign you can put up is sold out. -- Bill Withers An amateur is an artist who supports himself with outside jobs which enable him to paint. A professional is someone whose wife works to enable him to paint. -- Ben Shahn I'd love to sell out completely. It's just that nobody has been willing to buy. -- John Waters","title":"Even The Renaissance Had To Be Funded"},{"location":"Books/Show%20Your%20Work/Show%20Your%20Work/#keep-a-mailing-list","text":"Even if you don't have something to sell, collect email addresses of your fans. When you do eventually ahve something to sell, you'll have a base of followers who are so into your work that they signed up to be potentially spamed by you. Don't abuse that trust - make sure they know what they were getting into and maintain that expectation.","title":"Keep A Mailing List"},{"location":"Books/Show%20Your%20Work/Show%20Your%20Work/#make-more-work-for-yourself","text":"We don't make movies to make money, we make money to make more movies. -- Walt Disney Be ambitious and try new things. If an opportunity comes along that allows you to make more of the work you enjoy, then take it. There is no misery in art. All art is about saying yes, and all art is about its own making. -- John Currin","title":"Make More Work For Yourself"},{"location":"Books/Show%20Your%20Work/Show%20Your%20Work/#pay-it-forward","text":"Above all, recognise that if you have had success, you have also had luck - and with luck comes obligation. You owe a bedt, and not just to your gods. You owe a debt to the unlucky -- Michael Lewis","title":"Pay It Forward"},{"location":"Books/Show%20Your%20Work/Show%20Your%20Work/#10-stick-around","text":"","title":"10. Stick Around"},{"location":"Books/Show%20Your%20Work/Show%20Your%20Work/#dont-quit-your-own-show","text":"Work is never finished, only abandoned -- Paul Valery","title":"Don't Quit Your Own Show"},{"location":"Books/Show%20Your%20Work/Show%20Your%20Work/#chain-smoke","text":"Your last book doesn't write your next one. A successful or failed project is no indicator of whether the next one will be a success or failure. Whether you just one big or just big, you always have to face the question \"what next?\" Avoid stalling in your career by keeping the momentum going. We work because it's a chain reaction, each subject leads to the next. -- Charles Eames","title":"Chain-Smoke"},{"location":"Books/Show%20Your%20Work/Show%20Your%20Work/#go-away-so-you-can-come-back","text":"The minute you stop wanting something you get it -- Andy Warhol Taking a sabatical is a good way to recharge the inspiration, but it's not practical for all of us, so there are lots of ways we can take little sabaticals in our daily lives: commute exercise nature","title":"Go Away So You Can Come Back"},{"location":"Books/Show%20Your%20Work/Show%20Your%20Work/#begin-again","text":"Whenever Picasso learned how to do something, he abaondoned it -- Milton Glaser Sometimes you need to throw away your work and start again as an amateur. You will be starting over but with the lessons you've learned from your previous work.","title":"Begin Again"},{"location":"Books/Storyworthy/2.%20What%20Is%20A%20Story/","text":"A story is about the storyteller. It is a way for them to express their most authentic truth, to be vulnerable to the audience, and this is what people want to hear their stories. Fables and folktales might be entertaining, but they don't allow the audience to connect with the storyteller. There are a few requirements for a good story: - Change . A good story must illustrate some change in you over time, no matter how large. A story without change is an anecdote, illustrating a storyworthy event in your life that was memorable enough to talk about but left no lasting impact on you. There's nothing wrong with telling such a fable, but people won't connect with you. They are the cotton-candy of storytelling - delicious but forgettable. - Your story only . Your friend might have had a great experience that changed their life, but the audience won't connect with you if you tell that story. There's something real about hearing a story about someone sat across from you. - The Dinner Test . The story you tell on a stage in front of a professional audience should be the same one you tell over dinner to a close friend. It shouldn't sound rehearsed or over-dramatic, performancey or inauthentic The audience will think of you as a regular human being.","title":"2. What Is A Story"},{"location":"Books/Storyworthy/3.%20Homework%20For%20Life/","text":"","title":"3. Homework For Life"},{"location":"Books/Storyworthy/Storyworthy/","text":"Contents Part 1: Finding Your Story 2. What Is A Story 3. Homework For Life Summary in three sentences ... ... ... Who Should Read It? How the Book Changed Me Why did I read this? Thoughts and Feelings Practical Application Insights My Top Three Quotes ... ... ... Summary in more than three sentences","title":"Contents"},{"location":"Books/Storyworthy/Storyworthy/#contents","text":"","title":"Contents"},{"location":"Books/Storyworthy/Storyworthy/#part-1-finding-your-story","text":"2. What Is A Story 3. Homework For Life","title":"Part 1: Finding Your Story"},{"location":"Books/Storyworthy/Storyworthy/#summary-in-three-sentences","text":"... ... ...","title":"Summary in three sentences"},{"location":"Books/Storyworthy/Storyworthy/#who-should-read-it","text":"","title":"Who Should Read It?"},{"location":"Books/Storyworthy/Storyworthy/#how-the-book-changed-me","text":"","title":"How the Book Changed Me"},{"location":"Books/Storyworthy/Storyworthy/#why-did-i-read-this","text":"","title":"Why did I read this?"},{"location":"Books/Storyworthy/Storyworthy/#thoughts-and-feelings","text":"","title":"Thoughts and Feelings"},{"location":"Books/Storyworthy/Storyworthy/#practical-application","text":"","title":"Practical Application"},{"location":"Books/Storyworthy/Storyworthy/#insights","text":"","title":"Insights"},{"location":"Books/Storyworthy/Storyworthy/#my-top-three-quotes","text":"... ... ...","title":"My Top Three Quotes"},{"location":"Books/Storyworthy/Storyworthy/#summary-in-more-than-three-sentences","text":"","title":"Summary in more than three sentences"},{"location":"Books/Stumbling%20on%20Happiness/1.%20Journey%20to%20Elsewhen/","text":"","title":"1. Journey to Elsewhen"},{"location":"Books/Stumbling%20on%20Happiness/10.%20Once%20Bitten/","text":"","title":"10. Once Bitten"},{"location":"Books/Stumbling%20on%20Happiness/11.%20Reporting%20Live%20From%20Tomorrow/","text":"","title":"11. Reporting Live From Tomorrow"},{"location":"Books/Stumbling%20on%20Happiness/2.%20The%20View%20From%20In%20Here/","text":"","title":"2. The View From In Here"},{"location":"Books/Stumbling%20on%20Happiness/3.%20Outside%20Looking%20In/","text":"","title":"3. Outside Looking In"},{"location":"Books/Stumbling%20on%20Happiness/4.%20In%20The%20Blind%20Spot%20Of%20Your%20Minds%20Eye/","text":"","title":"4. In The Blind Spot Of Your Minds Eye"},{"location":"Books/Stumbling%20on%20Happiness/5.%20The%20Hound%20Of%20Silence/","text":"","title":"5. The Hound Of Silence"},{"location":"Books/Stumbling%20on%20Happiness/6.%20The%20Future%20Is%20Now/","text":"","title":"6. The Future Is Now"},{"location":"Books/Stumbling%20on%20Happiness/7.%20Time%20Bombs/","text":"","title":"7. Time Bombs"},{"location":"Books/Stumbling%20on%20Happiness/8.%20Paradise%20Glossed/","text":"","title":"8. Paradise Glossed"},{"location":"Books/Stumbling%20on%20Happiness/9.%20Immune%20To%20Reality/","text":"","title":"9. Immune To Reality"},{"location":"Books/Stumbling%20on%20Happiness/Stumbling%20on%20Happiness/","text":"Contents Part 1 - Prospection 1. Journey to Elsewhen Part 2 - Subjectivity 2. The View From In Here 3. Outside Looking In Part 3 - Realism 4. In The Blind Spot Of Your Minds Eye 5. The Hound Of Silence Part 4 - Presentism 6. The Future Is Now 7. Time Bombs Part 5 - Rationalization 8. Paradise Glossed 9. Immune To Reality Part 6 - Corrigibility 10. Once Bitten 11. Reporting Live From Tomorrow Summary in three sentences ... ... ... Who Should Read It? How the Book Changed Me Why did I read this? Thoughts and Feelings Practical Application Insights My Top Three Quotes ... ... ... Summary in more than three sentences","title":"Contents"},{"location":"Books/Stumbling%20on%20Happiness/Stumbling%20on%20Happiness/#contents","text":"","title":"Contents"},{"location":"Books/Stumbling%20on%20Happiness/Stumbling%20on%20Happiness/#part-1-prospection","text":"1. Journey to Elsewhen","title":"Part 1 - Prospection"},{"location":"Books/Stumbling%20on%20Happiness/Stumbling%20on%20Happiness/#part-2-subjectivity","text":"2. The View From In Here 3. Outside Looking In","title":"Part 2 - Subjectivity"},{"location":"Books/Stumbling%20on%20Happiness/Stumbling%20on%20Happiness/#part-3-realism","text":"4. In The Blind Spot Of Your Minds Eye 5. The Hound Of Silence","title":"Part 3 - Realism"},{"location":"Books/Stumbling%20on%20Happiness/Stumbling%20on%20Happiness/#part-4-presentism","text":"6. The Future Is Now 7. Time Bombs","title":"Part 4 - Presentism"},{"location":"Books/Stumbling%20on%20Happiness/Stumbling%20on%20Happiness/#part-5-rationalization","text":"8. Paradise Glossed 9. Immune To Reality","title":"Part 5 - Rationalization"},{"location":"Books/Stumbling%20on%20Happiness/Stumbling%20on%20Happiness/#part-6-corrigibility","text":"10. Once Bitten 11. Reporting Live From Tomorrow","title":"Part 6 - Corrigibility"},{"location":"Books/Stumbling%20on%20Happiness/Stumbling%20on%20Happiness/#summary-in-three-sentences","text":"... ... ...","title":"Summary in three sentences"},{"location":"Books/Stumbling%20on%20Happiness/Stumbling%20on%20Happiness/#who-should-read-it","text":"","title":"Who Should Read It?"},{"location":"Books/Stumbling%20on%20Happiness/Stumbling%20on%20Happiness/#how-the-book-changed-me","text":"","title":"How the Book Changed Me"},{"location":"Books/Stumbling%20on%20Happiness/Stumbling%20on%20Happiness/#why-did-i-read-this","text":"","title":"Why did I read this?"},{"location":"Books/Stumbling%20on%20Happiness/Stumbling%20on%20Happiness/#thoughts-and-feelings","text":"","title":"Thoughts and Feelings"},{"location":"Books/Stumbling%20on%20Happiness/Stumbling%20on%20Happiness/#practical-application","text":"","title":"Practical Application"},{"location":"Books/Stumbling%20on%20Happiness/Stumbling%20on%20Happiness/#insights","text":"","title":"Insights"},{"location":"Books/Stumbling%20on%20Happiness/Stumbling%20on%20Happiness/#my-top-three-quotes","text":"... ... ...","title":"My Top Three Quotes"},{"location":"Books/Stumbling%20on%20Happiness/Stumbling%20on%20Happiness/#summary-in-more-than-three-sentences","text":"","title":"Summary in more than three sentences"},{"location":"Books/Team%20Topologies/1.%20The%20Problem%20with%20Org%20Charts/","text":"An org chart does not represent the lines of communication that are present in an organization. People will reach out in all directions to others they depend on to get their work done, and bend the rules a it to achieve their goal. The hierarchy defined in a org chart doesn't lend itself to agility. Innovations like Infrastructure as Code tools can reduce the deployment time of new systems from months to minutes, but a weekly release committee meeting will prevent that improvement being effective. There are actually three structures within an organisation Formal structure (the org chart) - facilitates compliance Informal structure - the \"realm of influence\" between individuals Value creation structure - how work actually gets done based on inter-personal and inter-team reputation Conway's Law defines the relationship between the organisation structure and system architecture. Either a software system will mirror the communication structure of the organisation, or the organisation can structure itself to achieve the desired architecture, know as a reverse conway manoeuvre . Cognitive load on a team spreads them across too many domains, preventing them doing any one well. Can Pink's three elements of intrinsic motivation (Autonomy, Mastery and Purpose) are lost in such situations. Org-chart thinking leads to software development being treated as a manufacturing process carried out by different functional silos. This rigid approach does not lend itself well to responding to feedback from the system, such as with Agile, Lean and DevOps do.","title":"1. The Problem with Org Charts"},{"location":"Books/Team%20Topologies/2.%20Conways%20Law%20and%20Why%20it%20Matters/","text":"Why Does Conways Law Matter? Conways Law states that the design of a system will mirror the communication patterns within the organisation. A system built by a frontend team, backend team, middleware team and database team will consist of distinct frontend, backend, middleware and database components. How can we use Conways Law to our advantage? We can lean into Conways Law in what's called a reverse conway manoeuvre, where the organisation structures itself in such a way as to achieve the desired system architecture.","title":"2. Conways Law and Why it Matters"},{"location":"Books/Team%20Topologies/3.%20Team-First%20Thinking/","text":"","title":"3. Team First Thinking"},{"location":"Books/Team%20Topologies/4.%20Static%20Team%20Topologies/","text":"","title":"4. Static Team Topologies"},{"location":"Books/Team%20Topologies/5.%20The%20Four%20Fundamental%20Team%20Topologies/","text":"","title":"5. The Four Fundamental Team Topologies"},{"location":"Books/Team%20Topologies/6.%20Choose%20Team-First%20Boundaries/","text":"","title":"6. Choose Team First Boundaries"},{"location":"Books/Team%20Topologies/7.%20Team%20Interaction%20Modes/","text":"","title":"7. Team Interaction Modes"},{"location":"Books/Team%20Topologies/8.%20Evolve%20Team%20Structures%20with%20Organisational%20Sensing/","text":"","title":"8. Evolve Team Structures with Organisational Sensing"},{"location":"Books/Team%20Topologies/Conclusion%20-%20The%20Next-Generation%20Digital%20Operating%20Model/","text":"","title":"Conclusion   The Next Generation Digital Operating Model"},{"location":"Books/Team%20Topologies/Recommended%20Reading/","text":"","title":"Recommended Reading"},{"location":"Books/Team%20Topologies/Team%20Topologies/","text":"Contents Part I: Teams as the means of delivery 1. The Problem with Org Charts 2. Conways Law and Why it Matters 3. Team-First Thinking Part II: Team Topologies That Work For Flow 4. Static Team Topologies 5. The Four Fundamental Team Topologies 6. Choose Team-First Boundaries Part III: Evolving Team Interactions for Innovation and Rapid Delivery 7. Team Interaction Modes 8. Evolve Team Structures with Organisational Sensing Wrap Up Conclusion - The Next-Generation Digital Operating Model Recommended Reading Summary in three sentences ... ... ... Who Should Read It? How the Book Changed Me Why did I read this? Thoughts and Feelings Practical Application Insights My Top Three Quotes ... ... ...","title":"Contents"},{"location":"Books/Team%20Topologies/Team%20Topologies/#contents","text":"","title":"Contents"},{"location":"Books/Team%20Topologies/Team%20Topologies/#part-i-teams-as-the-means-of-delivery","text":"1. The Problem with Org Charts 2. Conways Law and Why it Matters 3. Team-First Thinking","title":"Part I: Teams as the means of delivery"},{"location":"Books/Team%20Topologies/Team%20Topologies/#part-ii-team-topologies-that-work-for-flow","text":"4. Static Team Topologies 5. The Four Fundamental Team Topologies 6. Choose Team-First Boundaries","title":"Part II: Team Topologies That Work For Flow"},{"location":"Books/Team%20Topologies/Team%20Topologies/#part-iii-evolving-team-interactions-for-innovation-and-rapid-delivery","text":"7. Team Interaction Modes 8. Evolve Team Structures with Organisational Sensing","title":"Part III: Evolving Team Interactions for Innovation and Rapid Delivery"},{"location":"Books/Team%20Topologies/Team%20Topologies/#wrap-up","text":"Conclusion - The Next-Generation Digital Operating Model Recommended Reading","title":"Wrap Up"},{"location":"Books/Team%20Topologies/Team%20Topologies/#summary-in-three-sentences","text":"... ... ...","title":"Summary in three sentences"},{"location":"Books/Team%20Topologies/Team%20Topologies/#who-should-read-it","text":"","title":"Who Should Read It?"},{"location":"Books/Team%20Topologies/Team%20Topologies/#how-the-book-changed-me","text":"","title":"How the Book Changed Me"},{"location":"Books/Team%20Topologies/Team%20Topologies/#why-did-i-read-this","text":"","title":"Why did I read this?"},{"location":"Books/Team%20Topologies/Team%20Topologies/#thoughts-and-feelings","text":"","title":"Thoughts and Feelings"},{"location":"Books/Team%20Topologies/Team%20Topologies/#practical-application","text":"","title":"Practical Application"},{"location":"Books/Team%20Topologies/Team%20Topologies/#insights","text":"","title":"Insights"},{"location":"Books/Team%20Topologies/Team%20Topologies/#my-top-three-quotes","text":"... ... ...","title":"My Top Three Quotes"},{"location":"Books/The%207%20Habits%20of%20Highly%20Effective%20People/The%207%20Habits%20of%20Highly%20Effective%20People/","text":"Summary in three sentences Highly effective people... are proactive in taking control of their lives, focusing their energies on only the things they can change while investing in both their physical and mental wellbeing. see others not as opportunities to exploit, rather as partners in success. They build trusted relationships with people, seeking to understand their motivations and priorities so they can approach future dealings with a win-win mindset, so all parties can benefit from the relationship. act with purpose towards a clearly-defined goal, whether this means knowing what the completion-state of a project looks like, or living their life according to a personal mission statement. Who Should Read It? How the Book Changed Me Why did I read this? Thoughts and Feelings Practical Application Favourite Quotes ... ... ... 1. For lasting change, you have to address your character, not your behavior There are two ways to improve yourself. One is to learn the skills of the person you want to be, and the other is to mould your character into the person you want to be. The first is just a shortcut, a self-improvement get-rich-quick scheme that won't last in the long run since your true character will always shine through. That last point is why changing your character is so important. If you only learn the skills, you're not changing yourself, you're only pretending to be someone else. Self-improvement is about becoming a better version of yourself, and this involves changing who you are. 2. Align your way of seeing the world with basic universal principles A paradigm is a way in which we see the world, and in order to be successful in life, we need to shift our paradigm to one that is aligned with universal principles like honesty, fairness and integrity. Since most people agree that these are good things, we can think of them as a set of natural laws. The more our paradigms reflect these natural laws, the greater our chances of success in attaining lasting change. 3. The first habit: be proactive and take control of your own fate. The biggest things that separates humans from animals is how we respond to external stimuli. An animal can only react to it in the way its brain has been pre-programmed. Humans, on the other hand, have the ability to reflect on a stimulus before responding. Thus, we can choose how we respond to it, thus being proactive in how we interact with the world around us. We all have two concentric circles in our lives. The outer circle is our circle of concern, where everything we worry about resides. Within that is our circle of influence, which encompasses the things we worry about over which we have control. Proactive people focus their energies on their circle of influence, and in doing so are often able to expand that circle. Reactive people focus their energy and attention on their circle of concern, where they are unable to exert any influence or control. This is what the Stoics call the Dichotomy of Control . We can decide what happens in the gap between a stimulus and response. 4. The second habit: begin with the end in mind The more exact and realistic the mental image of the act, the better its execution will be. If you're building a house, without a clear plan of the finish building, you risk making such mistakes as forgetting to put the stairs in. My comment: Something to bear in mind here is that this does not advocate for massive upfront planning in all things. Constructing a building is a place where you would want complete upfront planning, but other endeavors such as most things in life, require less of a plan and more of a vision. You set a direction of travel, take a step, stop, evaluate and course-correct. 5. The second habit continued: write a personal mission statement and integrate it into your daily life. Being efficient means getting the most done in the least time. This can mean climbing a ladder up the wrong wall. Being effective, on the other hand, means having your ladder against the right wall. The Personal Mission Statement gives you a personal constitution against which you can align your actions. A useful way of coming up with such a document is to imagine what you want people to say about you at your funeral, and work back from there. 6. The third habit: put first things first This means rigorously prioritizing the most important things so the most important are always at the top. An easy way of doing this is to prioritize all tasks against a 2x2 matrix of urgency vs importance. The tasks that are important but not urgent are the ones that will make the most difference to our lives. Tasks such as building important relationships and planning for the future are found here. Of the other tasks: important and urgent are the crises urgent but not important are things like a phone ringing while you're working on something else not important and not urgent are the time wasters 7. The fourth habit: think win-win Approaching interactions with people or parties with a win-win attitude results in lasting positive relationship and creation of mutual trust. This is because a mutually beneficial outcome will be remembered by the other party in future interactions, leading to a stronger relationship over time. 8. The fourth habit continued: forming stable relationships with others means investing in emotional bank accounts Several major deposits you can make: Maintain the utmost personal integrity - be loyal to people not present, and don't badmouth them or reveal what they've told you in confidence. Always keep promises Be explicit about what you expect of the other person Be courteous and sensitive even in small matters Really trying to understand other people, allowing you to discover what's important to them, so you can learn what counts as a deposit for them If you have to make a withdrawal from the account, apologize up front. People are often happy to forgive a repentant sinner. 9. The fifth habit: seek first to understand, then to be understood Need to develop the skill of empathic listening listening not to provide an answer listening to understand the person in front of you The words we say accounts for 10% of our communication, sounds 30%, body language 60%. 9.1. Actions Observe a conversation without hearing the words. Takes time and effort to master this skill, but the rewards are worth it. 10. The sixth habit: synergize by treating others with openness and respect Synergy is the idea that the total output by a group is greater than the sum of the individual contributions by its members. In order for a group to be synergised, a lot of time must be taken for the group to get to know each other so that, when disagreements happen, they can be discussed, and a solution amicable to the group can be found. This is instead of disagreements breading opposition. 10.1. Actions Make a list of people you find it difficult to discuss things with and think about their views. If you were more confident and open minded, do you could find synergy between your perspective and theirs? Lucy. 11. The seventh habit: sharpen the saw if you want to keep swiping If a lumberjack spent all their time cutting down trees and not sharpening their saw, they would soon have a dull saw and wouldn't be able to cur down a single tree. You need to look after yourself in order to stay effective and maintain the habits you've developed. There are four areas of health you need to focus on: Physical health - exercise and diet Spiritual health - meditation and self reflection Mental health - read good books, spend less time in front of the TV and make time for your own writing. Social health - work on building relationships 12. Final summary Be proactive Begin with an end in mind Put first things first Think win-win Seek first to understand, then be understood Synergize Sharpen the saw","title":"The 7 Habits of Highly Effective People"},{"location":"Books/The%207%20Habits%20of%20Highly%20Effective%20People/The%207%20Habits%20of%20Highly%20Effective%20People/#summary-in-three-sentences","text":"Highly effective people... are proactive in taking control of their lives, focusing their energies on only the things they can change while investing in both their physical and mental wellbeing. see others not as opportunities to exploit, rather as partners in success. They build trusted relationships with people, seeking to understand their motivations and priorities so they can approach future dealings with a win-win mindset, so all parties can benefit from the relationship. act with purpose towards a clearly-defined goal, whether this means knowing what the completion-state of a project looks like, or living their life according to a personal mission statement.","title":"Summary in three sentences"},{"location":"Books/The%207%20Habits%20of%20Highly%20Effective%20People/The%207%20Habits%20of%20Highly%20Effective%20People/#who-should-read-it","text":"","title":"Who Should Read It?"},{"location":"Books/The%207%20Habits%20of%20Highly%20Effective%20People/The%207%20Habits%20of%20Highly%20Effective%20People/#how-the-book-changed-me","text":"","title":"How the Book Changed Me"},{"location":"Books/The%207%20Habits%20of%20Highly%20Effective%20People/The%207%20Habits%20of%20Highly%20Effective%20People/#why-did-i-read-this","text":"","title":"Why did I read this?"},{"location":"Books/The%207%20Habits%20of%20Highly%20Effective%20People/The%207%20Habits%20of%20Highly%20Effective%20People/#thoughts-and-feelings","text":"","title":"Thoughts and Feelings"},{"location":"Books/The%207%20Habits%20of%20Highly%20Effective%20People/The%207%20Habits%20of%20Highly%20Effective%20People/#practical-application","text":"","title":"Practical Application"},{"location":"Books/The%207%20Habits%20of%20Highly%20Effective%20People/The%207%20Habits%20of%20Highly%20Effective%20People/#favourite-quotes","text":"... ... ...","title":"Favourite Quotes"},{"location":"Books/The%207%20Habits%20of%20Highly%20Effective%20People/The%207%20Habits%20of%20Highly%20Effective%20People/#1-for-lasting-change-you-have-to-address-your-character-not-your-behavior","text":"There are two ways to improve yourself. One is to learn the skills of the person you want to be, and the other is to mould your character into the person you want to be. The first is just a shortcut, a self-improvement get-rich-quick scheme that won't last in the long run since your true character will always shine through. That last point is why changing your character is so important. If you only learn the skills, you're not changing yourself, you're only pretending to be someone else. Self-improvement is about becoming a better version of yourself, and this involves changing who you are.","title":"1. For lasting change, you have to address your character, not your behavior"},{"location":"Books/The%207%20Habits%20of%20Highly%20Effective%20People/The%207%20Habits%20of%20Highly%20Effective%20People/#2-align-your-way-of-seeing-the-world-with-basic-universal-principles","text":"A paradigm is a way in which we see the world, and in order to be successful in life, we need to shift our paradigm to one that is aligned with universal principles like honesty, fairness and integrity. Since most people agree that these are good things, we can think of them as a set of natural laws. The more our paradigms reflect these natural laws, the greater our chances of success in attaining lasting change.","title":"2. Align your way of seeing the world with basic universal principles"},{"location":"Books/The%207%20Habits%20of%20Highly%20Effective%20People/The%207%20Habits%20of%20Highly%20Effective%20People/#3-the-first-habit-be-proactive-and-take-control-of-your-own-fate","text":"The biggest things that separates humans from animals is how we respond to external stimuli. An animal can only react to it in the way its brain has been pre-programmed. Humans, on the other hand, have the ability to reflect on a stimulus before responding. Thus, we can choose how we respond to it, thus being proactive in how we interact with the world around us. We all have two concentric circles in our lives. The outer circle is our circle of concern, where everything we worry about resides. Within that is our circle of influence, which encompasses the things we worry about over which we have control. Proactive people focus their energies on their circle of influence, and in doing so are often able to expand that circle. Reactive people focus their energy and attention on their circle of concern, where they are unable to exert any influence or control. This is what the Stoics call the Dichotomy of Control . We can decide what happens in the gap between a stimulus and response.","title":"3. The first habit: be proactive and take control of your own fate."},{"location":"Books/The%207%20Habits%20of%20Highly%20Effective%20People/The%207%20Habits%20of%20Highly%20Effective%20People/#4-the-second-habit-begin-with-the-end-in-mind","text":"The more exact and realistic the mental image of the act, the better its execution will be. If you're building a house, without a clear plan of the finish building, you risk making such mistakes as forgetting to put the stairs in. My comment: Something to bear in mind here is that this does not advocate for massive upfront planning in all things. Constructing a building is a place where you would want complete upfront planning, but other endeavors such as most things in life, require less of a plan and more of a vision. You set a direction of travel, take a step, stop, evaluate and course-correct.","title":"4. The second habit: begin with the end in mind"},{"location":"Books/The%207%20Habits%20of%20Highly%20Effective%20People/The%207%20Habits%20of%20Highly%20Effective%20People/#5-the-second-habit-continued-write-a-personal-mission-statement-and-integrate-it-into-your-daily-life","text":"Being efficient means getting the most done in the least time. This can mean climbing a ladder up the wrong wall. Being effective, on the other hand, means having your ladder against the right wall. The Personal Mission Statement gives you a personal constitution against which you can align your actions. A useful way of coming up with such a document is to imagine what you want people to say about you at your funeral, and work back from there.","title":"5. The second habit continued: write a personal mission statement and integrate it into your daily life."},{"location":"Books/The%207%20Habits%20of%20Highly%20Effective%20People/The%207%20Habits%20of%20Highly%20Effective%20People/#6-the-third-habit-put-first-things-first","text":"This means rigorously prioritizing the most important things so the most important are always at the top. An easy way of doing this is to prioritize all tasks against a 2x2 matrix of urgency vs importance. The tasks that are important but not urgent are the ones that will make the most difference to our lives. Tasks such as building important relationships and planning for the future are found here. Of the other tasks: important and urgent are the crises urgent but not important are things like a phone ringing while you're working on something else not important and not urgent are the time wasters","title":"6. The third habit: put first things first"},{"location":"Books/The%207%20Habits%20of%20Highly%20Effective%20People/The%207%20Habits%20of%20Highly%20Effective%20People/#7-the-fourth-habit-think-win-win","text":"Approaching interactions with people or parties with a win-win attitude results in lasting positive relationship and creation of mutual trust. This is because a mutually beneficial outcome will be remembered by the other party in future interactions, leading to a stronger relationship over time.","title":"7. The fourth habit: think win-win"},{"location":"Books/The%207%20Habits%20of%20Highly%20Effective%20People/The%207%20Habits%20of%20Highly%20Effective%20People/#8-the-fourth-habit-continued-forming-stable-relationships-with-others-means-investing-in-emotional-bank-accounts","text":"Several major deposits you can make: Maintain the utmost personal integrity - be loyal to people not present, and don't badmouth them or reveal what they've told you in confidence. Always keep promises Be explicit about what you expect of the other person Be courteous and sensitive even in small matters Really trying to understand other people, allowing you to discover what's important to them, so you can learn what counts as a deposit for them If you have to make a withdrawal from the account, apologize up front. People are often happy to forgive a repentant sinner.","title":"8. The fourth habit continued: forming stable relationships with others means investing in emotional bank accounts"},{"location":"Books/The%207%20Habits%20of%20Highly%20Effective%20People/The%207%20Habits%20of%20Highly%20Effective%20People/#9-the-fifth-habit-seek-first-to-understand-then-to-be-understood","text":"Need to develop the skill of empathic listening listening not to provide an answer listening to understand the person in front of you The words we say accounts for 10% of our communication, sounds 30%, body language 60%.","title":"9. The fifth habit: seek first to understand, then to be understood"},{"location":"Books/The%207%20Habits%20of%20Highly%20Effective%20People/The%207%20Habits%20of%20Highly%20Effective%20People/#91-actions","text":"Observe a conversation without hearing the words. Takes time and effort to master this skill, but the rewards are worth it.","title":"9.1. Actions"},{"location":"Books/The%207%20Habits%20of%20Highly%20Effective%20People/The%207%20Habits%20of%20Highly%20Effective%20People/#10-the-sixth-habit-synergize-by-treating-others-with-openness-and-respect","text":"Synergy is the idea that the total output by a group is greater than the sum of the individual contributions by its members. In order for a group to be synergised, a lot of time must be taken for the group to get to know each other so that, when disagreements happen, they can be discussed, and a solution amicable to the group can be found. This is instead of disagreements breading opposition.","title":"10. The sixth habit: synergize by treating others with openness and respect"},{"location":"Books/The%207%20Habits%20of%20Highly%20Effective%20People/The%207%20Habits%20of%20Highly%20Effective%20People/#101-actions","text":"Make a list of people you find it difficult to discuss things with and think about their views. If you were more confident and open minded, do you could find synergy between your perspective and theirs? Lucy.","title":"10.1. Actions"},{"location":"Books/The%207%20Habits%20of%20Highly%20Effective%20People/The%207%20Habits%20of%20Highly%20Effective%20People/#11-the-seventh-habit-sharpen-the-saw-if-you-want-to-keep-swiping","text":"If a lumberjack spent all their time cutting down trees and not sharpening their saw, they would soon have a dull saw and wouldn't be able to cur down a single tree. You need to look after yourself in order to stay effective and maintain the habits you've developed. There are four areas of health you need to focus on: Physical health - exercise and diet Spiritual health - meditation and self reflection Mental health - read good books, spend less time in front of the TV and make time for your own writing. Social health - work on building relationships","title":"11. The seventh habit: sharpen the saw if you want to keep swiping"},{"location":"Books/The%207%20Habits%20of%20Highly%20Effective%20People/The%207%20Habits%20of%20Highly%20Effective%20People/#12-final-summary","text":"Be proactive Begin with an end in mind Put first things first Think win-win Seek first to understand, then be understood Synergize Sharpen the saw","title":"12. Final summary"},{"location":"Books/The%20DevOps%20Handbook/1.%20Imagine%20a%20World%20Where%20Dev%20and%20Ops%20Become%20DevOps/","text":"DevOps is needed in order to solve the problems of dysfunctional IT/Technology departments being uable to delivery the value the business needs or expects. QA and security only happen after the software is already completed and it's too late to correct any problems found. Developers build software that is not operationally fit for purpose, leaving operations to burn their people in hellish on-call rotas to keep it running. Overall, the quality of software produced is low, resulting in the business being dissatisfied with the performance of IT, resulting in budget cuts.","title":"1. Imagine a World Where Dev and Ops Become DevOps"},{"location":"Books/The%20DevOps%20Handbook/Quotes/","text":"By adding the expertise of QA, IT Operations, and Infosec into delivery teams and automated self-service tools and platforms, teams are able to use that expertise in their daily work without being dependent on other teams. Kim, Gene; Humble, Jez; Debois, Patrick; Willis, John. The DevOps Handbook (pp. 20-21). IT Revolution Press. Kindle Edition. as Jeffrey Immelt, CEO of General Electric, stated, \u201cEvery industry and company that is not bringing software to the core of their business will be disrupted.\u201d Or as Jeffrey Snover, Technical Fellow at Microsoft, said, \u201cIn previous economic eras, businesses created value by moving atoms. Now they create value by moving bits.\u201d Kim, Gene; Humble, Jez; Debois, Patrick; Willis, John. The DevOps Handbook (p. 24). IT Revolution Press. Kindle Edition.","title":"Quotes"},{"location":"Books/The%20DevOps%20Handbook/The%20DevOps%20Handbook/","text":"Contents 1. Imagine a World Where Dev and Ops Become DevOps Summary in three sentences ... ... ... Who Should Read It? How the Book Changed Me Why did I read this? Thoughts and Feelings Practical Application Insights My Top Three Quotes ... ... ...","title":"Contents"},{"location":"Books/The%20DevOps%20Handbook/The%20DevOps%20Handbook/#contents","text":"1. Imagine a World Where Dev and Ops Become DevOps","title":"Contents"},{"location":"Books/The%20DevOps%20Handbook/The%20DevOps%20Handbook/#summary-in-three-sentences","text":"... ... ...","title":"Summary in three sentences"},{"location":"Books/The%20DevOps%20Handbook/The%20DevOps%20Handbook/#who-should-read-it","text":"","title":"Who Should Read It?"},{"location":"Books/The%20DevOps%20Handbook/The%20DevOps%20Handbook/#how-the-book-changed-me","text":"","title":"How the Book Changed Me"},{"location":"Books/The%20DevOps%20Handbook/The%20DevOps%20Handbook/#why-did-i-read-this","text":"","title":"Why did I read this?"},{"location":"Books/The%20DevOps%20Handbook/The%20DevOps%20Handbook/#thoughts-and-feelings","text":"","title":"Thoughts and Feelings"},{"location":"Books/The%20DevOps%20Handbook/The%20DevOps%20Handbook/#practical-application","text":"","title":"Practical Application"},{"location":"Books/The%20DevOps%20Handbook/The%20DevOps%20Handbook/#insights","text":"","title":"Insights"},{"location":"Books/The%20DevOps%20Handbook/The%20DevOps%20Handbook/#my-top-three-quotes","text":"... ... ...","title":"My Top Three Quotes"},{"location":"Books/The%20Managers%20Path/1.%20Management%20101/","text":"What to Expect from a Manager One-to-One Meetings Feedback and Workplace Guidance Training and Career Growth How to Be Managed Spend Time Thinking About What You Want You Are Responsible for Yourself Give Your Manager a Break Choose Your Managers Wisely Assessing Your Own Experience","title":"1. Management 101"},{"location":"Books/The%20Managers%20Path/1.%20Management%20101/#what-to-expect-from-a-manager","text":"One-to-One Meetings Feedback and Workplace Guidance Training and Career Growth","title":"What to Expect from a Manager"},{"location":"Books/The%20Managers%20Path/1.%20Management%20101/#how-to-be-managed","text":"Spend Time Thinking About What You Want You Are Responsible for Yourself Give Your Manager a Break Choose Your Managers Wisely","title":"How to Be Managed"},{"location":"Books/The%20Managers%20Path/1.%20Management%20101/#assessing-your-own-experience","text":"","title":"Assessing Your Own Experience"},{"location":"Books/The%20Managers%20Path/10.%20Conclusion/","text":"","title":"10. Conclusion"},{"location":"Books/The%20Managers%20Path/2.%20Mentoring/","text":"The Importance of Mentoring to Junior Team Members Being a Mentor Mentoring an Intern Mentoring a New Hire Technical or Career Mentoring Good Manager, Bad Manager: The Alpha Geek Tips for the Manager of a Mentor Key Takeaways for the Mentor Be Curious and Open-Minded Listen and Speak Their Language Make Connections Assessing Your Own Experiences","title":"2. Mentoring"},{"location":"Books/The%20Managers%20Path/2.%20Mentoring/#the-importance-of-mentoring-to-junior-team-members","text":"","title":"The Importance of Mentoring to Junior Team Members"},{"location":"Books/The%20Managers%20Path/2.%20Mentoring/#being-a-mentor","text":"Mentoring an Intern Mentoring a New Hire Technical or Career Mentoring","title":"Being a Mentor"},{"location":"Books/The%20Managers%20Path/2.%20Mentoring/#good-manager-bad-manager-the-alpha-geek","text":"","title":"Good Manager, Bad Manager: The Alpha Geek"},{"location":"Books/The%20Managers%20Path/2.%20Mentoring/#tips-for-the-manager-of-a-mentor","text":"","title":"Tips for the Manager of a Mentor"},{"location":"Books/The%20Managers%20Path/2.%20Mentoring/#key-takeaways-for-the-mentor","text":"Be Curious and Open-Minded Listen and Speak Their Language Make Connections","title":"Key Takeaways for the Mentor"},{"location":"Books/The%20Managers%20Path/2.%20Mentoring/#assessing-your-own-experiences","text":"","title":"Assessing Your Own Experiences"},{"location":"Books/The%20Managers%20Path/3.%20Tech%20Lead/","text":"All Great Leaders Know This One Weird Trick Being a Tech Lead 101 The Main Roles of a Tech Lead Managing Projects Managing a Project Decision Point: Stay on the Technical Track or Become a Manager Good Manager, Bad Manager: The Process Czar How to Be a Great Tech Lead *Assessing Your Own Experience *","title":"3. Tech Lead"},{"location":"Books/The%20Managers%20Path/3.%20Tech%20Lead/#all-great-leaders-know-this-one-weird-trick","text":"","title":"All Great Leaders Know This One Weird Trick"},{"location":"Books/The%20Managers%20Path/3.%20Tech%20Lead/#being-a-tech-lead-101","text":"The Main Roles of a Tech Lead","title":"Being a Tech Lead 101"},{"location":"Books/The%20Managers%20Path/3.%20Tech%20Lead/#managing-projects","text":"","title":"Managing Projects"},{"location":"Books/The%20Managers%20Path/3.%20Tech%20Lead/#managing-a-project","text":"","title":"Managing a Project"},{"location":"Books/The%20Managers%20Path/3.%20Tech%20Lead/#decision-point-stay-on-the-technical-track-or-become-a-manager","text":"","title":"Decision Point: Stay on the Technical Track or Become a Manager"},{"location":"Books/The%20Managers%20Path/3.%20Tech%20Lead/#good-manager-bad-manager-the-process-czar","text":"","title":"Good Manager, Bad Manager: The Process Czar"},{"location":"Books/The%20Managers%20Path/3.%20Tech%20Lead/#how-to-be-a-great-tech-lead","text":"*Assessing Your Own Experience *","title":"How to Be a Great Tech Lead"},{"location":"Books/The%20Managers%20Path/4.%20Managing%20People/","text":"Starting a New Reporting Relationship Off Right Communicating with Your Team Different 1-1 Styles Good Manager, Bad Manager: Micromanager, Delegator Practical Advise for Delegating Effectively Creating a Culture of Continuous Feedback Performance Reviews Cultivating Careers Challenging Situations: Firing Under-performers Assessing Your Own Experience","title":"4. Managing People"},{"location":"Books/The%20Managers%20Path/4.%20Managing%20People/#starting-a-new-reporting-relationship-off-right","text":"","title":"Starting a New Reporting Relationship Off Right"},{"location":"Books/The%20Managers%20Path/4.%20Managing%20People/#communicating-with-your-team","text":"","title":"Communicating with Your Team"},{"location":"Books/The%20Managers%20Path/4.%20Managing%20People/#different-1-1-styles","text":"","title":"Different 1-1 Styles"},{"location":"Books/The%20Managers%20Path/4.%20Managing%20People/#good-manager-bad-manager-micromanager-delegator","text":"","title":"Good Manager, Bad Manager: Micromanager, Delegator"},{"location":"Books/The%20Managers%20Path/4.%20Managing%20People/#practical-advise-for-delegating-effectively","text":"","title":"Practical Advise for Delegating Effectively"},{"location":"Books/The%20Managers%20Path/4.%20Managing%20People/#creating-a-culture-of-continuous-feedback","text":"","title":"Creating a Culture of Continuous Feedback"},{"location":"Books/The%20Managers%20Path/4.%20Managing%20People/#performance-reviews","text":"","title":"Performance Reviews"},{"location":"Books/The%20Managers%20Path/4.%20Managing%20People/#cultivating-careers","text":"","title":"Cultivating Careers"},{"location":"Books/The%20Managers%20Path/4.%20Managing%20People/#challenging-situations-firing-under-performers","text":"","title":"Challenging Situations: Firing Under-performers"},{"location":"Books/The%20Managers%20Path/4.%20Managing%20People/#assessing-your-own-experience","text":"","title":"Assessing Your Own Experience"},{"location":"Books/The%20Managers%20Path/5.%20Managing%20a%20Team/","text":"","title":"5. Managing a Team"},{"location":"Books/The%20Managers%20Path/6.%20Managing%20Multiple%20Teams/","text":"","title":"6. Managing Multiple Teams"},{"location":"Books/The%20Managers%20Path/7.%20Managing%20Managers/","text":"","title":"7. Managing Managers"},{"location":"Books/The%20Managers%20Path/8.%20The%20Big%20Leagues/","text":"","title":"8. The Big Leagues"},{"location":"Books/The%20Managers%20Path/9.%20Bootstrapping%20Culture/","text":"Culture is structure and process, and there are those who view those as \"the beginning of the end\" for their little startup. In fact, structure and culture are how the company grows in a stable way, which you can understand if you instead talk about learning and transparency. We want to share our success and learn from our mistakes, and to encode them into the company in a transparent way, making sure they remain in place long after we are gone. Think about refactoring spaghetti code, a task we normally do when we are trying to make the code scale. We are identifying and extracting a structure to make the code stand up to the stresses of handling more load then it was originally designed for. If you have ever had to make a mess of spaghetti code scale up without refactoring, then you uderstand the challenges faced when trying to scale up a company without intriducing culture. Assessing Your Role A complex system that works is invariably found to have evolved from a simple system that worked. A complex system designed from scratch never works and cannot be patched up to make it work. You have to start over with a working simple system. Systemantics, by John Gall Failure is a better teacher than success, since humans tend to disregard failures as simply bad luck, until so many of them occur that it's impossible to ignore their contribution to them. In this case, a company waits until the last possible moment to introduce structure, preventing the company being burdened by more than it needs. Success, on the other hand, is often jumed on as a silver bullet, with insufficient attention being paid to the role of luck in success. Success can be applied to the company structure only if you fully understand the context required to repeat it. Because of the role played by luck in success and failure, we can't assume that a complex system that works in one context will automatically work in any other. To build a complex system that works you must always start from a simple system. Similarly, because of the role of luck, we can't take just a single failure as a signal to introduce new structure. We need a large sample size in order to be sure of the need to act. Creating Your Culture To have a culture is to have a set of unspoken rules that unconsiously direct our interactions with each other, rules built upon a set of core values. Not everyone in the culture needs to share all of the same values, rather culture defines the area of overlap. Not everyone will fit into every culture, and that's OK. To try and accomodate everyone is to have no values at all. People who fit into a culture will naturally succeed. They may have periods of difficulty, but they will be happy. On the other hand, someone who doesn't embrace the culture will be unhappy, finding it harder to exist within the organisation. The founding members of a culture are the ones who define it, for better or worse. Applying Core Values Leaders of any level have an responsibility to cultivate culture within the organisation. Here's three steps to create and cultivate it: Define your teams core values . Map your company's core values onto them and make sure you layer them, so different subteams can form different subcultures. Reinforce culture by sharing stories of people exhibiting the core values . Sharing stories of our success is what binds us together as a community. As well as spotting people who are strongly aligned with the values, learn to spot the friction caused by people who aren't. Use performance reviews to evaluate peoples alignment with the values. Work cultural fit into the interview process . Don't use friendship markers for this, since good friends don't necessarily make good colleagues. These markers are also discriminatory, since friendships are often formed between people with shared experiences that often correlate to education, class, race and gender. Creating Cultural Policy Writing a Career Ladder Cross-Functional Teams Developing Engineering Processes Practical Advice: Depersonalize Decision Making Assessing Your own Experience","title":"9. Bootstrapping Culture"},{"location":"Books/The%20Managers%20Path/9.%20Bootstrapping%20Culture/#assessing-your-role","text":"A complex system that works is invariably found to have evolved from a simple system that worked. A complex system designed from scratch never works and cannot be patched up to make it work. You have to start over with a working simple system. Systemantics, by John Gall Failure is a better teacher than success, since humans tend to disregard failures as simply bad luck, until so many of them occur that it's impossible to ignore their contribution to them. In this case, a company waits until the last possible moment to introduce structure, preventing the company being burdened by more than it needs. Success, on the other hand, is often jumed on as a silver bullet, with insufficient attention being paid to the role of luck in success. Success can be applied to the company structure only if you fully understand the context required to repeat it. Because of the role played by luck in success and failure, we can't assume that a complex system that works in one context will automatically work in any other. To build a complex system that works you must always start from a simple system. Similarly, because of the role of luck, we can't take just a single failure as a signal to introduce new structure. We need a large sample size in order to be sure of the need to act.","title":"Assessing Your Role"},{"location":"Books/The%20Managers%20Path/9.%20Bootstrapping%20Culture/#creating-your-culture","text":"To have a culture is to have a set of unspoken rules that unconsiously direct our interactions with each other, rules built upon a set of core values. Not everyone in the culture needs to share all of the same values, rather culture defines the area of overlap. Not everyone will fit into every culture, and that's OK. To try and accomodate everyone is to have no values at all. People who fit into a culture will naturally succeed. They may have periods of difficulty, but they will be happy. On the other hand, someone who doesn't embrace the culture will be unhappy, finding it harder to exist within the organisation. The founding members of a culture are the ones who define it, for better or worse.","title":"Creating Your Culture"},{"location":"Books/The%20Managers%20Path/9.%20Bootstrapping%20Culture/#applying-core-values","text":"Leaders of any level have an responsibility to cultivate culture within the organisation. Here's three steps to create and cultivate it: Define your teams core values . Map your company's core values onto them and make sure you layer them, so different subteams can form different subcultures. Reinforce culture by sharing stories of people exhibiting the core values . Sharing stories of our success is what binds us together as a community. As well as spotting people who are strongly aligned with the values, learn to spot the friction caused by people who aren't. Use performance reviews to evaluate peoples alignment with the values. Work cultural fit into the interview process . Don't use friendship markers for this, since good friends don't necessarily make good colleagues. These markers are also discriminatory, since friendships are often formed between people with shared experiences that often correlate to education, class, race and gender.","title":"Applying Core Values"},{"location":"Books/The%20Managers%20Path/9.%20Bootstrapping%20Culture/#creating-cultural-policy","text":"","title":"Creating Cultural Policy"},{"location":"Books/The%20Managers%20Path/9.%20Bootstrapping%20Culture/#writing-a-career-ladder","text":"","title":"Writing a Career Ladder"},{"location":"Books/The%20Managers%20Path/9.%20Bootstrapping%20Culture/#cross-functional-teams","text":"","title":"Cross-Functional Teams"},{"location":"Books/The%20Managers%20Path/9.%20Bootstrapping%20Culture/#developing-engineering-processes","text":"","title":"Developing Engineering Processes"},{"location":"Books/The%20Managers%20Path/9.%20Bootstrapping%20Culture/#practical-advice-depersonalize-decision-making","text":"","title":"Practical Advice: Depersonalize Decision Making"},{"location":"Books/The%20Managers%20Path/9.%20Bootstrapping%20Culture/#assessing-your-own-experience","text":"","title":"Assessing Your own Experience"},{"location":"Books/The%20Managers%20Path/Quotes/","text":"This quote from Ruth Malan provides what could be seen as the modern version of Conway\u2019s law: \u201cIf the architecture of the system and the architecture of the organization are at odds, the architecture of the organization wins.\u201d \u2014 Skelton, Matthew; Pais, Manuel. Team Topologies (Kindle Locations 602-604). IT Revolution Press. Kindle Edition. Communication paths (along formal reporting lines or not) within an organization effectively restrict the kinds of solutions that the organization can devise. But we can use this to our strategic advantage. If we want to discourage certain kinds of designs\u2014perhaps those that are too focused on technical internals\u2014we can reshape the organization to avoid this. \u2014 Skelton, Matthew; Pais, Manuel. Team Topologies (Kindle Locations 613-615). IT Revolution Press. Kindle Edition.","title":"Quotes"},{"location":"Books/The%20Managers%20Path/The%20Manager%27s%20Path/","text":"Contents 1. Management 101 2. Mentoring 3. Tech Lead 4. Managing People 5. Managing a Team 6. Managing Multiple Teams 7. Managing Managers 8. The Big Leagues 9. Bootstrapping Culture 10. Conclusion Summary in three sentences ... ... ... Who Should Read It? How the Book Changed Me Why did I read this? Thoughts and Feelings Practical Application Insights My Top Three Quotes ... ... ...","title":"Contents"},{"location":"Books/The%20Managers%20Path/The%20Manager%27s%20Path/#contents","text":"1. Management 101 2. Mentoring 3. Tech Lead 4. Managing People 5. Managing a Team 6. Managing Multiple Teams 7. Managing Managers 8. The Big Leagues 9. Bootstrapping Culture 10. Conclusion","title":"Contents"},{"location":"Books/The%20Managers%20Path/The%20Manager%27s%20Path/#summary-in-three-sentences","text":"... ... ...","title":"Summary in three sentences"},{"location":"Books/The%20Managers%20Path/The%20Manager%27s%20Path/#who-should-read-it","text":"","title":"Who Should Read It?"},{"location":"Books/The%20Managers%20Path/The%20Manager%27s%20Path/#how-the-book-changed-me","text":"","title":"How the Book Changed Me"},{"location":"Books/The%20Managers%20Path/The%20Manager%27s%20Path/#why-did-i-read-this","text":"","title":"Why did I read this?"},{"location":"Books/The%20Managers%20Path/The%20Manager%27s%20Path/#thoughts-and-feelings","text":"","title":"Thoughts and Feelings"},{"location":"Books/The%20Managers%20Path/The%20Manager%27s%20Path/#practical-application","text":"","title":"Practical Application"},{"location":"Books/The%20Managers%20Path/The%20Manager%27s%20Path/#insights","text":"","title":"Insights"},{"location":"Books/The%20Managers%20Path/The%20Manager%27s%20Path/#my-top-three-quotes","text":"... ... ...","title":"My Top Three Quotes"},{"location":"Books/The%20Subtle%20Art%20Of%20Not%20Giving%20A%20F%2Ack/The%20Subtle%20Art%20Of%20Not%20Giving%20A%20Fuck/","text":"Contents ... Summary in three sentences Money can't neither buy happiness, nor things that make you happy, because true happiness isn't a destination, it's a never-ending journey that is nothing but struggle. Who we are is defined by what we are willing to struggle for - an athlete chooses to struggle in the gym, a devoted parent struggles to raise their child, and what we are willing to struggle for is defined by our values. Good values lead to the struggles that ultimately make us happy, a value that is: evidence based, not emotion-based; socially constructive as opposed to socially destructive; and immediate and within our control instead of being dependent on external events in the future. Who Should Read It? Anyone who is thinking to themselves \"how do I be happy?\". How the Book Changed Me This book didn't change my life, it saved it. Throughout my life, I've never acted with any kind of purpose, never deliberately, though I never realized that until I read this book. Each time the author described problematic behavior that led people to be miserable and depressed, I couldn't think anything beside \"yep, that's me\". I felt very seen reading this book. I've struggled with the question of \"how do I be happy\" quite a lot in the last few years (writing this at the end of 2020) and I didn't know where to go or what to do. This book answered that question perfectly for me. I feel like I can finally start living. Why did I read this? Thoughts and Feelings Practical Application Insights My Top Three Quotes Who you are is defined by what you\u2019re willing to struggle for. People who enjoy the struggles of a gym are the ones who run triathlons and have chiseled abs and can bench-press a small house. Happiness is a constant work-in-progress, because solving problems is a constant work-in-progress\u2014the solutions to today\u2019s problems will lay the foundation for tomorrow\u2019s problems, and so on. True happiness occurs only when you find the problems you enjoy having and enjoy solving. The only way to be comfortable with death is to understand and see yourself as something bigger than yourself; to choose values that stretch beyond serving yourself, that are simple and immediate and controllable and tolerant of the chaotic world around you. This is the basic root of all happiness. Summary in more than three sentences Part 1: What is happiness? When someone says money can't buy happiness, but it can buy things that make you happy, go ahead and send them a copy of Mark Manson's book The Subtle Art of Not Giving a F*ck so they can understand why they're wrong. When we do something that we think will make us happy, such as buying things, we get a temporary high before our brain adjusts to the new normal and we start pursuing something else. This is called a Hedonic Treadmill, where we keep doing or doing or acquiring things that we think will make us happy without actually getting any happier. Philosopher Allan Watts defined what he called the Backwards Law, where pursuing positive experiences is actually a negative experience while pursuing negative experiences is a positive experience. This is because pursing something only reinforces the fact you lack it in the first place. People who pursue things that they think will make them happy are only reminded each day of their sadness, and when they reach their goal the happiness is only temporary before fading away. On the other hand, people who endure burning muscles in the gym are the ones who run triathlons and aspiring artists who endure the ridicule and humiliation of their peers whenever they publish their work are the ones who eventually get noticed. People who excel in sports only do so because they enjoy the process of getting their body into the shape needed to complete. Successful artists are so because they enjoy the process of expressing themselves through their art. Our success is defined not by what we achieve, but by what we're willing to endure to achieve it . Achievement is a side effect of enjoying what you do, not the goal of it, and we enjoy the thing we do when we have good values. Good values are: evidence-based; socially-constructive; and immediate and within our control. Honesty is an example of a good value, since you know you are being honest, it has a positive effect on our relationship with others since it builds trust, and you only have to decide to be honest for it to be true. Bad values, on the other hand, are superstitious, socially-destructive and outside of our control or not immediate. Popularity is an example of bad values. You can't tell if people truly like you, you can only guess (superstitious), trying to impress people can lead you do to the wrong thing (socially-destructive) and the effects aren't immediate or within your control, since you can't make people like you. To understand why we have bad values and how we can develop good ones, we must cut through the three layers of self-discovery of the Self-Awareness Onion. The first layer is understanding what things make you happy or sad, a simple cause and effect relationship, the second layer is understanding why these emotions are elicited in these situations, and the third is why we consider these situations a personal success or failure. Our emotions are a feedback system signaling success or failure at something. To really understand why we have the values we do, and thus change them, we need to peel away the layers of our soul to discover the rotten parts that cause us to have bad values. These are usually events that happened to us in our childhood that we don't realize are influencing our behavior today. Some form of therapy, either sat on a sofa in front of a professional or self-therapy like journaling, is usually needed to move path the first layer, and we're mot going to enjoy that journey. Facing off against these problems is one of the emotionally harrowing thing most of us will have to do, but it's a struggle that paves the way to becoming better versions of ourselves. Any attempt at self-improvement carried out at the second layer fails to solve the underlying problems, and at the first layer it's purely superficial (most New Years resolutions happen here). Self-improvement at the third layer is solving the root cause of our problems, some we might not even be aware of, and it's solving these problems that we will ultimately develop good values which, ultimately, make us happy. Part 2: Five examples of good values Always be responsible, even when you're not at fault . We can't control the circumstances by which problems enter our lives, but we can control how we respond to them. Life is like a game of poker where each player is dealt a random hand of cards. Some people get dealt a bad hand at birth, others are dealt it later in life. As with poker, the outcome of the game is little to do with the hand people are given and everything to do with the decisions of the players. A good poker player with a bad hand can beat a bad player with a good hand, and in life people who achieve the most are the ones who make the best possible decisions in spite of the hand they've been dealt. Cultivate doubt in everything . Our minds are very good at applying meaning to the things we experience, and they usually get it wrong. Our minds are full of imperfections and bias, so any meaning it generates will likewise be imperfect. We must therefore assume that everything we know is wrong, and when we learn something, we just become less wrong, rather than becoming right. This leaves us infinite opportunity for growth, where complete certainty would close all those doors. When we are completely certain about our righteousness, we leave ourselves open to the sort of entitlement that justifies cheating and hurting people to get what we want, because we know we deserve it. Doubt can be cultivated with three questions to ask when we feel upset about something: What if I'm wrong? What would it mean if I were wrong? Would being wrong create better or worse problems than my current problem, for both myself and others? Embrace pain to achieve success . People who are good at something are only so because they've failed at it multiple times, but a lot of people are afraid of failure because they associate it with pain. Quite often this is because of bad values and/or bad metrics for those values, where being unsuccessful is a painful failure. To get out of this mindset we must re-orient our values around the idea of failure being a success, since this means we're taking one step closer to being better, which we can do with better values. The idea of not taking action until we know it will generate the right outcome is what keeps us stuck in place, because we think achieving results is a linear process: Inspiration \u2192 Motivation \u2192 Desirable Result This is incorrect. The process is in fact a loop, where each cycle feeds into the next: Inspiration \u2192 Motivation \u2192 Undesirable Result \u2192 Inspiration \u2192 Motivation \u2192 Slightly Less Undesirable Result \u2192 Etc We can't achieve a desirable result without first achieving many undesirable results and using them to calibrate our direction of travel, and we can't start with process without taking that very first action. It doesn't matter what this action is, since its outcome will always be useful in determining what to do next. Find freedom through rejection . In order to bring a value into our lives, we must reject all things in the world that are counter to that value. Someone who does not reject anything is trying to keep everyone else happy, in order to avoid conflict. Conflict is a challenge that makes people feel uncomfortable, and some would rather put on different faces for different people than be themselves and reject some of these people. Someone who does this values nothing, because they reject nothing, and their life is shallow and superficial. They might be people who move from country to country, never settling down, or they might move from job to job, or from lover to lover. This is a fear of commitment, a fear of rejecting the options available to them and settling for one. These options, however. are all just highs, and like all highs you become resistant to them the more you indulge. There's a special kind of experience that you can only get by committing to a single thing for a long period of time: living in one place for five years, the same partner for ten years. If you can say \"I'm missing out on opportunities, and I don't care because what I have is enough\", then you free yourself from the fear of missing out and chasing those highs. Remember you're going to die one day . The question of whether or not our values are good depends on whether or not we have accepted the impermanence of our existence. Everyone is driven by an existential dread called Death Terror and, whether we realize it or not, all of our efforts, in one way of another, go into attempting to preserve our legacy after we die. Those who accept the inevitability of death accept their temporary role in a world that was here before they arrived and will still be here after their gone. These people then decide how they are going to make it a slightly better place for those who follow. Those who don't accept their eventual death fail to consider themselves as only passing through the world. They instead live at the center of their own world, surrounded by problems they think are the worst anyone has. The entitlement that comes with this mindset leads them to adopt destructive values in an effort to forever feel good about themselves. The root of real happiness is to accept you are a temporary blip on the radar of the world that will fade in a cosmological moment. Once you do, you can leave your legacy behind in a constructive way, but choosing values that go beyond serving yourself, that make you the servant to whoever is coming after you.","title":"Contents"},{"location":"Books/The%20Subtle%20Art%20Of%20Not%20Giving%20A%20F%2Ack/The%20Subtle%20Art%20Of%20Not%20Giving%20A%20Fuck/#contents","text":"...","title":"Contents"},{"location":"Books/The%20Subtle%20Art%20Of%20Not%20Giving%20A%20F%2Ack/The%20Subtle%20Art%20Of%20Not%20Giving%20A%20Fuck/#summary-in-three-sentences","text":"Money can't neither buy happiness, nor things that make you happy, because true happiness isn't a destination, it's a never-ending journey that is nothing but struggle. Who we are is defined by what we are willing to struggle for - an athlete chooses to struggle in the gym, a devoted parent struggles to raise their child, and what we are willing to struggle for is defined by our values. Good values lead to the struggles that ultimately make us happy, a value that is: evidence based, not emotion-based; socially constructive as opposed to socially destructive; and immediate and within our control instead of being dependent on external events in the future.","title":"Summary in three sentences"},{"location":"Books/The%20Subtle%20Art%20Of%20Not%20Giving%20A%20F%2Ack/The%20Subtle%20Art%20Of%20Not%20Giving%20A%20Fuck/#who-should-read-it","text":"Anyone who is thinking to themselves \"how do I be happy?\".","title":"Who Should Read It?"},{"location":"Books/The%20Subtle%20Art%20Of%20Not%20Giving%20A%20F%2Ack/The%20Subtle%20Art%20Of%20Not%20Giving%20A%20Fuck/#how-the-book-changed-me","text":"This book didn't change my life, it saved it. Throughout my life, I've never acted with any kind of purpose, never deliberately, though I never realized that until I read this book. Each time the author described problematic behavior that led people to be miserable and depressed, I couldn't think anything beside \"yep, that's me\". I felt very seen reading this book. I've struggled with the question of \"how do I be happy\" quite a lot in the last few years (writing this at the end of 2020) and I didn't know where to go or what to do. This book answered that question perfectly for me. I feel like I can finally start living.","title":"How the Book Changed Me"},{"location":"Books/The%20Subtle%20Art%20Of%20Not%20Giving%20A%20F%2Ack/The%20Subtle%20Art%20Of%20Not%20Giving%20A%20Fuck/#why-did-i-read-this","text":"","title":"Why did I read this?"},{"location":"Books/The%20Subtle%20Art%20Of%20Not%20Giving%20A%20F%2Ack/The%20Subtle%20Art%20Of%20Not%20Giving%20A%20Fuck/#thoughts-and-feelings","text":"","title":"Thoughts and Feelings"},{"location":"Books/The%20Subtle%20Art%20Of%20Not%20Giving%20A%20F%2Ack/The%20Subtle%20Art%20Of%20Not%20Giving%20A%20Fuck/#practical-application","text":"","title":"Practical Application"},{"location":"Books/The%20Subtle%20Art%20Of%20Not%20Giving%20A%20F%2Ack/The%20Subtle%20Art%20Of%20Not%20Giving%20A%20Fuck/#insights","text":"","title":"Insights"},{"location":"Books/The%20Subtle%20Art%20Of%20Not%20Giving%20A%20F%2Ack/The%20Subtle%20Art%20Of%20Not%20Giving%20A%20Fuck/#my-top-three-quotes","text":"Who you are is defined by what you\u2019re willing to struggle for. People who enjoy the struggles of a gym are the ones who run triathlons and have chiseled abs and can bench-press a small house. Happiness is a constant work-in-progress, because solving problems is a constant work-in-progress\u2014the solutions to today\u2019s problems will lay the foundation for tomorrow\u2019s problems, and so on. True happiness occurs only when you find the problems you enjoy having and enjoy solving. The only way to be comfortable with death is to understand and see yourself as something bigger than yourself; to choose values that stretch beyond serving yourself, that are simple and immediate and controllable and tolerant of the chaotic world around you. This is the basic root of all happiness.","title":"My Top Three Quotes"},{"location":"Books/The%20Subtle%20Art%20Of%20Not%20Giving%20A%20F%2Ack/The%20Subtle%20Art%20Of%20Not%20Giving%20A%20Fuck/#summary-in-more-than-three-sentences","text":"","title":"Summary in more than three sentences"},{"location":"Books/The%20Subtle%20Art%20Of%20Not%20Giving%20A%20F%2Ack/The%20Subtle%20Art%20Of%20Not%20Giving%20A%20Fuck/#part-1-what-is-happiness","text":"When someone says money can't buy happiness, but it can buy things that make you happy, go ahead and send them a copy of Mark Manson's book The Subtle Art of Not Giving a F*ck so they can understand why they're wrong. When we do something that we think will make us happy, such as buying things, we get a temporary high before our brain adjusts to the new normal and we start pursuing something else. This is called a Hedonic Treadmill, where we keep doing or doing or acquiring things that we think will make us happy without actually getting any happier. Philosopher Allan Watts defined what he called the Backwards Law, where pursuing positive experiences is actually a negative experience while pursuing negative experiences is a positive experience. This is because pursing something only reinforces the fact you lack it in the first place. People who pursue things that they think will make them happy are only reminded each day of their sadness, and when they reach their goal the happiness is only temporary before fading away. On the other hand, people who endure burning muscles in the gym are the ones who run triathlons and aspiring artists who endure the ridicule and humiliation of their peers whenever they publish their work are the ones who eventually get noticed. People who excel in sports only do so because they enjoy the process of getting their body into the shape needed to complete. Successful artists are so because they enjoy the process of expressing themselves through their art. Our success is defined not by what we achieve, but by what we're willing to endure to achieve it . Achievement is a side effect of enjoying what you do, not the goal of it, and we enjoy the thing we do when we have good values. Good values are: evidence-based; socially-constructive; and immediate and within our control. Honesty is an example of a good value, since you know you are being honest, it has a positive effect on our relationship with others since it builds trust, and you only have to decide to be honest for it to be true. Bad values, on the other hand, are superstitious, socially-destructive and outside of our control or not immediate. Popularity is an example of bad values. You can't tell if people truly like you, you can only guess (superstitious), trying to impress people can lead you do to the wrong thing (socially-destructive) and the effects aren't immediate or within your control, since you can't make people like you. To understand why we have bad values and how we can develop good ones, we must cut through the three layers of self-discovery of the Self-Awareness Onion. The first layer is understanding what things make you happy or sad, a simple cause and effect relationship, the second layer is understanding why these emotions are elicited in these situations, and the third is why we consider these situations a personal success or failure. Our emotions are a feedback system signaling success or failure at something. To really understand why we have the values we do, and thus change them, we need to peel away the layers of our soul to discover the rotten parts that cause us to have bad values. These are usually events that happened to us in our childhood that we don't realize are influencing our behavior today. Some form of therapy, either sat on a sofa in front of a professional or self-therapy like journaling, is usually needed to move path the first layer, and we're mot going to enjoy that journey. Facing off against these problems is one of the emotionally harrowing thing most of us will have to do, but it's a struggle that paves the way to becoming better versions of ourselves. Any attempt at self-improvement carried out at the second layer fails to solve the underlying problems, and at the first layer it's purely superficial (most New Years resolutions happen here). Self-improvement at the third layer is solving the root cause of our problems, some we might not even be aware of, and it's solving these problems that we will ultimately develop good values which, ultimately, make us happy.","title":"Part 1: What is happiness?"},{"location":"Books/The%20Subtle%20Art%20Of%20Not%20Giving%20A%20F%2Ack/The%20Subtle%20Art%20Of%20Not%20Giving%20A%20Fuck/#part-2-five-examples-of-good-values","text":"Always be responsible, even when you're not at fault . We can't control the circumstances by which problems enter our lives, but we can control how we respond to them. Life is like a game of poker where each player is dealt a random hand of cards. Some people get dealt a bad hand at birth, others are dealt it later in life. As with poker, the outcome of the game is little to do with the hand people are given and everything to do with the decisions of the players. A good poker player with a bad hand can beat a bad player with a good hand, and in life people who achieve the most are the ones who make the best possible decisions in spite of the hand they've been dealt. Cultivate doubt in everything . Our minds are very good at applying meaning to the things we experience, and they usually get it wrong. Our minds are full of imperfections and bias, so any meaning it generates will likewise be imperfect. We must therefore assume that everything we know is wrong, and when we learn something, we just become less wrong, rather than becoming right. This leaves us infinite opportunity for growth, where complete certainty would close all those doors. When we are completely certain about our righteousness, we leave ourselves open to the sort of entitlement that justifies cheating and hurting people to get what we want, because we know we deserve it. Doubt can be cultivated with three questions to ask when we feel upset about something: What if I'm wrong? What would it mean if I were wrong? Would being wrong create better or worse problems than my current problem, for both myself and others? Embrace pain to achieve success . People who are good at something are only so because they've failed at it multiple times, but a lot of people are afraid of failure because they associate it with pain. Quite often this is because of bad values and/or bad metrics for those values, where being unsuccessful is a painful failure. To get out of this mindset we must re-orient our values around the idea of failure being a success, since this means we're taking one step closer to being better, which we can do with better values. The idea of not taking action until we know it will generate the right outcome is what keeps us stuck in place, because we think achieving results is a linear process: Inspiration \u2192 Motivation \u2192 Desirable Result This is incorrect. The process is in fact a loop, where each cycle feeds into the next: Inspiration \u2192 Motivation \u2192 Undesirable Result \u2192 Inspiration \u2192 Motivation \u2192 Slightly Less Undesirable Result \u2192 Etc We can't achieve a desirable result without first achieving many undesirable results and using them to calibrate our direction of travel, and we can't start with process without taking that very first action. It doesn't matter what this action is, since its outcome will always be useful in determining what to do next. Find freedom through rejection . In order to bring a value into our lives, we must reject all things in the world that are counter to that value. Someone who does not reject anything is trying to keep everyone else happy, in order to avoid conflict. Conflict is a challenge that makes people feel uncomfortable, and some would rather put on different faces for different people than be themselves and reject some of these people. Someone who does this values nothing, because they reject nothing, and their life is shallow and superficial. They might be people who move from country to country, never settling down, or they might move from job to job, or from lover to lover. This is a fear of commitment, a fear of rejecting the options available to them and settling for one. These options, however. are all just highs, and like all highs you become resistant to them the more you indulge. There's a special kind of experience that you can only get by committing to a single thing for a long period of time: living in one place for five years, the same partner for ten years. If you can say \"I'm missing out on opportunities, and I don't care because what I have is enough\", then you free yourself from the fear of missing out and chasing those highs. Remember you're going to die one day . The question of whether or not our values are good depends on whether or not we have accepted the impermanence of our existence. Everyone is driven by an existential dread called Death Terror and, whether we realize it or not, all of our efforts, in one way of another, go into attempting to preserve our legacy after we die. Those who accept the inevitability of death accept their temporary role in a world that was here before they arrived and will still be here after their gone. These people then decide how they are going to make it a slightly better place for those who follow. Those who don't accept their eventual death fail to consider themselves as only passing through the world. They instead live at the center of their own world, surrounded by problems they think are the worst anyone has. The entitlement that comes with this mindset leads them to adopt destructive values in an effort to forever feel good about themselves. The root of real happiness is to accept you are a temporary blip on the radar of the world that will fade in a cosmological moment. Once you do, you can leave your legacy behind in a constructive way, but choosing values that go beyond serving yourself, that make you the servant to whoever is coming after you.","title":"Part 2: Five examples of good values"},{"location":"Books/Zero%20Trust%20Networks/00%20-%20Zero%20Trust%20Networks/","text":"Index Chapters 1 and 2 discuss the fundamental concepts at play in a zero trust network. Chapters 3 and 4 explore the new concepts typically seen in mature zero trust networks: network agents and trust engines. Chapters 5-8 detail how trust is established among the actors in a network. Most of this content is focused on existing technology that could be useful even in a traditional network security model. Chapter 9 brings all this content together to discuss how you could begin building your own zero trust network and includes two case studies. Chapter 10 looks at the zero trust model from an adversarial view. It explores potential weaknesses, discussing which are well mitigated, and which are not. Contents Part 1: Fundamental Concepts 01 - Zero Trust Fundamentals 02 - Managing Trust Part 2: Zero Trust Concepts 03 - Network Agents 04 - Making Authorisation Decisions Part 3: Establishing Trust 05 - Trusting Devices 06 - Trusting Users 07 - Trusting Applications 08 - Trusting the Traffic Part 4: Building a Zero Trust Network 09 - Realising a Zero Trust Network Part 5: Attacking a Zero Trust Network 10 - The Adversarial View Further Reading INSIDE THE NSA\u2019S SECRET EFFORTS TO HUNT AND HACK SYSTEM ADMINISTRATORS Storing Keys in the Secure Enclave AWS CloudHSM Summary in three sentences ... ... ... Who Should Read It? How the Book Changed Me Why did I read this? Thoughts and Feelings Practical Application My Top Three Quotes ... ... ...","title":"Zero Trust Networks"},{"location":"Books/Zero%20Trust%20Networks/00%20-%20Zero%20Trust%20Networks/#index","text":"Chapters 1 and 2 discuss the fundamental concepts at play in a zero trust network. Chapters 3 and 4 explore the new concepts typically seen in mature zero trust networks: network agents and trust engines. Chapters 5-8 detail how trust is established among the actors in a network. Most of this content is focused on existing technology that could be useful even in a traditional network security model. Chapter 9 brings all this content together to discuss how you could begin building your own zero trust network and includes two case studies. Chapter 10 looks at the zero trust model from an adversarial view. It explores potential weaknesses, discussing which are well mitigated, and which are not.","title":"Index"},{"location":"Books/Zero%20Trust%20Networks/00%20-%20Zero%20Trust%20Networks/#contents","text":"","title":"Contents"},{"location":"Books/Zero%20Trust%20Networks/00%20-%20Zero%20Trust%20Networks/#part-1-fundamental-concepts","text":"01 - Zero Trust Fundamentals 02 - Managing Trust","title":"Part 1: Fundamental Concepts"},{"location":"Books/Zero%20Trust%20Networks/00%20-%20Zero%20Trust%20Networks/#part-2-zero-trust-concepts","text":"03 - Network Agents 04 - Making Authorisation Decisions","title":"Part 2: Zero Trust Concepts"},{"location":"Books/Zero%20Trust%20Networks/00%20-%20Zero%20Trust%20Networks/#part-3-establishing-trust","text":"05 - Trusting Devices 06 - Trusting Users 07 - Trusting Applications 08 - Trusting the Traffic","title":"Part 3: Establishing Trust"},{"location":"Books/Zero%20Trust%20Networks/00%20-%20Zero%20Trust%20Networks/#part-4-building-a-zero-trust-network","text":"09 - Realising a Zero Trust Network","title":"Part 4: Building a Zero Trust Network"},{"location":"Books/Zero%20Trust%20Networks/00%20-%20Zero%20Trust%20Networks/#part-5-attacking-a-zero-trust-network","text":"10 - The Adversarial View","title":"Part 5: Attacking a Zero Trust Network"},{"location":"Books/Zero%20Trust%20Networks/00%20-%20Zero%20Trust%20Networks/#further-reading","text":"INSIDE THE NSA\u2019S SECRET EFFORTS TO HUNT AND HACK SYSTEM ADMINISTRATORS Storing Keys in the Secure Enclave AWS CloudHSM","title":"Further Reading"},{"location":"Books/Zero%20Trust%20Networks/00%20-%20Zero%20Trust%20Networks/#summary-in-three-sentences","text":"... ... ...","title":"Summary in three sentences"},{"location":"Books/Zero%20Trust%20Networks/00%20-%20Zero%20Trust%20Networks/#who-should-read-it","text":"","title":"Who Should Read It?"},{"location":"Books/Zero%20Trust%20Networks/00%20-%20Zero%20Trust%20Networks/#how-the-book-changed-me","text":"","title":"How the Book Changed Me"},{"location":"Books/Zero%20Trust%20Networks/00%20-%20Zero%20Trust%20Networks/#why-did-i-read-this","text":"","title":"Why did I read this?"},{"location":"Books/Zero%20Trust%20Networks/00%20-%20Zero%20Trust%20Networks/#thoughts-and-feelings","text":"","title":"Thoughts and Feelings"},{"location":"Books/Zero%20Trust%20Networks/00%20-%20Zero%20Trust%20Networks/#practical-application","text":"","title":"Practical Application"},{"location":"Books/Zero%20Trust%20Networks/00%20-%20Zero%20Trust%20Networks/#my-top-three-quotes","text":"... ... ...","title":"My Top Three Quotes"},{"location":"Books/Zero%20Trust%20Networks/01%20-%20Zero%20Trust%20Fundamentals/","text":"1 - Zero Trust Fundamentals A zero trust network is a response to the flaw inherint in a traditional layered network. In this traditional model, the network within the perimiter firewall is fully trusted, and so is any actor within that network. The problem with this is that if a malicious actor is able to gain access to your trusted network, they have the trust needed to move laterally throughout the network, attacking any systems within it. Traditional Network Design A traditional network design makes the following assumptions: - the perimiter defences are impregnable - any actor on the trusted internal network is supposed to be there The problems with a traditional network design are - traffic is only inspected on the border of each zone. Once traffic is inside a zone, it is free to go anywhere within. - the gateways between each zone act as a single point of failure Zero Trust Network Design Zero trust networks, on the other hand, make the following assertions: - the network is always assumed to be hostile - external and internal threats exist on the network at all times - network locality is not sufficient for deciding trust in a network - every device, user and network flow is authenticated and authorised - policies must be dynamic and calculated from as many sources as possible Zero trust network designs solve the problems of traditional network by: - having all access to protected resource be made through the control plane where both user and device are authenticated - having the control plane configire the path to the resource that can be used by that client and that client only Key components in a zero trust network user/application authentication device authentication trust score These three are bonded to form an agent, against which a policy is applied. The score is factored into the policy to allow fine-grained and flexible access control that can adapt to changing situations. The traditional model was one of hard cells with soft bodies inside, and the zero trust model is about creating hard bodies. VPN is an example of the kind of workflow that would be implemented throughout the network.","title":"1 - Zero Trust Fundamentals"},{"location":"Books/Zero%20Trust%20Networks/01%20-%20Zero%20Trust%20Fundamentals/#1-zero-trust-fundamentals","text":"A zero trust network is a response to the flaw inherint in a traditional layered network. In this traditional model, the network within the perimiter firewall is fully trusted, and so is any actor within that network. The problem with this is that if a malicious actor is able to gain access to your trusted network, they have the trust needed to move laterally throughout the network, attacking any systems within it.","title":"1 - Zero Trust Fundamentals"},{"location":"Books/Zero%20Trust%20Networks/01%20-%20Zero%20Trust%20Fundamentals/#traditional-network-design","text":"A traditional network design makes the following assumptions: - the perimiter defences are impregnable - any actor on the trusted internal network is supposed to be there The problems with a traditional network design are - traffic is only inspected on the border of each zone. Once traffic is inside a zone, it is free to go anywhere within. - the gateways between each zone act as a single point of failure","title":"Traditional Network Design"},{"location":"Books/Zero%20Trust%20Networks/01%20-%20Zero%20Trust%20Fundamentals/#zero-trust-network-design","text":"Zero trust networks, on the other hand, make the following assertions: - the network is always assumed to be hostile - external and internal threats exist on the network at all times - network locality is not sufficient for deciding trust in a network - every device, user and network flow is authenticated and authorised - policies must be dynamic and calculated from as many sources as possible Zero trust network designs solve the problems of traditional network by: - having all access to protected resource be made through the control plane where both user and device are authenticated - having the control plane configire the path to the resource that can be used by that client and that client only","title":"Zero Trust Network Design"},{"location":"Books/Zero%20Trust%20Networks/01%20-%20Zero%20Trust%20Fundamentals/#key-components-in-a-zero-trust-network","text":"user/application authentication device authentication trust score These three are bonded to form an agent, against which a policy is applied. The score is factored into the policy to allow fine-grained and flexible access control that can adapt to changing situations. The traditional model was one of hard cells with soft bodies inside, and the zero trust model is about creating hard bodies. VPN is an example of the kind of workflow that would be implemented throughout the network.","title":"Key components in a zero trust network"},{"location":"Books/Zero%20Trust%20Networks/02%20-%20Managing%20Trust/","text":"2 - Managing Trust In a network without any explicit trust, implicit trust must be sourced from somewhere, and that is the operator who deploys and manages the system. The operator can't always be around to perform every action, so they must delegate trust to systems that will do so on their behalf. This is called a trust chain and the operator is called a trust anchor . Threat Modeling Based on attacker-based threat modeling techniques, we can categorize possible attackers into the following in increasing order of sophistication - Script-kiddies - Targeted attackers - Insider threats - Trusted insider - State-level actor Zero Trust Networks follow the Internet Threat Model, described in RFC 3552, to plan their security stance. This threat model assumes that end systems engaging in protocol exchange are secure and uncompromised, since we can't control those endpoints. It does assume that attackers on the internet itself can intercept traffic traveling between secure end systems, sending packets on to the destination that appear to be from a secure end system. Thus, you cannot guarantee that the packets arriving at your own system are originating from where they claim. The zero trust threat model expands on this, since it's applied to a system where the operators control all the endpoints. A zero-trust network is designed to mitigate attacks against threats up to the level of trusted insider. Most organisation don't face a threat from state-level actors so this model doesn't try to mitigate their attacks, though it does go some way to mitigation attacks from these actors attacking the network remotely. State level actors are assumed to have access to significant resources that make their sophisticated attacks difficult to defend against. Strong Authentication In order to establish trust with any client on the network, they must prove they are who they say they are. Humans are able to do this when speaking face to face with someone, using multiple senses to determine how much we should trust this person in front of us. If we hear them claim to be someone, we can verify that with our eyes. On the other hand, if we are speaking to them over the phone, we do not have visual confirmation of their identity claim, and this is the same problems computers have. Traditionally, IP addresses and passwords have provided the authentication method, but this is not enough for a zero trust network when attackers can communicate from any IP they please and insert themselves between yourself and trusted remote host. Strong Authentication is best implemented using a X.509 certificate. The question is should you use PKI or roll your own private certificate authority? Since certificates make use of public key cryptography, the successfuly decryption of a message using the public key confirms that the sender is in the presence of the secret part of the key. It does not, however, account for the possibility of the secret being stolen, which can be countered by requiring multiple secrets for authentication. Since multiple secrets only makes it harder to steal all the necessary components of authentication, not impossible, the secrets should be time-bounded with an expiry. Authenticating Trust Having a public key isn't enough. You need to know you have the right public key, and this can be done using Public Key Infrastructure. PKI using a Registration Authority to embed an identity into a certificate, which is cryptographically signed by a trusted third party. This certificate can be presented as proofy of identity if the recipient also trusts the same third party. There are some downsides to using PKI: - Cost, since the CAs are for-profit businesses, though Let's Encrypt might eliminate this problem - Lack of programmable interfaces, since you might want org-specific metadata encoded in your certificates - It's hard to fully trust the public certificate authorities Despite these, PKI is still better than nothing at all. Least Privilege Users and applications should carry out their normal actions on a network in an unprivileged mode with access only to the minimal amount of resources they need. Additional privileges should be granted only when they are requests, be time-bounded, and require additional authentication such as another token or additional approval some another individual. Zero trust networks also consider the privilege of the device being used to authenticate, combining the user authentication and device authentication to determine how much trust the user should receive. For example, a user logging into their company portal through their browser on their personal laptop might be given fewer options than one logging in from a managed corporate machine. Changes in privileges must be dynamic and easy to do. Typically, policies defining user permissions are static. Whenever someone needs to elevate their privileges, they must lobby for a change in the policy, which is implemented permanently to the policy, increasing their permissions over time and reducing the effect of least privilege. Additionally, the sysadmins making the changes usually have high-level permissions, often administrator permissions, to all systems, further reducing the impact of a least privilege stance in the organisation. Zero trust networks being able to dynamically increase permissions on a time-bound basis makes them more secure in the long term. Variable Trust In the same way a credit score from a credit agency can be used to make decisions on the trustworthiness of an individual to a credit lender, a trust score can be computer for clients on a network based on their pased behvaiour. This score can be used to determine their overall trustworthiness for the purposes of elevating privileges. A client would connect to the network initially with no trust. Doing to from a company-owned computer would increase their trust score. Prividing the correct RSA token would increase it further. This model is not without its drawbacks. - Since scores can go up and down over time, does that mean a persistent attacker can improve their trust score if they are patient enough? - How do users who need higher privileges to do their job, such as sysadmins, get them in a timely manner? - How does the system communicate to an end user that they are not trusted to access a system from a coffee shop but they are from their home network? Control Plans vs Data Plane In networking, the data plane is responsible for the transport of traffic through the network while the control plane is responsible for the signalling traffic and logic for managing the network. The same concept exists in a zero trust network, where the date plane is responsibile for the flow of traffic between clients and resources, and the control plane is responsible for authenticating and authorising requests to the network, and establishing and managing trust in the clients. As such, the security of the control plane is critical to the functioning of a zero trust network. The interface between the control and data planes should resemble that of the kernel/user space, where interactions are heavily isolated to prevent privilege escalation.","title":"2 - Managing Trust"},{"location":"Books/Zero%20Trust%20Networks/02%20-%20Managing%20Trust/#2-managing-trust","text":"In a network without any explicit trust, implicit trust must be sourced from somewhere, and that is the operator who deploys and manages the system. The operator can't always be around to perform every action, so they must delegate trust to systems that will do so on their behalf. This is called a trust chain and the operator is called a trust anchor .","title":"2 - Managing Trust"},{"location":"Books/Zero%20Trust%20Networks/02%20-%20Managing%20Trust/#threat-modeling","text":"Based on attacker-based threat modeling techniques, we can categorize possible attackers into the following in increasing order of sophistication - Script-kiddies - Targeted attackers - Insider threats - Trusted insider - State-level actor Zero Trust Networks follow the Internet Threat Model, described in RFC 3552, to plan their security stance. This threat model assumes that end systems engaging in protocol exchange are secure and uncompromised, since we can't control those endpoints. It does assume that attackers on the internet itself can intercept traffic traveling between secure end systems, sending packets on to the destination that appear to be from a secure end system. Thus, you cannot guarantee that the packets arriving at your own system are originating from where they claim. The zero trust threat model expands on this, since it's applied to a system where the operators control all the endpoints. A zero-trust network is designed to mitigate attacks against threats up to the level of trusted insider. Most organisation don't face a threat from state-level actors so this model doesn't try to mitigate their attacks, though it does go some way to mitigation attacks from these actors attacking the network remotely. State level actors are assumed to have access to significant resources that make their sophisticated attacks difficult to defend against.","title":"Threat Modeling"},{"location":"Books/Zero%20Trust%20Networks/02%20-%20Managing%20Trust/#strong-authentication","text":"In order to establish trust with any client on the network, they must prove they are who they say they are. Humans are able to do this when speaking face to face with someone, using multiple senses to determine how much we should trust this person in front of us. If we hear them claim to be someone, we can verify that with our eyes. On the other hand, if we are speaking to them over the phone, we do not have visual confirmation of their identity claim, and this is the same problems computers have. Traditionally, IP addresses and passwords have provided the authentication method, but this is not enough for a zero trust network when attackers can communicate from any IP they please and insert themselves between yourself and trusted remote host. Strong Authentication is best implemented using a X.509 certificate. The question is should you use PKI or roll your own private certificate authority? Since certificates make use of public key cryptography, the successfuly decryption of a message using the public key confirms that the sender is in the presence of the secret part of the key. It does not, however, account for the possibility of the secret being stolen, which can be countered by requiring multiple secrets for authentication. Since multiple secrets only makes it harder to steal all the necessary components of authentication, not impossible, the secrets should be time-bounded with an expiry.","title":"Strong Authentication"},{"location":"Books/Zero%20Trust%20Networks/02%20-%20Managing%20Trust/#authenticating-trust","text":"Having a public key isn't enough. You need to know you have the right public key, and this can be done using Public Key Infrastructure. PKI using a Registration Authority to embed an identity into a certificate, which is cryptographically signed by a trusted third party. This certificate can be presented as proofy of identity if the recipient also trusts the same third party. There are some downsides to using PKI: - Cost, since the CAs are for-profit businesses, though Let's Encrypt might eliminate this problem - Lack of programmable interfaces, since you might want org-specific metadata encoded in your certificates - It's hard to fully trust the public certificate authorities Despite these, PKI is still better than nothing at all.","title":"Authenticating Trust"},{"location":"Books/Zero%20Trust%20Networks/02%20-%20Managing%20Trust/#least-privilege","text":"Users and applications should carry out their normal actions on a network in an unprivileged mode with access only to the minimal amount of resources they need. Additional privileges should be granted only when they are requests, be time-bounded, and require additional authentication such as another token or additional approval some another individual. Zero trust networks also consider the privilege of the device being used to authenticate, combining the user authentication and device authentication to determine how much trust the user should receive. For example, a user logging into their company portal through their browser on their personal laptop might be given fewer options than one logging in from a managed corporate machine. Changes in privileges must be dynamic and easy to do. Typically, policies defining user permissions are static. Whenever someone needs to elevate their privileges, they must lobby for a change in the policy, which is implemented permanently to the policy, increasing their permissions over time and reducing the effect of least privilege. Additionally, the sysadmins making the changes usually have high-level permissions, often administrator permissions, to all systems, further reducing the impact of a least privilege stance in the organisation. Zero trust networks being able to dynamically increase permissions on a time-bound basis makes them more secure in the long term.","title":"Least Privilege"},{"location":"Books/Zero%20Trust%20Networks/02%20-%20Managing%20Trust/#variable-trust","text":"In the same way a credit score from a credit agency can be used to make decisions on the trustworthiness of an individual to a credit lender, a trust score can be computer for clients on a network based on their pased behvaiour. This score can be used to determine their overall trustworthiness for the purposes of elevating privileges. A client would connect to the network initially with no trust. Doing to from a company-owned computer would increase their trust score. Prividing the correct RSA token would increase it further. This model is not without its drawbacks. - Since scores can go up and down over time, does that mean a persistent attacker can improve their trust score if they are patient enough? - How do users who need higher privileges to do their job, such as sysadmins, get them in a timely manner? - How does the system communicate to an end user that they are not trusted to access a system from a coffee shop but they are from their home network?","title":"Variable Trust"},{"location":"Books/Zero%20Trust%20Networks/02%20-%20Managing%20Trust/#control-plans-vs-data-plane","text":"In networking, the data plane is responsible for the transport of traffic through the network while the control plane is responsible for the signalling traffic and logic for managing the network. The same concept exists in a zero trust network, where the date plane is responsibile for the flow of traffic between clients and resources, and the control plane is responsible for authenticating and authorising requests to the network, and establishing and managing trust in the clients. As such, the security of the control plane is critical to the functioning of a zero trust network. The interface between the control and data planes should resemble that of the kernel/user space, where interactions are heavily isolated to prevent privilege escalation.","title":"Control Plans vs Data Plane"},{"location":"Books/Zero%20Trust%20Networks/03%20-%20Network%20Agents/","text":"3 - Network Agents A network agent is the marriage of user and device to form a single idenitty. It prevent users from logging on from just any device, trusted or not. It must be from their personal trusted device. More generally, it is the combination of data know about the actor requesting the access. The agent is ephemeral, existing for the purpose of evaluating a policy, and forming a point-in-time identity. Some of the data in the agent can be volatile. For example, the trust score needs to be changing enough that the system can respond to a trusted user begining to attack the system. Similarly, a device being bootstrapped might not have a user assigned to it yet, and this must be relfected in the authorisation workflow. Examples of information an agent might contain are: - agent trust score - user trust score - user roles or groups - user place of residence - user authentication method - device trust score - device manufacturer - TPM manufacturer and version - current device location - ip address How Is An Agent Used Authorisation decisions are made against the agent as a whole, not parts of it such as user or device. An agent is formed only after user and device authentication, both of which might be authenticated differently (user with typical multifactor approach and the device with X.509). Typically authentication is session oriented while authorisation is request oriented. How To Expose An Agent The agent will typically contain PII that would compromise the privacy of the user if it were ever leaked, so the entire lifecycle of the agent should be limited to the secure systems of the control plane. Sometimes, parts of the agent need to be exposed to data plane systems for the purpose of implemented authorisation-based policies within the system, for example, to only allow a user to search a subset of data based on their authorisation. No Standards Exist All zero trust networks have been build in-house so far, so there is no standardisation of the agent format. A standardised agent would allow for the mixing and matching of control plane components. Standardisation of the agent is essential to the scaling of the control plane. New systems being introduced need to be confident of finding certain pieces of information at certain coordinates. Data cleanliness is an issue that is unavoidable in assembling an agent. Many fields may be unpopulated for one reason or another, and since data cleanliness only gets hard with scale, it is best for policies to expect some fields to be absent. It is a useful thought experiment to think about what alternative pieces of data would suffice in its absence. Zero trust networks are a new field and still under active development, so standardisation has not yet occured. When designing an agent it is recommended to make it as flexible and extensible as possible, prefering loose typing or no typing at all over strong typing.","title":"3 - Network Agents"},{"location":"Books/Zero%20Trust%20Networks/03%20-%20Network%20Agents/#3-network-agents","text":"A network agent is the marriage of user and device to form a single idenitty. It prevent users from logging on from just any device, trusted or not. It must be from their personal trusted device. More generally, it is the combination of data know about the actor requesting the access. The agent is ephemeral, existing for the purpose of evaluating a policy, and forming a point-in-time identity. Some of the data in the agent can be volatile. For example, the trust score needs to be changing enough that the system can respond to a trusted user begining to attack the system. Similarly, a device being bootstrapped might not have a user assigned to it yet, and this must be relfected in the authorisation workflow. Examples of information an agent might contain are: - agent trust score - user trust score - user roles or groups - user place of residence - user authentication method - device trust score - device manufacturer - TPM manufacturer and version - current device location - ip address","title":"3 - Network Agents"},{"location":"Books/Zero%20Trust%20Networks/03%20-%20Network%20Agents/#how-is-an-agent-used","text":"Authorisation decisions are made against the agent as a whole, not parts of it such as user or device. An agent is formed only after user and device authentication, both of which might be authenticated differently (user with typical multifactor approach and the device with X.509). Typically authentication is session oriented while authorisation is request oriented.","title":"How Is An Agent Used"},{"location":"Books/Zero%20Trust%20Networks/03%20-%20Network%20Agents/#how-to-expose-an-agent","text":"The agent will typically contain PII that would compromise the privacy of the user if it were ever leaked, so the entire lifecycle of the agent should be limited to the secure systems of the control plane. Sometimes, parts of the agent need to be exposed to data plane systems for the purpose of implemented authorisation-based policies within the system, for example, to only allow a user to search a subset of data based on their authorisation.","title":"How To Expose An Agent"},{"location":"Books/Zero%20Trust%20Networks/03%20-%20Network%20Agents/#no-standards-exist","text":"All zero trust networks have been build in-house so far, so there is no standardisation of the agent format. A standardised agent would allow for the mixing and matching of control plane components. Standardisation of the agent is essential to the scaling of the control plane. New systems being introduced need to be confident of finding certain pieces of information at certain coordinates. Data cleanliness is an issue that is unavoidable in assembling an agent. Many fields may be unpopulated for one reason or another, and since data cleanliness only gets hard with scale, it is best for policies to expect some fields to be absent. It is a useful thought experiment to think about what alternative pieces of data would suffice in its absence. Zero trust networks are a new field and still under active development, so standardisation has not yet occured. When designing an agent it is recommended to make it as flexible and extensible as possible, prefering loose typing or no typing at all over strong typing.","title":"No Standards Exist"},{"location":"Books/Zero%20Trust%20Networks/04%20-%20Making%20Authorisation%20Decisions/","text":"4 - Making Authorization Decisions Most of this chapter is considered state of the art, so may change in the future. That being said, the major components and their responsibilities are understood The four components of a zero trust authorisation workflow are illustrated here. These are the crown jewels of a zero trust network so care must be taken with their security posture. Enforcement The enforcement component is the first part of the authorisation engine that a request will reach, and is responsible for interacting with the policy engine to make a decision on the request, and to enforce the decision made by the engine. It sits as close to the endpoint as possible to prevent the pooling of trust behind it, and this is helped by modelling the component as a client while the other authorisation components are modeled as services. Policy Engine The policy engine compares the requests it receives from the enforcement layer against policy and returns an authorisation decision for realisation by enforcement. These two components must always be implemented separately. The enforcement layer sits int he user path, which would expose the policy engine to undue risk if it was integrated into it. Where you then deploy the policy engine will affect the latency introduced to the request round trip by the authorisation workflow. Deploying it as a process on the same server as the enforcement layer which communicates to it via IPC will introduce minimal latency, allowing for per-request authorisation. Deploying it as a web service and having the enforcement layer communicate with it over the network will introduce more latency, perhaps requiring authorisation to be done per-session. The decision of how to implement the policy engine, and thus where to deploy it, can have an impact on the ability of the authorisation enginer to respond to the sort of changes in behaviour of an agent that might suggest an attack. Policy Storage Policies should be defined outside the engine and loaded into it on-demand. This way, policies can be updated without having to redeploy the components of the authorisation engine. Capturing the policies in version contol allows us to track changes to them over time as well as making them available to other systems in a machine-consumable format, such as git. What makes a good policy A good policy should have the following characteristics - Fine grained, scoped to the individual resource being secured - Defined in terms of logical components on the network (network services, device endpoint classes, user roles, etc), rather than physical components, such as IP addresses. - Include a trust score component to anticipate unknown unknowns. - Include characteristic of the request being authorised, for example certain user roles should only have access to certain services. Who Defines Policy Having sysadmin manage a large number of fine-grained policies puts a lot of burden on them Alieviate this by having people deploying a service write the policy This can lead to a problem of inconsistently scope policies, with some being overly broad. Solve this with two workflow changes Review by someone else who can question certain decisions in the design of the policy Overlay broad infrastructure policies on to of fine grained service policies, creating a set of guardrails. Trust Engine performs risk analysis against a particular request or action feeds its assessment to the policy engine for an ultimate authorisation decision uses both static and dynamic rules to determine strust static rules such as multiple failed authentication attempts from a user, or a device missing the latest security patches dynamic rules making use of machine learning to calculate a score from observable facts What entities are scored We should score the user and device that are used to compose the agent, as well as the agent itself. - If a users credentials were being brute forced, authorisation of the network agent would be sufficient to block those requests without locking the users account. - However, consider requests from a device with a suspicious history, but a currently valid network agent. This is an argument for the device to be authorised. - Consider also an insider using multiple devices to cover their tracks. The network agent from each device may be valid, but the users behaviour of changing devices resgularly should drop their trust score. All three entities should be scored, and the scores all passed to the policy engine to decide how to act. Exposing Scores Considered Risky The trust scores should not be exposed to the end user of a system since it can help an attacker modify their behaviour to increase their trust score. Data Stores","title":"4 - Making Authorization Decisions"},{"location":"Books/Zero%20Trust%20Networks/04%20-%20Making%20Authorisation%20Decisions/#4-making-authorization-decisions","text":"Most of this chapter is considered state of the art, so may change in the future. That being said, the major components and their responsibilities are understood The four components of a zero trust authorisation workflow are illustrated here. These are the crown jewels of a zero trust network so care must be taken with their security posture.","title":"4 - Making Authorization Decisions"},{"location":"Books/Zero%20Trust%20Networks/04%20-%20Making%20Authorisation%20Decisions/#enforcement","text":"The enforcement component is the first part of the authorisation engine that a request will reach, and is responsible for interacting with the policy engine to make a decision on the request, and to enforce the decision made by the engine. It sits as close to the endpoint as possible to prevent the pooling of trust behind it, and this is helped by modelling the component as a client while the other authorisation components are modeled as services.","title":"Enforcement"},{"location":"Books/Zero%20Trust%20Networks/04%20-%20Making%20Authorisation%20Decisions/#policy-engine","text":"The policy engine compares the requests it receives from the enforcement layer against policy and returns an authorisation decision for realisation by enforcement. These two components must always be implemented separately. The enforcement layer sits int he user path, which would expose the policy engine to undue risk if it was integrated into it. Where you then deploy the policy engine will affect the latency introduced to the request round trip by the authorisation workflow. Deploying it as a process on the same server as the enforcement layer which communicates to it via IPC will introduce minimal latency, allowing for per-request authorisation. Deploying it as a web service and having the enforcement layer communicate with it over the network will introduce more latency, perhaps requiring authorisation to be done per-session. The decision of how to implement the policy engine, and thus where to deploy it, can have an impact on the ability of the authorisation enginer to respond to the sort of changes in behaviour of an agent that might suggest an attack.","title":"Policy Engine"},{"location":"Books/Zero%20Trust%20Networks/04%20-%20Making%20Authorisation%20Decisions/#policy-storage","text":"Policies should be defined outside the engine and loaded into it on-demand. This way, policies can be updated without having to redeploy the components of the authorisation engine. Capturing the policies in version contol allows us to track changes to them over time as well as making them available to other systems in a machine-consumable format, such as git.","title":"Policy Storage"},{"location":"Books/Zero%20Trust%20Networks/04%20-%20Making%20Authorisation%20Decisions/#what-makes-a-good-policy","text":"A good policy should have the following characteristics - Fine grained, scoped to the individual resource being secured - Defined in terms of logical components on the network (network services, device endpoint classes, user roles, etc), rather than physical components, such as IP addresses. - Include a trust score component to anticipate unknown unknowns. - Include characteristic of the request being authorised, for example certain user roles should only have access to certain services.","title":"What makes a good policy"},{"location":"Books/Zero%20Trust%20Networks/04%20-%20Making%20Authorisation%20Decisions/#who-defines-policy","text":"Having sysadmin manage a large number of fine-grained policies puts a lot of burden on them Alieviate this by having people deploying a service write the policy This can lead to a problem of inconsistently scope policies, with some being overly broad. Solve this with two workflow changes Review by someone else who can question certain decisions in the design of the policy Overlay broad infrastructure policies on to of fine grained service policies, creating a set of guardrails.","title":"Who Defines Policy"},{"location":"Books/Zero%20Trust%20Networks/04%20-%20Making%20Authorisation%20Decisions/#trust-engine","text":"performs risk analysis against a particular request or action feeds its assessment to the policy engine for an ultimate authorisation decision uses both static and dynamic rules to determine strust static rules such as multiple failed authentication attempts from a user, or a device missing the latest security patches dynamic rules making use of machine learning to calculate a score from observable facts","title":"Trust Engine"},{"location":"Books/Zero%20Trust%20Networks/04%20-%20Making%20Authorisation%20Decisions/#what-entities-are-scored","text":"We should score the user and device that are used to compose the agent, as well as the agent itself. - If a users credentials were being brute forced, authorisation of the network agent would be sufficient to block those requests without locking the users account. - However, consider requests from a device with a suspicious history, but a currently valid network agent. This is an argument for the device to be authorised. - Consider also an insider using multiple devices to cover their tracks. The network agent from each device may be valid, but the users behaviour of changing devices resgularly should drop their trust score. All three entities should be scored, and the scores all passed to the policy engine to decide how to act.","title":"What entities are scored"},{"location":"Books/Zero%20Trust%20Networks/04%20-%20Making%20Authorisation%20Decisions/#exposing-scores-considered-risky","text":"The trust scores should not be exposed to the end user of a system since it can help an attacker modify their behaviour to increase their trust score.","title":"Exposing Scores Considered Risky"},{"location":"Books/Zero%20Trust%20Networks/04%20-%20Making%20Authorisation%20Decisions/#data-stores","text":"","title":"Data Stores"},{"location":"Books/Zero%20Trust%20Networks/05%20-%20Trusting%20Devices/","text":"5 - Trusting Devices Bootstrapping Trust A new device needs to have its trust injected into it, and this is done with a golden image whos software is all verified, bringing the device into a known trusted state. Its identity can then be added by provisioning a certificate signed by the organisations private certificate authority. Generating and Securing Identity Once the certificate has been generated and provisioned, its corresponding private key must also be protected. The most effective way to do this is with either Hardware Security Module (HSM) or Trusted Platform Module (TPM), components of the hardware that carry out cryptographic operations. The private key is stored in this module, and the operating system has no access to it, making it very difficult to steal the private key. Identity and Security in Static and Dynamic Systems The process for signing certificates is one that must be secured so unauthorized certificates are not being generated. Having a human involed to approve a signing/provisioning workflow works well enough in a static environment. In dynamic environments, where systems scale up and down on their own, this process must be automated. In a static environment, the trust needed to sign the certificates was sourced from the human operator, but that isn't possible in an environment where the process is entirely automated. One option is to bake generic authentication material into the device image which is used to securely communicate with a signing service to generate a device-specific certificate. In this way, trust is now derived from the image in the absence of a human operator. Another source of trust is the resource manager, the system that launched the new devices. It's always able to assert \"yes, i launched this device and here is everything I know about it\". This information can be passed to the signing service. Combing the two (image and resource manager) is the best way. If an image is stolen, it can't be used to generate a certificate since the approval of the resource manager is missing, and the resource manager doens't have access to the authentication material on the image to request a certificate. Authenticating Devices with the Control Plane X.509 Using certificates signed by a certificate authority (with public or private) allows us the convenience of only distributing the public key of the CA in advance, rather than a public key for every certificate. The private key component of the certificate must be kept secure or else that device will become vulnerable if it is leaked. We can encrypt the key on the device and prompt for a password to decrypt it at time of use, but this only works for a user-facing device. On an autonomous system, we would still have to store the password somewhere, which just moves the problem around. HSM goes a long way to solving this problem for us. The ultimate problem we are trying to solve here is that we are using software (the private key) to authenticate hardware. While it is difficult to steal the private key, it is not impossible since it is not inextricably married to the device, and that is a problem that TPMs (Trusted Platform Modules) can solve. TPMs A TPM is a component of the device hardware that is designed into it by the manufacturer. It is not feasible to install such a component after the device has been manufactured. It performs the same function as a HSM except it has a private key burned into it, marrying that key to that device. The TPM generates what's called a Storage Root Key (SRK) which represents the trust root for all data encrypted with it. This key can then be used to generate intermediate keys that can only be decrypted and used if in the presence of the SRK that created it, which means it can only be used on the trusted device. TPM can be used to encrypt the private key of the X.509 certificate, and only decrypt each time it is used. If the key is stolen from the device, it is unable to be decrypted and is thus useless. This protects the key being read from disk, but doesn't prevent an attacker with elevated privileges from either reading it from memory or asking the TPM to decrypt it from them. Platform Configuration Registers (PCRs) are a feature of a TPM that stores a hash of all running software, starting from the BIOS and working up. Data encrypted using the TPM is done so in the presence of certian hashes from the PCR, a process known as sealing. Once sealed, the data can only be decrypted using the same hashes, meaning it can only be decrypted using a known good software configuration. Unless the device's private key is stored on the TPM, it is vulnerable to theft as an attacker only has to convince the TPM to decrypt it once to disclose the key itself, something that wouldn't be possible if it were stored on the TPM. To solve this problem, the TPM contains another keypair called the Endorsement Key (EK), the private component of which only exists on the TPM, making it inaccessible to the operating system. The TPM sends a quote to a remote party, containing a list of current PCR values, signed with the EK, in a process known as Remote Attestation . This party can use this to assert both the host identity (since the EK is unique to each host), and the software configuration of that host (since PCR values can't be changed). The reson a X.509 certificate is used at all, and not just the TPM key, is that TPM access is cumbersom and non-performative. Relying on it for all device authentication workflows will likely add significant latency to all requests. TPM, despite having many strenghts for use in a zero trust network, also has limitations. It is tied to hardware, which makes it difficult to use in a virtualised environment. It also is not widely adopted. It should not be seen as a requirement for zero-trust networks, only a recommendation. Hardware-Based Zero Trust Supplicant Given the limited options for deploying a TPM-based device authentication workflow, the most realistic option available is to use an authentication proxy alongside the device in question. This proxy should be deployed as close to the legacy component as possible, as it suffers from a number of the same attack vectors as legacy perimiter networks, given it is a perimiter itself. Inventory Management Maintaining an inventory database is an important part of establishing the trust of clients that are connecting to your resources. It allows us to store metadata about the devices connected the network, driving the network policies they require. This needs to be a dynamic process, able to handle new workloads joining the network, both as new client devices are onboarded and as new virtualised and container workloads come online. This dynamic process invovles new devices going through a secure introduction whereby it is introduced to the existing authorisation engine and assigned a degree of trust. A good secure introduction system is - single-use - short-lived - third-party Renewing Device Trust Rotation of devices should be done for the same reason as the rotation of credentials - the longer a device has been running, the more suceptible it becomes to attack and compromise. There are three scenarios we must consider when talking about rotating devices: - virtual resources, like VMs - physical datacentre resources - client devices With virtual resources, it's quite straightforward to recycle them if you are using configuration management or Infrastructure as Code tools. With physical resources in the datacentre, the most practical way to rotate them, stopping short of replacing them kit entirely, is to reimage them. Client devices are the most problematic scenario. A balance must be achieved between security of the network and convenience of the user. The longer we go between reimaging a client device, the more secure our endpoints must be to compensate. In the event you are unable to reimage a device in a timely manner, or you want extra confirmation that the device is in a good state, two methods exist to verify the device. Local measurement is where the device sends a report of its configuration to a remote endpoint. There are two ways of doing this: hardware-backed and softeware-backed . Hardware-backed can leverage the TPM and send a list of hashes to the remote endpoint for remote-atestation . The downside to this is it can only confirm low-level software configuration, and will miss that an attacker has started a process in user-space. For this, software-backed measurement can be employed such as installed a vulneability scanner on the device. The problem here is that an attacker who has gained elevated privileges can falsify the results sent back. Hardware-backed measurement is reliable but limited, while software-backed is vulnerable to exploitation, but can deliver a broad report on the state of the device. The best solution is remote measurement . This is where a remote system inspects the devices itself, rather than relying on the device to report their own state. A compromised device can report anything it wants, so this mitigates that risk with separation of duties. It's the difference between asking someone if they robbed a bank and watching them do so. They are unlikely to confess to doing it, but if you catch them in the act it's hard to argue against it. Software Configuration Management Existing configuration management systems can be used as an inventory management system because of the rich data they collect on the nodes under their control. This is useful for young zero trust networks since it lowers the barrier to entry by repurposing systems that are likely already in use. It's important to bear in mind that all the information reported by the CM system is self-reported by the node, meaning a compromised node can misrepresent itself, so this information should be taken as a hint when making decisions, rather than the truth. For validating the key attributes of the device, such as device type, role, ip address and public key, the provisioner is the trusted system that can verify those details. Since these attributes are the important ones that are used for making decisions, write access to these should be tightly controlled to prevent an attacker misrepresenting the device. Using Device Data for User Authorization Since device authentication comes before user authentication, we can use knowledge of the device in the user authorization workflow. If a user is logging in from a device that is not found in the inventory management system, or has been but has also been issued to another employee, then this can result in a degraded trust score. This is why it's important to maintain an accurate inventory of corporate devices. Trust Signals There are a few signals that can be used to ascertain the trustworthiness of a device on the network. Time Since Image - the longer a device goes without being re-imaged, the higher the risk of it being compromised. Historical access - a device not seen in months suddenly accessing a resource is suspicious, as is a device that has made 1000 requests to a resource in the last hours despite only making 4 in the last month. Location - the absolute location of the device on the network shouldn't be used as a trust signal, rather the patterns in the location. A device that is logging on from Europe now after logging on from the US an hour before is suspicious. Network Communication Patterns - a node that has never used SSH before suddenly starting to make SSH connections to hosting providers in another continent is suspicious.","title":"5 - Trusting Devices"},{"location":"Books/Zero%20Trust%20Networks/05%20-%20Trusting%20Devices/#5-trusting-devices","text":"","title":"5 - Trusting Devices"},{"location":"Books/Zero%20Trust%20Networks/05%20-%20Trusting%20Devices/#bootstrapping-trust","text":"A new device needs to have its trust injected into it, and this is done with a golden image whos software is all verified, bringing the device into a known trusted state. Its identity can then be added by provisioning a certificate signed by the organisations private certificate authority.","title":"Bootstrapping Trust"},{"location":"Books/Zero%20Trust%20Networks/05%20-%20Trusting%20Devices/#generating-and-securing-identity","text":"Once the certificate has been generated and provisioned, its corresponding private key must also be protected. The most effective way to do this is with either Hardware Security Module (HSM) or Trusted Platform Module (TPM), components of the hardware that carry out cryptographic operations. The private key is stored in this module, and the operating system has no access to it, making it very difficult to steal the private key.","title":"Generating and Securing Identity"},{"location":"Books/Zero%20Trust%20Networks/05%20-%20Trusting%20Devices/#identity-and-security-in-static-and-dynamic-systems","text":"The process for signing certificates is one that must be secured so unauthorized certificates are not being generated. Having a human involed to approve a signing/provisioning workflow works well enough in a static environment. In dynamic environments, where systems scale up and down on their own, this process must be automated. In a static environment, the trust needed to sign the certificates was sourced from the human operator, but that isn't possible in an environment where the process is entirely automated. One option is to bake generic authentication material into the device image which is used to securely communicate with a signing service to generate a device-specific certificate. In this way, trust is now derived from the image in the absence of a human operator. Another source of trust is the resource manager, the system that launched the new devices. It's always able to assert \"yes, i launched this device and here is everything I know about it\". This information can be passed to the signing service. Combing the two (image and resource manager) is the best way. If an image is stolen, it can't be used to generate a certificate since the approval of the resource manager is missing, and the resource manager doens't have access to the authentication material on the image to request a certificate.","title":"Identity and Security in Static and Dynamic Systems"},{"location":"Books/Zero%20Trust%20Networks/05%20-%20Trusting%20Devices/#authenticating-devices-with-the-control-plane","text":"","title":"Authenticating Devices with the Control Plane"},{"location":"Books/Zero%20Trust%20Networks/05%20-%20Trusting%20Devices/#x509","text":"Using certificates signed by a certificate authority (with public or private) allows us the convenience of only distributing the public key of the CA in advance, rather than a public key for every certificate. The private key component of the certificate must be kept secure or else that device will become vulnerable if it is leaked. We can encrypt the key on the device and prompt for a password to decrypt it at time of use, but this only works for a user-facing device. On an autonomous system, we would still have to store the password somewhere, which just moves the problem around. HSM goes a long way to solving this problem for us. The ultimate problem we are trying to solve here is that we are using software (the private key) to authenticate hardware. While it is difficult to steal the private key, it is not impossible since it is not inextricably married to the device, and that is a problem that TPMs (Trusted Platform Modules) can solve.","title":"X.509"},{"location":"Books/Zero%20Trust%20Networks/05%20-%20Trusting%20Devices/#tpms","text":"A TPM is a component of the device hardware that is designed into it by the manufacturer. It is not feasible to install such a component after the device has been manufactured. It performs the same function as a HSM except it has a private key burned into it, marrying that key to that device. The TPM generates what's called a Storage Root Key (SRK) which represents the trust root for all data encrypted with it. This key can then be used to generate intermediate keys that can only be decrypted and used if in the presence of the SRK that created it, which means it can only be used on the trusted device. TPM can be used to encrypt the private key of the X.509 certificate, and only decrypt each time it is used. If the key is stolen from the device, it is unable to be decrypted and is thus useless. This protects the key being read from disk, but doesn't prevent an attacker with elevated privileges from either reading it from memory or asking the TPM to decrypt it from them. Platform Configuration Registers (PCRs) are a feature of a TPM that stores a hash of all running software, starting from the BIOS and working up. Data encrypted using the TPM is done so in the presence of certian hashes from the PCR, a process known as sealing. Once sealed, the data can only be decrypted using the same hashes, meaning it can only be decrypted using a known good software configuration. Unless the device's private key is stored on the TPM, it is vulnerable to theft as an attacker only has to convince the TPM to decrypt it once to disclose the key itself, something that wouldn't be possible if it were stored on the TPM. To solve this problem, the TPM contains another keypair called the Endorsement Key (EK), the private component of which only exists on the TPM, making it inaccessible to the operating system. The TPM sends a quote to a remote party, containing a list of current PCR values, signed with the EK, in a process known as Remote Attestation . This party can use this to assert both the host identity (since the EK is unique to each host), and the software configuration of that host (since PCR values can't be changed). The reson a X.509 certificate is used at all, and not just the TPM key, is that TPM access is cumbersom and non-performative. Relying on it for all device authentication workflows will likely add significant latency to all requests. TPM, despite having many strenghts for use in a zero trust network, also has limitations. It is tied to hardware, which makes it difficult to use in a virtualised environment. It also is not widely adopted. It should not be seen as a requirement for zero-trust networks, only a recommendation.","title":"TPMs"},{"location":"Books/Zero%20Trust%20Networks/05%20-%20Trusting%20Devices/#hardware-based-zero-trust-supplicant","text":"Given the limited options for deploying a TPM-based device authentication workflow, the most realistic option available is to use an authentication proxy alongside the device in question. This proxy should be deployed as close to the legacy component as possible, as it suffers from a number of the same attack vectors as legacy perimiter networks, given it is a perimiter itself.","title":"Hardware-Based Zero Trust Supplicant"},{"location":"Books/Zero%20Trust%20Networks/05%20-%20Trusting%20Devices/#inventory-management","text":"Maintaining an inventory database is an important part of establishing the trust of clients that are connecting to your resources. It allows us to store metadata about the devices connected the network, driving the network policies they require. This needs to be a dynamic process, able to handle new workloads joining the network, both as new client devices are onboarded and as new virtualised and container workloads come online. This dynamic process invovles new devices going through a secure introduction whereby it is introduced to the existing authorisation engine and assigned a degree of trust. A good secure introduction system is - single-use - short-lived - third-party","title":"Inventory Management"},{"location":"Books/Zero%20Trust%20Networks/05%20-%20Trusting%20Devices/#renewing-device-trust","text":"Rotation of devices should be done for the same reason as the rotation of credentials - the longer a device has been running, the more suceptible it becomes to attack and compromise. There are three scenarios we must consider when talking about rotating devices: - virtual resources, like VMs - physical datacentre resources - client devices With virtual resources, it's quite straightforward to recycle them if you are using configuration management or Infrastructure as Code tools. With physical resources in the datacentre, the most practical way to rotate them, stopping short of replacing them kit entirely, is to reimage them. Client devices are the most problematic scenario. A balance must be achieved between security of the network and convenience of the user. The longer we go between reimaging a client device, the more secure our endpoints must be to compensate. In the event you are unable to reimage a device in a timely manner, or you want extra confirmation that the device is in a good state, two methods exist to verify the device. Local measurement is where the device sends a report of its configuration to a remote endpoint. There are two ways of doing this: hardware-backed and softeware-backed . Hardware-backed can leverage the TPM and send a list of hashes to the remote endpoint for remote-atestation . The downside to this is it can only confirm low-level software configuration, and will miss that an attacker has started a process in user-space. For this, software-backed measurement can be employed such as installed a vulneability scanner on the device. The problem here is that an attacker who has gained elevated privileges can falsify the results sent back. Hardware-backed measurement is reliable but limited, while software-backed is vulnerable to exploitation, but can deliver a broad report on the state of the device. The best solution is remote measurement . This is where a remote system inspects the devices itself, rather than relying on the device to report their own state. A compromised device can report anything it wants, so this mitigates that risk with separation of duties. It's the difference between asking someone if they robbed a bank and watching them do so. They are unlikely to confess to doing it, but if you catch them in the act it's hard to argue against it.","title":"Renewing Device Trust"},{"location":"Books/Zero%20Trust%20Networks/05%20-%20Trusting%20Devices/#software-configuration-management","text":"Existing configuration management systems can be used as an inventory management system because of the rich data they collect on the nodes under their control. This is useful for young zero trust networks since it lowers the barrier to entry by repurposing systems that are likely already in use. It's important to bear in mind that all the information reported by the CM system is self-reported by the node, meaning a compromised node can misrepresent itself, so this information should be taken as a hint when making decisions, rather than the truth. For validating the key attributes of the device, such as device type, role, ip address and public key, the provisioner is the trusted system that can verify those details. Since these attributes are the important ones that are used for making decisions, write access to these should be tightly controlled to prevent an attacker misrepresenting the device.","title":"Software Configuration Management"},{"location":"Books/Zero%20Trust%20Networks/05%20-%20Trusting%20Devices/#using-device-data-for-user-authorization","text":"Since device authentication comes before user authentication, we can use knowledge of the device in the user authorization workflow. If a user is logging in from a device that is not found in the inventory management system, or has been but has also been issued to another employee, then this can result in a degraded trust score. This is why it's important to maintain an accurate inventory of corporate devices.","title":"Using Device Data for User Authorization"},{"location":"Books/Zero%20Trust%20Networks/05%20-%20Trusting%20Devices/#trust-signals","text":"There are a few signals that can be used to ascertain the trustworthiness of a device on the network. Time Since Image - the longer a device goes without being re-imaged, the higher the risk of it being compromised. Historical access - a device not seen in months suddenly accessing a resource is suspicious, as is a device that has made 1000 requests to a resource in the last hours despite only making 4 in the last month. Location - the absolute location of the device on the network shouldn't be used as a trust signal, rather the patterns in the location. A device that is logging on from Europe now after logging on from the US an hour before is suspicious. Network Communication Patterns - a node that has never used SSH before suddenly starting to make SSH connections to hosting providers in another continent is suspicious.","title":"Trust Signals"},{"location":"Books/Zero%20Trust%20Networks/06%20-%20Trusting%20Users/","text":"6 - Trusting Users Users and devices should be authenticated separately, and device authentication shouldn't be conflated with user authentication. You can have scenarios where users have multiple devices, in which case you'd have to copy the device certificate to the other devices. You also can't guarantee the authenticated user is the one behind the keyboard. Identity Authority There are two types of identity: authoritative and informal . An informal identity is how groups self-assemble identity. It is things like what someone looks like and sounds like, how they dress and how they act, what their interests are. A persons informal identity is how you are able to recognize them when some parts of the identity are obscured, such as when they phone you and you can't see what they look like. People can assume an informal identity, for example when they sign up for a forum, and they can steal someone else's, for example by reusing someones username and avatar on another forum. A person can create several identities or multiple individuals can share a single identity. An authoritative identity is one created when a stronger form of identity is required for higher stakes. Examples of such identities include government issued IDs such as drivers licenses and birth certificates. Such a system must have a way for a person to regain control of their identity if it is lost, such as through identity theft. ## Bootstrapping Identity in a Private System Connecting a person to their digital identity for the first time is a sensitive process that must be done correctly. It's basically secure introduction for humans, and there are multiple ways it can be done: - Government-Issued Identification - this identification was designed for this very purpose, and the process can be made more secure by requiring multiple forms of identification. - Human Interaction - having a trusted individual be physically present for the bootstrapping process, such as a hiring manager escorting a new hire to collect and set up their laptop for the first time, reduces the risk introduced by a digital-based bootstrap. If the laptop was shipped in a \"Trust On First Use\" configuration, then there is a risk that the package can be intercepted and activated by an untrusted person. - Expectations and Stars - this is the process of collecting as many pieces of information as reasonable to identify an individual. It is similar to the network agent in a zero trust network, though the information is verified by a human. A background check on a new employee is a way some companies set expectations. Storing Identity A centrally managed User Directory is the most practical way of storing user identities. It acts as a source of truth for who someone is and what they are allowed to do. This information is best not stored in a single data repository due to the sensitive nature of the information for making authorisation decisions, and the raw information itself should never be exposed. The data should be logically partitioned into different stores (the decision about how to split the data will be context specific) and these stores should only exposes very contrained APIs that allow clients to make assertions on the data contained within, without knowing what the data is. Since this directory is the authoritative source of truth for the identity of all users in the organisation, it must be maintained to keep on top of people joining and leaving the company. The best situation would be an automated connection between the directory and the company's HR system. When someone leaves the organisation, their identity can be automatically deactivated, reducing the risk of people maintaining access to systems after leaving. When to Authenticate Identity Security systems must be user friendly in order to be effective. Security measures that users find inconvenient to use will simply be circumvented, undermining the intentions of the masures in the first place. Authenticating for Trust Tha amount of authentucation required to access a service or perform a task shoudl be proportional to the sensitivity of the servive/task. Logging into your bank account should require more authentication that logging into your subscription music service. In a zero trust network, additional authentication can be used to boost a users trust score, either when performing a task requiring elevated privileges, or when their trust score has dropped below a certain threshold. Trust as the Authentication Driver Instead of presenting arbitrary authentication requirements when performing tasks, a zerot rust network can instead define a minimum trust score required to carry out the task. If the authenticated user already meet the trust score requirement, they are able to proceed without additional authentication. If they do not meet the trust score requirement, then they will be presented with additional authentication. The Use of Multiple Channels The use of multiple channels, either for authentication or authorisation, can be effective not because compromising any single channel is hard, but because compromising many is hard. Caching Identity and Trust Asking a user to re-enter their TOPT every time they perform any task will be inconvenient and frustrating to the user, so their trusted session should be cached for some period of time. The longer a session is cached, however, increases the risk posed by changes in the user behavious as the control plane is unable to re-evaluate the users trust until the session has expired. The ideal situation is to have the users trust evaluated at each request, though this might not be practical in many situations. When an application validates an SSO token, it should set the session tokens generated by the control plane, rather than generating its owen tokens. Using control plane tokens allows the control plane to revoke trust when behaviour changes, whereas using tokens generated by the application takes that control away. How to Authenticate Identity The three most common factors used in authentication flows are: - something you know, such as a password - something you have, such as a hardware token - something you are, such as a fingerprint Which factors you require for authentication will depend on the situation. A user on a desktop or laptop computer might be best prompted for a password and a hardware token, where someone on a mobile device might be better off being asked for a pin number and a fingerprint. Something you know: Passwords A good password has the following characteristics: - it's long - it's difficult to guess - it is now reused A password manager can make all of these easy, since remembering lots of unique passwords is a high bar for most users. Something You Have: TOTP TOTP, defined in RFC 6238, can generate a code that is passed to the authentication service. If the code matches the one generated by the service, then it proves the user is in posession of the shared key. There is a risk that this shared key can be stolen, for example if the user connects to a malicious endpoint that might extract the key. An alternative to using the TOTP algorithm is to have the service transmit a temporary code to the user via an encrypted channel that they user then replays to the service. SMS is not an encrypted channel. Something You Have: Certificates Generating a certificate from a strong private key then signing it with the organisations private key is another way to generate a credential that identifies a user. This certificate can hold a richer set of metadata on the user since it is being consumed by computers, not people. The problem with this is that it relies on the certificate being stored securely. It is recommended to generate and store the private key and certificate on dedicated hardware to prevent theft of the key. Something You Have: Security Tokens Physical hardware tokens such as yubikeys can tie a users identity to a particular piece of hardware by storing the private key in the hardware. In order to steal the users identity, the physical theft of the hardware token would be required. This isn't an alternative to the other authentication factors, since these devices can still be stolen. They should instead be used alongside at least one other factor. Something You Are: Biometrics Biometrics such as fingerprints are becoming more common in authentication as the devices for reading them are making their way into more consumer technology. While a fingerprint is a strong way of identifying a user, it isn't a foolproof way of doing so. Fingerprints can be stolen since we leave them on everything we touch. It has been shown that these can be photographed and replicated via a 3D printer before being used to successfully trick a scanner. There can also be accessibility issues, since people can be born without fingerprints, or can have lost their finders in an accident. Out-of-Band Authentication Out-of-Band authentication is where additional authentication of the user is carried out over a different channel from the original authentication request. For example, a user might log into a system, and received a phone call with a TOTP to complete the process. Single Sign On SSO allows authentication to be decoupled from end services and reduces the amount of authentication that needs to be performed when a user is interacting with multiple services. The recommended approach is to have the end services validate the SSO tokens against the central identity service as often as possible. This allows for vairance in trust scores to be reflected in a users access in a timely manner. Authentication in a zero trust network should always be a concern of the control plane. End services should not be carrying out their own authentication. Moving Toward a Local Auth Solution It is possible to have users authenticate with end services at a local level while still keeping authentication a concern of the control plane. Users can pass their credentials to a trusted local device which then attests to that identity with the remote identity service. This local device acts like a password manager, but instead of storing passwords it stores private keys. The user unlocks the device and privides their private key for authentication. This provides a number of benefits: - replay attacks can be mitigated vi a challange and response sytem - man in the middle attacks can be twarted by having the authentication service refuse to sign the challenge unless it originated fromt he same domaint he user is visiting - credential reuse is non-existent since per-service credentials can be trivially generated. Authenticating and Authorizing a Group As the level of trust inplicit in a system approaches zero, the amount of trust placed in a single individual also reaches a lower limit, where authentication needs to be carried out with two or more users. Shamir's Secret Sharing This is an algorithm for splitting a secret and n parts which can then be distributed to a group of individuals. Depending on how the algorithm was configured when the parts were generated, k parts are needed to recalculate the original value. Red October See Something, Say Something The traditional role of security teams \"owning\" security on behal of the organisation has typically lead to the degradation of security since an antagonistic relationship has usually formed between security and the rest of the organisation. Users of the system should be encouraged to be active participants in the security of the system, reporting anything they think is suspicious, such as phishing emails. They should also be encouraged to report issues affecting themsevles, such as losing a device, without fear of being shamed. Trust Signals There are a number of signals that can contribute to the assessment of a users trust: - historical behaviour, for example authentiticating orders of magnitude more times than they have done in the past - origin of the traffic, for example authentication attempts orginating from known sources of malicious activity - geolocation, for example comparing the users current location to a list of previous locations","title":"6 - Trusting Users"},{"location":"Books/Zero%20Trust%20Networks/06%20-%20Trusting%20Users/#6-trusting-users","text":"Users and devices should be authenticated separately, and device authentication shouldn't be conflated with user authentication. You can have scenarios where users have multiple devices, in which case you'd have to copy the device certificate to the other devices. You also can't guarantee the authenticated user is the one behind the keyboard.","title":"6 - Trusting Users"},{"location":"Books/Zero%20Trust%20Networks/06%20-%20Trusting%20Users/#identity-authority","text":"There are two types of identity: authoritative and informal . An informal identity is how groups self-assemble identity. It is things like what someone looks like and sounds like, how they dress and how they act, what their interests are. A persons informal identity is how you are able to recognize them when some parts of the identity are obscured, such as when they phone you and you can't see what they look like. People can assume an informal identity, for example when they sign up for a forum, and they can steal someone else's, for example by reusing someones username and avatar on another forum. A person can create several identities or multiple individuals can share a single identity. An authoritative identity is one created when a stronger form of identity is required for higher stakes. Examples of such identities include government issued IDs such as drivers licenses and birth certificates. Such a system must have a way for a person to regain control of their identity if it is lost, such as through identity theft. ## Bootstrapping Identity in a Private System Connecting a person to their digital identity for the first time is a sensitive process that must be done correctly. It's basically secure introduction for humans, and there are multiple ways it can be done: - Government-Issued Identification - this identification was designed for this very purpose, and the process can be made more secure by requiring multiple forms of identification. - Human Interaction - having a trusted individual be physically present for the bootstrapping process, such as a hiring manager escorting a new hire to collect and set up their laptop for the first time, reduces the risk introduced by a digital-based bootstrap. If the laptop was shipped in a \"Trust On First Use\" configuration, then there is a risk that the package can be intercepted and activated by an untrusted person. - Expectations and Stars - this is the process of collecting as many pieces of information as reasonable to identify an individual. It is similar to the network agent in a zero trust network, though the information is verified by a human. A background check on a new employee is a way some companies set expectations.","title":"Identity Authority"},{"location":"Books/Zero%20Trust%20Networks/06%20-%20Trusting%20Users/#storing-identity","text":"A centrally managed User Directory is the most practical way of storing user identities. It acts as a source of truth for who someone is and what they are allowed to do. This information is best not stored in a single data repository due to the sensitive nature of the information for making authorisation decisions, and the raw information itself should never be exposed. The data should be logically partitioned into different stores (the decision about how to split the data will be context specific) and these stores should only exposes very contrained APIs that allow clients to make assertions on the data contained within, without knowing what the data is. Since this directory is the authoritative source of truth for the identity of all users in the organisation, it must be maintained to keep on top of people joining and leaving the company. The best situation would be an automated connection between the directory and the company's HR system. When someone leaves the organisation, their identity can be automatically deactivated, reducing the risk of people maintaining access to systems after leaving.","title":"Storing Identity"},{"location":"Books/Zero%20Trust%20Networks/06%20-%20Trusting%20Users/#when-to-authenticate-identity","text":"Security systems must be user friendly in order to be effective. Security measures that users find inconvenient to use will simply be circumvented, undermining the intentions of the masures in the first place.","title":"When to Authenticate Identity"},{"location":"Books/Zero%20Trust%20Networks/06%20-%20Trusting%20Users/#authenticating-for-trust","text":"Tha amount of authentucation required to access a service or perform a task shoudl be proportional to the sensitivity of the servive/task. Logging into your bank account should require more authentication that logging into your subscription music service. In a zero trust network, additional authentication can be used to boost a users trust score, either when performing a task requiring elevated privileges, or when their trust score has dropped below a certain threshold.","title":"Authenticating for Trust"},{"location":"Books/Zero%20Trust%20Networks/06%20-%20Trusting%20Users/#trust-as-the-authentication-driver","text":"Instead of presenting arbitrary authentication requirements when performing tasks, a zerot rust network can instead define a minimum trust score required to carry out the task. If the authenticated user already meet the trust score requirement, they are able to proceed without additional authentication. If they do not meet the trust score requirement, then they will be presented with additional authentication.","title":"Trust as the Authentication Driver"},{"location":"Books/Zero%20Trust%20Networks/06%20-%20Trusting%20Users/#the-use-of-multiple-channels","text":"The use of multiple channels, either for authentication or authorisation, can be effective not because compromising any single channel is hard, but because compromising many is hard.","title":"The Use of Multiple Channels"},{"location":"Books/Zero%20Trust%20Networks/06%20-%20Trusting%20Users/#caching-identity-and-trust","text":"Asking a user to re-enter their TOPT every time they perform any task will be inconvenient and frustrating to the user, so their trusted session should be cached for some period of time. The longer a session is cached, however, increases the risk posed by changes in the user behavious as the control plane is unable to re-evaluate the users trust until the session has expired. The ideal situation is to have the users trust evaluated at each request, though this might not be practical in many situations. When an application validates an SSO token, it should set the session tokens generated by the control plane, rather than generating its owen tokens. Using control plane tokens allows the control plane to revoke trust when behaviour changes, whereas using tokens generated by the application takes that control away.","title":"Caching Identity and Trust"},{"location":"Books/Zero%20Trust%20Networks/06%20-%20Trusting%20Users/#how-to-authenticate-identity","text":"The three most common factors used in authentication flows are: - something you know, such as a password - something you have, such as a hardware token - something you are, such as a fingerprint Which factors you require for authentication will depend on the situation. A user on a desktop or laptop computer might be best prompted for a password and a hardware token, where someone on a mobile device might be better off being asked for a pin number and a fingerprint.","title":"How to Authenticate Identity"},{"location":"Books/Zero%20Trust%20Networks/06%20-%20Trusting%20Users/#something-you-know-passwords","text":"A good password has the following characteristics: - it's long - it's difficult to guess - it is now reused A password manager can make all of these easy, since remembering lots of unique passwords is a high bar for most users.","title":"Something you know: Passwords"},{"location":"Books/Zero%20Trust%20Networks/06%20-%20Trusting%20Users/#something-you-have-totp","text":"TOTP, defined in RFC 6238, can generate a code that is passed to the authentication service. If the code matches the one generated by the service, then it proves the user is in posession of the shared key. There is a risk that this shared key can be stolen, for example if the user connects to a malicious endpoint that might extract the key. An alternative to using the TOTP algorithm is to have the service transmit a temporary code to the user via an encrypted channel that they user then replays to the service. SMS is not an encrypted channel.","title":"Something You Have: TOTP"},{"location":"Books/Zero%20Trust%20Networks/06%20-%20Trusting%20Users/#something-you-have-certificates","text":"Generating a certificate from a strong private key then signing it with the organisations private key is another way to generate a credential that identifies a user. This certificate can hold a richer set of metadata on the user since it is being consumed by computers, not people. The problem with this is that it relies on the certificate being stored securely. It is recommended to generate and store the private key and certificate on dedicated hardware to prevent theft of the key.","title":"Something You Have: Certificates"},{"location":"Books/Zero%20Trust%20Networks/06%20-%20Trusting%20Users/#something-you-have-security-tokens","text":"Physical hardware tokens such as yubikeys can tie a users identity to a particular piece of hardware by storing the private key in the hardware. In order to steal the users identity, the physical theft of the hardware token would be required. This isn't an alternative to the other authentication factors, since these devices can still be stolen. They should instead be used alongside at least one other factor.","title":"Something You Have: Security Tokens"},{"location":"Books/Zero%20Trust%20Networks/06%20-%20Trusting%20Users/#something-you-are-biometrics","text":"Biometrics such as fingerprints are becoming more common in authentication as the devices for reading them are making their way into more consumer technology. While a fingerprint is a strong way of identifying a user, it isn't a foolproof way of doing so. Fingerprints can be stolen since we leave them on everything we touch. It has been shown that these can be photographed and replicated via a 3D printer before being used to successfully trick a scanner. There can also be accessibility issues, since people can be born without fingerprints, or can have lost their finders in an accident.","title":"Something You Are: Biometrics"},{"location":"Books/Zero%20Trust%20Networks/06%20-%20Trusting%20Users/#out-of-band-authentication","text":"Out-of-Band authentication is where additional authentication of the user is carried out over a different channel from the original authentication request. For example, a user might log into a system, and received a phone call with a TOTP to complete the process.","title":"Out-of-Band Authentication"},{"location":"Books/Zero%20Trust%20Networks/06%20-%20Trusting%20Users/#single-sign-on","text":"SSO allows authentication to be decoupled from end services and reduces the amount of authentication that needs to be performed when a user is interacting with multiple services. The recommended approach is to have the end services validate the SSO tokens against the central identity service as often as possible. This allows for vairance in trust scores to be reflected in a users access in a timely manner. Authentication in a zero trust network should always be a concern of the control plane. End services should not be carrying out their own authentication.","title":"Single Sign On"},{"location":"Books/Zero%20Trust%20Networks/06%20-%20Trusting%20Users/#moving-toward-a-local-auth-solution","text":"It is possible to have users authenticate with end services at a local level while still keeping authentication a concern of the control plane. Users can pass their credentials to a trusted local device which then attests to that identity with the remote identity service. This local device acts like a password manager, but instead of storing passwords it stores private keys. The user unlocks the device and privides their private key for authentication. This provides a number of benefits: - replay attacks can be mitigated vi a challange and response sytem - man in the middle attacks can be twarted by having the authentication service refuse to sign the challenge unless it originated fromt he same domaint he user is visiting - credential reuse is non-existent since per-service credentials can be trivially generated.","title":"Moving Toward a Local Auth Solution"},{"location":"Books/Zero%20Trust%20Networks/06%20-%20Trusting%20Users/#authenticating-and-authorizing-a-group","text":"As the level of trust inplicit in a system approaches zero, the amount of trust placed in a single individual also reaches a lower limit, where authentication needs to be carried out with two or more users.","title":"Authenticating and Authorizing a Group"},{"location":"Books/Zero%20Trust%20Networks/06%20-%20Trusting%20Users/#shamirs-secret-sharing","text":"This is an algorithm for splitting a secret and n parts which can then be distributed to a group of individuals. Depending on how the algorithm was configured when the parts were generated, k parts are needed to recalculate the original value.","title":"Shamir's Secret Sharing"},{"location":"Books/Zero%20Trust%20Networks/06%20-%20Trusting%20Users/#red-october","text":"","title":"Red October"},{"location":"Books/Zero%20Trust%20Networks/06%20-%20Trusting%20Users/#see-something-say-something","text":"The traditional role of security teams \"owning\" security on behal of the organisation has typically lead to the degradation of security since an antagonistic relationship has usually formed between security and the rest of the organisation. Users of the system should be encouraged to be active participants in the security of the system, reporting anything they think is suspicious, such as phishing emails. They should also be encouraged to report issues affecting themsevles, such as losing a device, without fear of being shamed.","title":"See Something, Say Something"},{"location":"Books/Zero%20Trust%20Networks/06%20-%20Trusting%20Users/#trust-signals","text":"There are a number of signals that can contribute to the assessment of a users trust: - historical behaviour, for example authentiticating orders of magnitude more times than they have done in the past - origin of the traffic, for example authentication attempts orginating from known sources of malicious activity - geolocation, for example comparing the users current location to a list of previous locations","title":"Trust Signals"},{"location":"Books/Zero%20Trust%20Networks/07%20-%20Trusting%20Applications/","text":"7 - Trusting Applications There are several requirements for trusting the code running on a device: - trusting the programmers who wrote the code - trusting the build process that processes the code into a trust-worthy application - trusting the deployment process that puts the code on the infrastructure to be run - continual monitoring of the trusted applications for attempts to coerce them with malicious actions Understanding the Application Pipeline The four steps in the development pipeline of an application can generally be broken down into four distrinct phases: - source code - build - distribution - execution Each of these steps needs to be fully auditable with cryptographic validation. Trusting Source A zero trust network will attempt to identify malicious developers rather than reduce the trust of the non-malicious ones. Securing the Repository Securing the repository from which the build system reads the code is needed in order to secure the build pipeline, and this can be done using the traditional methods of least privilege, where a developer only has enough access to the code to complete the task at hand. Since code can enter the repository in a number of ways, however, securing the build source repository isn't usually enough. Authentic Code and the Audit Trail Storing the source code in its repository using cryptographic techniques minimises the risk of malicious code being pushed into the history of the repository. Git makes it impossible for existing commits to be edited without any other contributor noticing. It doesn't make it impossible for a trusted developer to first pull a malicious commit onto their computer before pushing it to the repository, not does it prevent a malicious actor changing the commit metadata to look as if it was written by a trusted developer. Using GPG to sign each commit mitigates these problems. The repository can reject any push that includes unsigned commits, and the build system can refuse to build any version of the code that includes unsigned commits. Code Reviews Signed contributions allows us to verify the author of the code, but not its correctness. Having a second set of eyes on each change reduce the risk of someone introducing vulnerabilities. Trusting Builds In trusting the build system, we want to assert the following three things: 1. the source code it build is the code we intended to build 2. the build process/configuration is what which we intended 3. the build itself was performed faithfully, without manipulation The Risk A build system can ingest signed code, and produce a signed application, but the build process in between is difficult to verify. Is the signed output containing the exact code we intended to build or was other malicious code compiled in? Outsourcing this to a hosted service should be done with care. You need to be able to trust the security posture of that vendor, and compare that posture to your chance of being a high value target. Trust in the build servers should be considered apart from trust in the build configuration. Changes in the configuration are easier to make than compromising the servers the build is running on. Trusted Input, Trusted Output the build system needs to verify the authenticity of the source from which it is pulling the code, commonly using TLS. It should also validate the signature on each commit and tag before starting a build. To mitigate the risk of malicious configuration causing a malicious output to be produced, the configuration for the build process should also be stored in source control with changes signed and verified in the same way as those of the source code being built. Finally, the build system should sign the output it produces so the downstream systems can verify the artifact they are consuming. The signed output and a cryptographic hash of the that output should be generated and secured before being distributed downstream. Reproducible Builds Reproducible builds are the best way of guarding against subversion of the build pipeline. The code used to create the build pipeline is build and compiled into a cryptographically verifiable binary in the same way as the output of the build system. This binary can be used to produce the same artifact bit-for-bit on a developers local machine, as well as reproducing the same output in the build pipeline. Isolating the build from the host running the build is a useful way of achieving this. historically, chroot jails have been used, and more recently contaimers or VMs have been used. Decoupling Release and Artifact Versions Immutable builds are important to protecting the trust placed in an artifact. By ensuring that a known good artifact cannot be overwritten with the same version number, we guarantee that redistribution of this artifact will not introduce any malicious code. Separating the release and build versions from one another is critical for this. If, for example, we produce a particular artifact with a particular version, but discovered a fault in the build system that required us to produce a new artifact without change the application source code, how would the version numbers be handled? The most desirable situation is to increase the version number to refect the state of reality - two artifacts have been build, so two different version numbers are required. By building our artifacts with a version (eg timestamp) separate from the release (eg semvar) we can maintain separate stories for the artifact (internal to the team) and for the release (external to the customers) and the distribution system can be responsible for mapping an artifact version to a release version. Trusting Distribution The act of promoting an artifact to be delivered downstream to customers is called Distribution. Since not all artifacts are built to be distributed, there must be trust in the choice of artifacts that are chosen for distribution. Promoting an Artifact The act of asigning a release version to an artifact described prviously should be immutable, so once the release is created, it cannot be changed, not should the artifact be changed in the act of adding this release number. Distribution Security The artifact must be secured during distribution from the build system to the consumers, and the consumers must be able to verify this. Integrity and Authenticity The integrity of a software package is typically verified through hashing, which is the process of generating a cryptographic hash of the released binary. The authenticity of the release can be verified through signing, where the author signs it with their private key and distributes the public key. The public key can be used to verify the software has not been tempered with in transit. For example, APT repositories include a Packages file that contains a checksum of each package, allowing us to verify the integrity of the packages being installed. This only protects against corruption, since an attacker can just generate a new checksum. This is solves by the Release file, which contains a checksum of the Packages file. This file is encrypted using the private key of the publisher. Being able to decrypt this file verifies that the original publisher was the one to distributed it, and not an intermediate attacker. This then verifies the integrity of the contents of the Release file, which in turn verifies the integrity of the Packages file. Trusting a Distribution Network Unless all packages are being downloaded from the build server, there will be a distribution network of intermediate servers, usually called mirrors, serving up the packages. These mirrors must be trusted by the consumer of the packages. It is not enough to use the signing and hasing methods described above. One form of attack that can come from connecting to a malicious mirror is a package can be downgraded, reintroducing security vulnerabilities that were preivously fixed. The vulnerbale package will still pass the signing and hashing tests since it is still legitimate. Client should be connecting to TLS-protected package repositories. This ensure they are connecting to a trusted repository, and that no tampering of the package can occur in transit. Humans in the Loop Some human intervention in the release process is ideal for minimising the risk of release automation being exploited to release a malicious artifact. For example, one or more people might be required to copy an artifact from the build database to the release database. Another example is having multiple people involve in a code signing ceremony, where multiple approvals are required to unlock the HSM holding the private key. Trusting an Instance In order to understand what to expect from your network you need to understand what is running on it. Upgrade-Only Policy A common attack is to force a downgrade of a software package installed on an instance to one with an exploitable vulnerbaility. This can be mitigated by enforcing an upgrade-only policy on the instances. If the package mirror is under our control, another option is to only server the latest version of the package and block access to other mirrors where a vulnerable package might be obtained. Authorized Instances Authorising the instances we have running is an important way of preventing rogue instances that have either falled out of the deployment system or have been launched by an attacker. Authorising them with a network policy as described in Chapter 4 wouldn't be sufficient, since those policies host/device specific whereas we want something application-specific. Applications can be authorised using the secrets they need. All applications need some sort of secret in order to do their job, whether it's a certificate, api key, etc, and they will retrieve them on startup. By generating these secrets on demand as the instances are launched, and setting a time limit on them, we can assert on exactly what is running in our estate since we know the number of secerts we generated. who we generated them for and how long they last. Trusted third parties in instance authorization Rather than giving the deployment service direct access to secrets, we can instead of a secret manager holding the secrets as a trusted third party. The deployment service can notify the secret manager of the impending deployment, authorising the creation and release of new secrets. The instances can then retrieve these secrets after they launch. Runtime Security Secure Coding Practices It's not feasible to act reactively to security vulnerabilities, only fixing them after they have been discovered. Developers need to be proactive in preventing them in the first place using secure coding techniques. This can take the form of using libraries that don't trust user input and sanitise it before acting on it, such as in database queries. Isolation Applications running in shared environments are at risk of an attacker being able to move leterally between them. This risk can be mitigated by running applications in isolated execution environments, examples of which include: - SELinux, AppArmour - BSD Jails - Virtualisation - Containerisation - Apple's App Sandbox - Windows Isolated Applications Isolation techniques generally break down into two categories: virtualisation and shared kernal environments. Virtualisation is generally the more secure since the application is contained within a virtual hardware environment, whereas shared kernal environments have the applications shared the same hardware, with some isolation imposed by the kernel. Active Monitoring Aside from the standard monitoring the happens in a production system, there is a need for active security monitoring. this differs from the logging of security events for review in that it actively scans the running applications for vulnerabilities, similar to the ones that might be run in a build pipeline. Some types of active security scanning are: - Fuzzing - Injection Scanning - Network Port Scanning - CVE Scanning Response to findings from these can either be to alert a human to take action, or for the system to actively respond to it, such as by revoking credentials or isolating an instance for forensics.","title":"7 - Trusting Applications"},{"location":"Books/Zero%20Trust%20Networks/07%20-%20Trusting%20Applications/#7-trusting-applications","text":"There are several requirements for trusting the code running on a device: - trusting the programmers who wrote the code - trusting the build process that processes the code into a trust-worthy application - trusting the deployment process that puts the code on the infrastructure to be run - continual monitoring of the trusted applications for attempts to coerce them with malicious actions","title":"7 - Trusting Applications"},{"location":"Books/Zero%20Trust%20Networks/07%20-%20Trusting%20Applications/#understanding-the-application-pipeline","text":"The four steps in the development pipeline of an application can generally be broken down into four distrinct phases: - source code - build - distribution - execution Each of these steps needs to be fully auditable with cryptographic validation.","title":"Understanding the Application Pipeline"},{"location":"Books/Zero%20Trust%20Networks/07%20-%20Trusting%20Applications/#trusting-source","text":"A zero trust network will attempt to identify malicious developers rather than reduce the trust of the non-malicious ones.","title":"Trusting Source"},{"location":"Books/Zero%20Trust%20Networks/07%20-%20Trusting%20Applications/#securing-the-repository","text":"Securing the repository from which the build system reads the code is needed in order to secure the build pipeline, and this can be done using the traditional methods of least privilege, where a developer only has enough access to the code to complete the task at hand. Since code can enter the repository in a number of ways, however, securing the build source repository isn't usually enough.","title":"Securing the Repository"},{"location":"Books/Zero%20Trust%20Networks/07%20-%20Trusting%20Applications/#authentic-code-and-the-audit-trail","text":"Storing the source code in its repository using cryptographic techniques minimises the risk of malicious code being pushed into the history of the repository. Git makes it impossible for existing commits to be edited without any other contributor noticing. It doesn't make it impossible for a trusted developer to first pull a malicious commit onto their computer before pushing it to the repository, not does it prevent a malicious actor changing the commit metadata to look as if it was written by a trusted developer. Using GPG to sign each commit mitigates these problems. The repository can reject any push that includes unsigned commits, and the build system can refuse to build any version of the code that includes unsigned commits.","title":"Authentic Code and the Audit Trail"},{"location":"Books/Zero%20Trust%20Networks/07%20-%20Trusting%20Applications/#code-reviews","text":"Signed contributions allows us to verify the author of the code, but not its correctness. Having a second set of eyes on each change reduce the risk of someone introducing vulnerabilities.","title":"Code Reviews"},{"location":"Books/Zero%20Trust%20Networks/07%20-%20Trusting%20Applications/#trusting-builds","text":"In trusting the build system, we want to assert the following three things: 1. the source code it build is the code we intended to build 2. the build process/configuration is what which we intended 3. the build itself was performed faithfully, without manipulation","title":"Trusting Builds"},{"location":"Books/Zero%20Trust%20Networks/07%20-%20Trusting%20Applications/#the-risk","text":"A build system can ingest signed code, and produce a signed application, but the build process in between is difficult to verify. Is the signed output containing the exact code we intended to build or was other malicious code compiled in? Outsourcing this to a hosted service should be done with care. You need to be able to trust the security posture of that vendor, and compare that posture to your chance of being a high value target. Trust in the build servers should be considered apart from trust in the build configuration. Changes in the configuration are easier to make than compromising the servers the build is running on.","title":"The Risk"},{"location":"Books/Zero%20Trust%20Networks/07%20-%20Trusting%20Applications/#trusted-input-trusted-output","text":"the build system needs to verify the authenticity of the source from which it is pulling the code, commonly using TLS. It should also validate the signature on each commit and tag before starting a build. To mitigate the risk of malicious configuration causing a malicious output to be produced, the configuration for the build process should also be stored in source control with changes signed and verified in the same way as those of the source code being built. Finally, the build system should sign the output it produces so the downstream systems can verify the artifact they are consuming. The signed output and a cryptographic hash of the that output should be generated and secured before being distributed downstream.","title":"Trusted Input, Trusted Output"},{"location":"Books/Zero%20Trust%20Networks/07%20-%20Trusting%20Applications/#reproducible-builds","text":"Reproducible builds are the best way of guarding against subversion of the build pipeline. The code used to create the build pipeline is build and compiled into a cryptographically verifiable binary in the same way as the output of the build system. This binary can be used to produce the same artifact bit-for-bit on a developers local machine, as well as reproducing the same output in the build pipeline. Isolating the build from the host running the build is a useful way of achieving this. historically, chroot jails have been used, and more recently contaimers or VMs have been used.","title":"Reproducible Builds"},{"location":"Books/Zero%20Trust%20Networks/07%20-%20Trusting%20Applications/#decoupling-release-and-artifact-versions","text":"Immutable builds are important to protecting the trust placed in an artifact. By ensuring that a known good artifact cannot be overwritten with the same version number, we guarantee that redistribution of this artifact will not introduce any malicious code. Separating the release and build versions from one another is critical for this. If, for example, we produce a particular artifact with a particular version, but discovered a fault in the build system that required us to produce a new artifact without change the application source code, how would the version numbers be handled? The most desirable situation is to increase the version number to refect the state of reality - two artifacts have been build, so two different version numbers are required. By building our artifacts with a version (eg timestamp) separate from the release (eg semvar) we can maintain separate stories for the artifact (internal to the team) and for the release (external to the customers) and the distribution system can be responsible for mapping an artifact version to a release version.","title":"Decoupling Release and Artifact Versions"},{"location":"Books/Zero%20Trust%20Networks/07%20-%20Trusting%20Applications/#trusting-distribution","text":"The act of promoting an artifact to be delivered downstream to customers is called Distribution. Since not all artifacts are built to be distributed, there must be trust in the choice of artifacts that are chosen for distribution.","title":"Trusting Distribution"},{"location":"Books/Zero%20Trust%20Networks/07%20-%20Trusting%20Applications/#promoting-an-artifact","text":"The act of asigning a release version to an artifact described prviously should be immutable, so once the release is created, it cannot be changed, not should the artifact be changed in the act of adding this release number.","title":"Promoting an Artifact"},{"location":"Books/Zero%20Trust%20Networks/07%20-%20Trusting%20Applications/#distribution-security","text":"The artifact must be secured during distribution from the build system to the consumers, and the consumers must be able to verify this.","title":"Distribution Security"},{"location":"Books/Zero%20Trust%20Networks/07%20-%20Trusting%20Applications/#integrity-and-authenticity","text":"The integrity of a software package is typically verified through hashing, which is the process of generating a cryptographic hash of the released binary. The authenticity of the release can be verified through signing, where the author signs it with their private key and distributes the public key. The public key can be used to verify the software has not been tempered with in transit. For example, APT repositories include a Packages file that contains a checksum of each package, allowing us to verify the integrity of the packages being installed. This only protects against corruption, since an attacker can just generate a new checksum. This is solves by the Release file, which contains a checksum of the Packages file. This file is encrypted using the private key of the publisher. Being able to decrypt this file verifies that the original publisher was the one to distributed it, and not an intermediate attacker. This then verifies the integrity of the contents of the Release file, which in turn verifies the integrity of the Packages file.","title":"Integrity and Authenticity"},{"location":"Books/Zero%20Trust%20Networks/07%20-%20Trusting%20Applications/#trusting-a-distribution-network","text":"Unless all packages are being downloaded from the build server, there will be a distribution network of intermediate servers, usually called mirrors, serving up the packages. These mirrors must be trusted by the consumer of the packages. It is not enough to use the signing and hasing methods described above. One form of attack that can come from connecting to a malicious mirror is a package can be downgraded, reintroducing security vulnerabilities that were preivously fixed. The vulnerbale package will still pass the signing and hashing tests since it is still legitimate. Client should be connecting to TLS-protected package repositories. This ensure they are connecting to a trusted repository, and that no tampering of the package can occur in transit.","title":"Trusting a Distribution Network"},{"location":"Books/Zero%20Trust%20Networks/07%20-%20Trusting%20Applications/#humans-in-the-loop","text":"Some human intervention in the release process is ideal for minimising the risk of release automation being exploited to release a malicious artifact. For example, one or more people might be required to copy an artifact from the build database to the release database. Another example is having multiple people involve in a code signing ceremony, where multiple approvals are required to unlock the HSM holding the private key.","title":"Humans in the Loop"},{"location":"Books/Zero%20Trust%20Networks/07%20-%20Trusting%20Applications/#trusting-an-instance","text":"In order to understand what to expect from your network you need to understand what is running on it.","title":"Trusting an Instance"},{"location":"Books/Zero%20Trust%20Networks/07%20-%20Trusting%20Applications/#upgrade-only-policy","text":"A common attack is to force a downgrade of a software package installed on an instance to one with an exploitable vulnerbaility. This can be mitigated by enforcing an upgrade-only policy on the instances. If the package mirror is under our control, another option is to only server the latest version of the package and block access to other mirrors where a vulnerable package might be obtained.","title":"Upgrade-Only Policy"},{"location":"Books/Zero%20Trust%20Networks/07%20-%20Trusting%20Applications/#authorized-instances","text":"Authorising the instances we have running is an important way of preventing rogue instances that have either falled out of the deployment system or have been launched by an attacker. Authorising them with a network policy as described in Chapter 4 wouldn't be sufficient, since those policies host/device specific whereas we want something application-specific. Applications can be authorised using the secrets they need. All applications need some sort of secret in order to do their job, whether it's a certificate, api key, etc, and they will retrieve them on startup. By generating these secrets on demand as the instances are launched, and setting a time limit on them, we can assert on exactly what is running in our estate since we know the number of secerts we generated. who we generated them for and how long they last.","title":"Authorized Instances"},{"location":"Books/Zero%20Trust%20Networks/07%20-%20Trusting%20Applications/#trusted-third-parties-in-instance-authorization","text":"Rather than giving the deployment service direct access to secrets, we can instead of a secret manager holding the secrets as a trusted third party. The deployment service can notify the secret manager of the impending deployment, authorising the creation and release of new secrets. The instances can then retrieve these secrets after they launch.","title":"Trusted third parties in instance authorization"},{"location":"Books/Zero%20Trust%20Networks/07%20-%20Trusting%20Applications/#runtime-security","text":"","title":"Runtime Security"},{"location":"Books/Zero%20Trust%20Networks/07%20-%20Trusting%20Applications/#secure-coding-practices","text":"It's not feasible to act reactively to security vulnerabilities, only fixing them after they have been discovered. Developers need to be proactive in preventing them in the first place using secure coding techniques. This can take the form of using libraries that don't trust user input and sanitise it before acting on it, such as in database queries.","title":"Secure Coding Practices"},{"location":"Books/Zero%20Trust%20Networks/07%20-%20Trusting%20Applications/#isolation","text":"Applications running in shared environments are at risk of an attacker being able to move leterally between them. This risk can be mitigated by running applications in isolated execution environments, examples of which include: - SELinux, AppArmour - BSD Jails - Virtualisation - Containerisation - Apple's App Sandbox - Windows Isolated Applications Isolation techniques generally break down into two categories: virtualisation and shared kernal environments. Virtualisation is generally the more secure since the application is contained within a virtual hardware environment, whereas shared kernal environments have the applications shared the same hardware, with some isolation imposed by the kernel.","title":"Isolation"},{"location":"Books/Zero%20Trust%20Networks/07%20-%20Trusting%20Applications/#active-monitoring","text":"Aside from the standard monitoring the happens in a production system, there is a need for active security monitoring. this differs from the logging of security events for review in that it actively scans the running applications for vulnerabilities, similar to the ones that might be run in a build pipeline. Some types of active security scanning are: - Fuzzing - Injection Scanning - Network Port Scanning - CVE Scanning Response to findings from these can either be to alert a human to take action, or for the system to actively respond to it, such as by revoking credentials or isolating an instance for forensics.","title":"Active Monitoring"},{"location":"Books/Zero%20Trust%20Networks/08%20-%20Trusting%20the%20Traffic/","text":"8 - Trusting the Traffic Encryption vs Authentication Encryption ensure that a message can only be read by the intended receiver, and authentication allows the receiver to assert that the sender is what they claim to be. Authenticity Without Encryption Omitting encryption from network traffic is rarely justifiable since it is rare to find traffic that doesn't require confidnetiality. There are few network protocols that provide strong authentication without encryption, so encryption can be seen as coming for free. Bootstrapping Trust: The First Packet A problem we have with authenticating network flows is how to we allow connections from authorised clients while silently dropping connection attempts from unauthorised clients? If we have an endpoint that needs to be accessed by clients from the internet, we don't want to reveal its existence to potential attackers by responding to every connection attempt. This is called the first packet problem , and is solved by a method called pre-authentication . Before an authorised client attempts to establish a TCP connection to the server, it first sends a UDP packet signed with its private key. Being signed indicates it is coming from an authorised client, and being UDP no response is required. The server silently opens a channel through the firewall, allowing the authorised client to connect to it. Any unknown client will not receive a response from the server since it did not send a pre-authentication packet. This mode of pre-authentication operation is called Single Packet Authorisation (SPA) . SPA is not a substitute for strong device authentication. It only downplays the first packet problem. fwknop fwknop is an open source SPA implementation. It integrates with host firewalls to create tightly scoped rules that allows only the senders IP address to pass through a specific port. The configuration is removed after a certain time, typically 30 seconds. The connection details for the flow are contained in the SPA packet, including: - 16 bytes of rnadom data - local username - local timestamp - fwknop version - SPA message type - access request (which port, etc) - SPA message digest (SHA-256 by default) - HMAC (hashed message authentication code), optional It is strongly recommended to use HMAC with fwknop. A Brief Introduction to Network Models TCP/IP OSI Network Model Physical Layer : defines the interface between network hardware and the transmission medium, including things like voltage, pin layout, etc Data Link Layer : responsible for the transmission of data over the physical layer. Only considers transmission between directly connected nodes. Doesn't know about interconnected networks. Ethernet is the most well known protocol operating at this layer. Network Layer : responsible for transmitting packets between two interconnected networks, potentially over multiple layer 2 segments. Includes concepts to allow routing data to its destination by inspecting packet details such as IP address. Transport Layer : augmenting layer 3 protocols with desirable services. TCP and UDP are both layer 4 protocols. Some of these services include: Stateful connections Multiplexing Ordered delivery Flow control Retransmission Session Layer : Provides an additional layer of state over connections, allowing for communication resumption and communication through an intermediary. Several VPN (PPTP, L2TP) and proxy protocols (SOCKS) operate at this layer. Presentation Layer : Responsibile for handling the translation between application data and transmittable data streams. TLS operates at this layer. Application Layer : Provides the high level communication protocols that an application uses to communicate on the network. Some common protocols include HTTP, DNS and SSH. TCP/IP Network Model TCP/IP defines several layers that can roughly map to the OSI layers: - Link Layer - Internet Layer: layer 3 - Transport Layer: maps to layer 4, though includes the concept of a port which gives it some layer 5 characteristics - Application Layer: covers roughly layers 5-7 TCP/IP doesn't try to create strict boundaries between the layers, and in fact considers them harmful . Where Should Zero Trust Be in the Network Model Of the two predominant network security suites (TLS and IPsec) IPsec is the prefered option for encrypting network flows. TLS is found in the application layer of the TCP/IP model (between layers 5 and 6 in the OSI model), meaning it needs to be configured on a per-application basis. This is not sufficient for a zero trust network since we need to ensure that each network flow is authenticated. IPsec, on the other hand, operates at the Internet Layer of TCP/IP (layer 3 or 4 in the OSI model), and thus can be build into the fabric of our network ensuring that all flows are encrypted and authenticated by default, without any intervention from higher layers. For ensuring that each individual network flow is authorised, there are the following options: - IPsec can use a unique security association (SA) per application. - Filtering systems, such as software firewalls, can be layered on top of IPsec. - Application-level authorisation should be useds to ensure that communications are authorised, which encryption and authentication responsibilities are delegated to IPsec. - Mutual TLS and IPsec could be layered on top of each other for a defence in depth approach, at the expense of complexity. Client and Server Split Despite its beneficial properties, IPsec's lack of real world popularity leads to the following problems: - network support issues - few networks in the wild, including AWS, support the ESP and AH protocols used by IPsec. - device support issues - IPsec has multiple configuration options that must match on both the client and server before they can communicate, and not all cipher suites might be implemented on one or the other. - application support issues - IPsec needs to be enabled and configured in the host kernel, whereas TLS is implemented via a library. This means any updates, such as applying security patches, can be more time consuming since it means updating the kernel then finding the application-specific configuration that needs changed. A Pragmatic Approach For client-server interactions, mutual TLS would be the most sensible approach where a browser is configured to present client certificates to server-side access proxies. For server-server interactions, where the server fleet are generally under more controlled configuration, IPsec would be reasonable, with UDP encapsulation where IPsec isn't supported. The IPv6 standard includes IPsec, so it is hoped that it will become more commonplace in the future. The Protocols It's important to understand the inner workings of both TLS and IPsec since they are both complictaed to configure, and this insecure configurations are common. IKE/IPsec Mutually Authenticated TLS Filtering Filtering is the act of accepting or rejecting traffic entering or leaving the network, and can be done in one of three ways: - Host filtering - Filtering of traffic at the host - Bookended filtering - Filtering of traffic by a peer host in the network - Intermediary filtering - Filtering of traffic by devices in between two hosts. Host Filtering This is where filtering happens at a software firewall on the host instance, the destination for the traffic. The benefit of this is that sofwtare firewalls are more flexible than hardware-based ones, since hardware firewalls make use of features of the hardware fo perform the filtering in a performant way. There are, however, a number of drawbacks to this model: - an attacker who gains access to the host can disbale its firewall, rendering the host defenceless if this is the only filter available. This problem can be mitigated by making use of hypervisor-level filtering, such as EC2 security groups. - allowing the traffic deep into the network before dropping it can lead to additional costs of running the network, as well as allowing for denial of service attacks as the traffic can overwelm other parts of the network before it reaches the host Bookended Filtering This is where both ingress and egress rules are used to harden the internal network. As well as a host having ingress rules for trafic allowed to reach it, it also has egress rules for the traffic its allowed to send to other hosts. In this scenario, not only must traffic be authorised to leave its source, it must also be authorised to enter its destination. This is like herd imunity for the network. A misconfiguration in the ingress rules for the database host won't necessarily allow previously unauthorised hosts to communicate with it since their egress rules won't allow it. Intermediary Filtering Filtering at a point between the source and destination, including the network perimeter, is a way of reducing the traffic load on the destination host. Perimeter filtering is still a valid thing to do in a zero trust network since zero trust networks don't throw away all perimeter concepts, it just encourages administrators to start at the host and work outward when considering security. Perimeter filtering solves the problems introduced by allows large volumes of malcious traffic into the network to be filtered at the host. Filter out the worst, most obvious traffic, at the perimeter and let the hosts get the rest. Forwarding and Routing Authorisation Imagine an SDN controller that installed flow instructions on the firewall (either host or perimeter) only after successful authentication and authorisation of a client. The clients presents their credentials (device, user and application) to the control plane which singals the SDN controller to open up a route through the network to the requested host for a time limited period.","title":"8 - Trusting the Traffic"},{"location":"Books/Zero%20Trust%20Networks/08%20-%20Trusting%20the%20Traffic/#8-trusting-the-traffic","text":"","title":"8 - Trusting the Traffic"},{"location":"Books/Zero%20Trust%20Networks/08%20-%20Trusting%20the%20Traffic/#encryption-vs-authentication","text":"Encryption ensure that a message can only be read by the intended receiver, and authentication allows the receiver to assert that the sender is what they claim to be.","title":"Encryption vs Authentication"},{"location":"Books/Zero%20Trust%20Networks/08%20-%20Trusting%20the%20Traffic/#authenticity-without-encryption","text":"Omitting encryption from network traffic is rarely justifiable since it is rare to find traffic that doesn't require confidnetiality. There are few network protocols that provide strong authentication without encryption, so encryption can be seen as coming for free.","title":"Authenticity Without Encryption"},{"location":"Books/Zero%20Trust%20Networks/08%20-%20Trusting%20the%20Traffic/#bootstrapping-trust-the-first-packet","text":"A problem we have with authenticating network flows is how to we allow connections from authorised clients while silently dropping connection attempts from unauthorised clients? If we have an endpoint that needs to be accessed by clients from the internet, we don't want to reveal its existence to potential attackers by responding to every connection attempt. This is called the first packet problem , and is solved by a method called pre-authentication . Before an authorised client attempts to establish a TCP connection to the server, it first sends a UDP packet signed with its private key. Being signed indicates it is coming from an authorised client, and being UDP no response is required. The server silently opens a channel through the firewall, allowing the authorised client to connect to it. Any unknown client will not receive a response from the server since it did not send a pre-authentication packet. This mode of pre-authentication operation is called Single Packet Authorisation (SPA) . SPA is not a substitute for strong device authentication. It only downplays the first packet problem.","title":"Bootstrapping Trust: The First Packet"},{"location":"Books/Zero%20Trust%20Networks/08%20-%20Trusting%20the%20Traffic/#fwknop","text":"fwknop is an open source SPA implementation. It integrates with host firewalls to create tightly scoped rules that allows only the senders IP address to pass through a specific port. The configuration is removed after a certain time, typically 30 seconds. The connection details for the flow are contained in the SPA packet, including: - 16 bytes of rnadom data - local username - local timestamp - fwknop version - SPA message type - access request (which port, etc) - SPA message digest (SHA-256 by default) - HMAC (hashed message authentication code), optional It is strongly recommended to use HMAC with fwknop.","title":"fwknop"},{"location":"Books/Zero%20Trust%20Networks/08%20-%20Trusting%20the%20Traffic/#a-brief-introduction-to-network-models","text":"","title":"A Brief Introduction to Network Models"},{"location":"Books/Zero%20Trust%20Networks/08%20-%20Trusting%20the%20Traffic/#tcpip","text":"","title":"TCP/IP"},{"location":"Books/Zero%20Trust%20Networks/08%20-%20Trusting%20the%20Traffic/#osi-network-model","text":"Physical Layer : defines the interface between network hardware and the transmission medium, including things like voltage, pin layout, etc Data Link Layer : responsible for the transmission of data over the physical layer. Only considers transmission between directly connected nodes. Doesn't know about interconnected networks. Ethernet is the most well known protocol operating at this layer. Network Layer : responsible for transmitting packets between two interconnected networks, potentially over multiple layer 2 segments. Includes concepts to allow routing data to its destination by inspecting packet details such as IP address. Transport Layer : augmenting layer 3 protocols with desirable services. TCP and UDP are both layer 4 protocols. Some of these services include: Stateful connections Multiplexing Ordered delivery Flow control Retransmission Session Layer : Provides an additional layer of state over connections, allowing for communication resumption and communication through an intermediary. Several VPN (PPTP, L2TP) and proxy protocols (SOCKS) operate at this layer. Presentation Layer : Responsibile for handling the translation between application data and transmittable data streams. TLS operates at this layer. Application Layer : Provides the high level communication protocols that an application uses to communicate on the network. Some common protocols include HTTP, DNS and SSH.","title":"OSI Network Model"},{"location":"Books/Zero%20Trust%20Networks/08%20-%20Trusting%20the%20Traffic/#tcpip-network-model","text":"TCP/IP defines several layers that can roughly map to the OSI layers: - Link Layer - Internet Layer: layer 3 - Transport Layer: maps to layer 4, though includes the concept of a port which gives it some layer 5 characteristics - Application Layer: covers roughly layers 5-7 TCP/IP doesn't try to create strict boundaries between the layers, and in fact considers them harmful .","title":"TCP/IP Network Model"},{"location":"Books/Zero%20Trust%20Networks/08%20-%20Trusting%20the%20Traffic/#where-should-zero-trust-be-in-the-network-model","text":"Of the two predominant network security suites (TLS and IPsec) IPsec is the prefered option for encrypting network flows. TLS is found in the application layer of the TCP/IP model (between layers 5 and 6 in the OSI model), meaning it needs to be configured on a per-application basis. This is not sufficient for a zero trust network since we need to ensure that each network flow is authenticated. IPsec, on the other hand, operates at the Internet Layer of TCP/IP (layer 3 or 4 in the OSI model), and thus can be build into the fabric of our network ensuring that all flows are encrypted and authenticated by default, without any intervention from higher layers. For ensuring that each individual network flow is authorised, there are the following options: - IPsec can use a unique security association (SA) per application. - Filtering systems, such as software firewalls, can be layered on top of IPsec. - Application-level authorisation should be useds to ensure that communications are authorised, which encryption and authentication responsibilities are delegated to IPsec. - Mutual TLS and IPsec could be layered on top of each other for a defence in depth approach, at the expense of complexity.","title":"Where Should Zero Trust Be in the Network Model"},{"location":"Books/Zero%20Trust%20Networks/08%20-%20Trusting%20the%20Traffic/#client-and-server-split","text":"Despite its beneficial properties, IPsec's lack of real world popularity leads to the following problems: - network support issues - few networks in the wild, including AWS, support the ESP and AH protocols used by IPsec. - device support issues - IPsec has multiple configuration options that must match on both the client and server before they can communicate, and not all cipher suites might be implemented on one or the other. - application support issues - IPsec needs to be enabled and configured in the host kernel, whereas TLS is implemented via a library. This means any updates, such as applying security patches, can be more time consuming since it means updating the kernel then finding the application-specific configuration that needs changed.","title":"Client and Server Split"},{"location":"Books/Zero%20Trust%20Networks/08%20-%20Trusting%20the%20Traffic/#a-pragmatic-approach","text":"For client-server interactions, mutual TLS would be the most sensible approach where a browser is configured to present client certificates to server-side access proxies. For server-server interactions, where the server fleet are generally under more controlled configuration, IPsec would be reasonable, with UDP encapsulation where IPsec isn't supported. The IPv6 standard includes IPsec, so it is hoped that it will become more commonplace in the future.","title":"A Pragmatic Approach"},{"location":"Books/Zero%20Trust%20Networks/08%20-%20Trusting%20the%20Traffic/#the-protocols","text":"It's important to understand the inner workings of both TLS and IPsec since they are both complictaed to configure, and this insecure configurations are common.","title":"The Protocols"},{"location":"Books/Zero%20Trust%20Networks/08%20-%20Trusting%20the%20Traffic/#ikeipsec","text":"","title":"IKE/IPsec"},{"location":"Books/Zero%20Trust%20Networks/08%20-%20Trusting%20the%20Traffic/#mutually-authenticated-tls","text":"","title":"Mutually Authenticated TLS"},{"location":"Books/Zero%20Trust%20Networks/08%20-%20Trusting%20the%20Traffic/#filtering","text":"Filtering is the act of accepting or rejecting traffic entering or leaving the network, and can be done in one of three ways: - Host filtering - Filtering of traffic at the host - Bookended filtering - Filtering of traffic by a peer host in the network - Intermediary filtering - Filtering of traffic by devices in between two hosts.","title":"Filtering"},{"location":"Books/Zero%20Trust%20Networks/08%20-%20Trusting%20the%20Traffic/#host-filtering","text":"This is where filtering happens at a software firewall on the host instance, the destination for the traffic. The benefit of this is that sofwtare firewalls are more flexible than hardware-based ones, since hardware firewalls make use of features of the hardware fo perform the filtering in a performant way. There are, however, a number of drawbacks to this model: - an attacker who gains access to the host can disbale its firewall, rendering the host defenceless if this is the only filter available. This problem can be mitigated by making use of hypervisor-level filtering, such as EC2 security groups. - allowing the traffic deep into the network before dropping it can lead to additional costs of running the network, as well as allowing for denial of service attacks as the traffic can overwelm other parts of the network before it reaches the host","title":"Host Filtering"},{"location":"Books/Zero%20Trust%20Networks/08%20-%20Trusting%20the%20Traffic/#bookended-filtering","text":"This is where both ingress and egress rules are used to harden the internal network. As well as a host having ingress rules for trafic allowed to reach it, it also has egress rules for the traffic its allowed to send to other hosts. In this scenario, not only must traffic be authorised to leave its source, it must also be authorised to enter its destination. This is like herd imunity for the network. A misconfiguration in the ingress rules for the database host won't necessarily allow previously unauthorised hosts to communicate with it since their egress rules won't allow it.","title":"Bookended Filtering"},{"location":"Books/Zero%20Trust%20Networks/08%20-%20Trusting%20the%20Traffic/#intermediary-filtering","text":"Filtering at a point between the source and destination, including the network perimeter, is a way of reducing the traffic load on the destination host. Perimeter filtering is still a valid thing to do in a zero trust network since zero trust networks don't throw away all perimeter concepts, it just encourages administrators to start at the host and work outward when considering security. Perimeter filtering solves the problems introduced by allows large volumes of malcious traffic into the network to be filtered at the host. Filter out the worst, most obvious traffic, at the perimeter and let the hosts get the rest.","title":"Intermediary Filtering"},{"location":"Books/Zero%20Trust%20Networks/08%20-%20Trusting%20the%20Traffic/#forwarding-and-routing-authorisation","text":"Imagine an SDN controller that installed flow instructions on the firewall (either host or perimeter) only after successful authentication and authorisation of a client. The clients presents their credentials (device, user and application) to the control plane which singals the SDN controller to open up a route through the network to the requested host for a time limited period.","title":"Forwarding and Routing Authorisation"},{"location":"Books/Zero%20Trust%20Networks/09%20-%20Realising%20a%20Zero%20Trust%20Network/","text":"9 - Realising a Zero Trust Network","title":"9 - Realising a Zero Trust Network"},{"location":"Books/Zero%20Trust%20Networks/09%20-%20Realising%20a%20Zero%20Trust%20Network/#9-realising-a-zero-trust-network","text":"","title":"9 - Realising a Zero Trust Network"},{"location":"Books/Zero%20Trust%20Networks/10%20-%20The%20Adversarial%20View/","text":"10 - The Adversarial View","title":"10 - The Adversarial View"},{"location":"Books/Zero%20Trust%20Networks/10%20-%20The%20Adversarial%20View/#10-the-adversarial-view","text":"","title":"10 - The Adversarial View"},{"location":"Books/Zero%20Trust%20Networks/Quotes/","text":"The ability to actively adjust access based on the riskiness of activity on a network is one of the several features that make zero trust networks more secure. Instead of defining binary policy decisions assigned to specific actors in the network, a zero trust network will continuously monitor the actions of an actor on the network to update their trust score.","title":"Quotes"},{"location":"Courses/30%20Days%20to%20Better%20Writing/","text":"Title: 30 Days to Better Writing Tags: [kind/course] URL: https://seanwes.com/courses/30-days-to-better-writing/","title":"30 Days to Better Writing"},{"location":"Courses/Lean%20Agile%20University/","text":"Neil's Notes: https://neils-notes.notion.site/Notes-from-lean-agile-university-ecc73121e19d423ca873b3a9a2e3fb0c","title":"Lean Agile University"},{"location":"Courses/Learn%20Wardly%20Mapping/","text":"Title: Learn Wardly Mapping Tags: [kind/course status/todo] URL: https://learnwardleymapping.com/","title":"Learn Wardly Mapping"},{"location":"Courses/Learning%20How%20To%20Learn/","text":"Title: Learning How To Learn Tags: [kind/course status/todo] URL: https://www.coursera.org/learn/learning-how-to-learn","title":"Learning How To Learn"},{"location":"Courses/The%20Ultimate%20Guide%20to%20Agile%20Retrospectives/","text":"Title: The Ultimate Guide to Agile Retrospectives Tags: [kind/course status/todo] URL: https://www.retrium.com/ultimate-guide-to-agile-retrospectives/intro","title":"The Ultimate Guide to Agile Retrospectives"},{"location":"Courses/Ultraspeaking/","text":"Title: Ultraspeaking Tags: [kind/course status/todo] URL: https://ultraspeaking.com/fundamentals-waitlist","title":"Ultraspeaking"}]}